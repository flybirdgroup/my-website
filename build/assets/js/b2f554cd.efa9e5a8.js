"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1477],{30010:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"welcome","metadata":{"permalink":"/blog/welcome","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2021-08-26-welcome/index.md","source":"@site/blog/2021-08-26-welcome/index.md","title":"Welcome","description":"Docusaurus blogging features are powered by the blog plugin.","date":"2021-08-26T00:00:00.000Z","formattedDate":"August 26, 2021","tags":[{"label":"facebook","permalink":"/blog/tags/facebook"},{"label":"hello","permalink":"/blog/tags/hello"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"}],"readingTime":0.405,"hasTruncateMarker":false,"authors":[{"name":"S\xe9bastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","imageURL":"https://github.com/slorber.png","key":"slorber"},{"name":"Yangshun Tay","title":"Front End Engineer @ Facebook","url":"https://github.com/yangshun","imageURL":"https://github.com/yangshun.png","key":"yangshun"}],"frontMatter":{"slug":"welcome","title":"Welcome","authors":["slorber","yangshun"],"tags":["facebook","hello","docusaurus"]},"nextItem":{"title":"MDX Blog Post","permalink":"/blog/mdx-blog-post"}},"content":"[Docusaurus blogging features](https://docusaurus.io/docs/blog) are powered by the [blog plugin](https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog).\\n\\nSimply add Markdown files (or folders) to the `blog` directory.\\n\\nRegular blog authors can be added to `authors.yml`.\\n\\nThe blog post date can be extracted from filenames, such as:\\n\\n- `2019-05-30-welcome.md`\\n- `2019-05-30-welcome/index.md`\\n\\nA blog post folder can be convenient to co-locate blog post images:\\n\\n![Docusaurus Plushie](./docusaurus-plushie-banner.jpeg)\\n\\nThe blog supports tags as well!\\n\\n**And if you don\'t want a blog**: just delete this directory, and use `blog: false` in your Docusaurus config."},{"id":"mdx-blog-post","metadata":{"permalink":"/blog/mdx-blog-post","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2021-08-01-mdx-blog-post.mdx","source":"@site/blog/2021-08-01-mdx-blog-post.mdx","title":"MDX Blog Post","description":"Blog posts support Docusaurus Markdown features, such as MDX.","date":"2021-08-01T00:00:00.000Z","formattedDate":"August 1, 2021","tags":[{"label":"docusaurus","permalink":"/blog/tags/docusaurus"}],"readingTime":0.175,"hasTruncateMarker":false,"authors":[{"name":"S\xe9bastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","imageURL":"https://github.com/slorber.png","key":"slorber"}],"frontMatter":{"slug":"mdx-blog-post","title":"MDX Blog Post","authors":["slorber"],"tags":["docusaurus"]},"prevItem":{"title":"Welcome","permalink":"/blog/welcome"},"nextItem":{"title":"\u901a\u8fc7Composer\u4f7f\u7528Airflow\u8fd0\u884c\u4e00\u4e2aworkflow","permalink":"/blog/2020/6/12/Airflow_Dataproc"}},"content":"Blog posts support [Docusaurus Markdown features](https://docusaurus.io/docs/markdown-features), such as [MDX](https://mdxjs.com/).\\n\\n:::tip\\n\\nUse the power of React to create interactive blog posts.\\n\\n```js\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>\\n```\\n\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>\\n\\n:::"},{"id":"/2020/6/12/Airflow_Dataproc","metadata":{"permalink":"/blog/2020/6/12/Airflow_Dataproc","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-6-12-Airflow_Dataproc.md","source":"@site/blog/2020-6-12-Airflow_Dataproc.md","title":"\u901a\u8fc7Composer\u4f7f\u7528Airflow\u8fd0\u884c\u4e00\u4e2aworkflow","description":"\u521b\u5efaComposer by setting up Composer environment >> create a workflow py file >>  \u521b\u5efaDataproc >> Runs Hadoop job on Dataproc >> deletes Dataproc cluster","date":"2020-06-12T00:00:00.000Z","formattedDate":"June 12, 2020","tags":[{"label":"facebook","permalink":"/blog/tags/facebook"},{"label":"hello","permalink":"/blog/tags/hello"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"},{"label":"google cloud","permalink":"/blog/tags/google-cloud"},{"label":"linux","permalink":"/blog/tags/linux"}],"readingTime":6.2,"hasTruncateMarker":false,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI engine @ Facebook","url":"https://github.com/flybirdgroup"}],"frontMatter":{"id":"Airflow1","title":"\u901a\u8fc7Composer\u4f7f\u7528Airflow\u8fd0\u884c\u4e00\u4e2aworkflow","author":"\u62db\u6653\u8d24","author_title":"AI engine @ Facebook","author_url":"https://github.com/flybirdgroup","tags":["facebook","hello","docusaurus","google cloud","linux"]},"prevItem":{"title":"MDX Blog Post","permalink":"/blog/mdx-blog-post"},"nextItem":{"title":"\u4e91\u4e0a\u5feb\u901f\u642d\u5efaWordPress\u7f51\u7ad9","permalink":"/blog/2020/6/12/\u5feb\u901f\u642d\u5efawordpress\u7f51\u7ad9"}},"content":"\u521b\u5efaComposer by setting up Composer environment >> create a workflow py file >>  \u521b\u5efaDataproc >> Runs Hadoop job on Dataproc >> deletes Dataproc cluster\\n\\n## step1 Create Enviroment and set up the Enviroment\\n```\\nName: highcpu\\n\\nLocation: us-central1\\n\\nZone: us-central1-a\\n\\nMachine type: n1-highcpu-4\\n\\nPython version 3\\n```\\n![png](../img/airflow/1-1.png)\\n![png](../img/airflow/k-1.png)\\n![png](../img/airflow/k-2.png)\\n\\n## step2 \u521b\u5efaGCS bucket\\n\u8981\u8bb0\u4f4fbucket\u540d\u5b57, \u56e0\u4e3a\u8fd9\u4e2a\u662f\u653eDAG file\u7684\\n\\n\\n## step3 \u4e86\u89e3\u6838\u5fc3\u6982\u5ff5\\nAirflow\u662f\u4e00\u4e2a\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u7f16\u5199\uff0c\u5b89\u6392\u548c\u76d1\u89c6\u5de5\u4f5c\u6d41\u7684\u5e73\u53f0\u3002\\n\u4f7f\u7528Airflow\u5c06\u5de5\u4f5c\u6d41\u7f16\u5199\u4e3a\u4efb\u52a1\u7684\u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09, \u5c31\u662f\u5355\u5411\u7684\\n\\nDAG: \u6709\u5411\u65e0\u73af\u56fe\u662f\u60a8\u8981\u8fd0\u884c\u7684\u6240\u6709\u4efb\u52a1\u7684\u96c6\u5408\uff0c\u4ee5\u53cd\u6620\u5176\u5173\u7cfb\u548c\u4f9d\u8d56\u6027\u7684\u65b9\u5f0f\u8fdb\u884c\u7ec4\u7ec7\u3002\\n\\nOperator: \u5c31\u662f\u5bf9\u5355\u4e00\u4efb\u52a1\u7684\u63cf\u8ff0\\n\\nTask: \u64cd\u4f5c\u5458\u7684\u53c2\u6570\u5316\u5b9e\u4f8b\uff1bDAG\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\\n\\nTask Instance: \u4efb\u52a1\u7684\u7279\u5b9a\u8fd0\u884c\uff1b\u5176\u7279\u5f81\u662f\uff1aDAG\uff0c\u4efb\u52a1\u548c\u65f6\u95f4\u70b9\u3002\u5b83\u5177\u6709\u6307\u793a\u6027\u72b6\u6001\uff1a\u8fd0\u884c\uff0c\u6210\u529f\uff0c\u5931\u8d25\uff0c\u8df3\u8fc7\\n\\n[\u66f4\u591a\u6982\u5ff5\u53ef\u4ee5\u67e5\u770b\u94fe\u63a5](https://airflow.apache.org/docs/stable/concepts.html#)\\n\\n## step4: \u8bbe\u5b9a\u4e00\u4e2aworkflow \u5de5\u4f5c\u6d41\\n\\n1. Composer workflows\u662f\u7531DAGs\u7ec4\u6210\u7684. DAGs \u5c31\u662f\u88ab\u5b9a\u4e49\u597d\u7684\u6807\u51c6python\u6587\u4ef6, \u8fd9\u4e9b\u6587\u4ef6\u90fd\u662f\u653e\u5728Airflow\u7684DAG_FOLDER\u4e2d.\\n2. Airflow\u4f1a\u52a8\u6001\u5730\u6267\u884cpython\u6587\u4ef6\u7684\u4ee3\u7801\u6765\u6784\u5efaDAGs\u5bf9\u8c61\\n3. \u60a8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u62e5\u6709\u4efb\u610f\u6570\u91cf\u7684DAG\uff0c\u6bcf\u4e2aDAG\u63cf\u8ff0\u4efb\u610f\u6570\u91cf\u7684\u4efb\u52a1\u3002\u901a\u5e38\uff0c\u6bcf\u4e2aDAG\u5e94\u5bf9\u5e94\u4e00\u4e2a\u903b\u8f91\u5de5\u4f5c\u6d41\u7a0bworkflow\u3002\\n\\n```\\n\\"\\"\\"Example Airflow DAG that creates a Cloud Dataproc cluster, runs the Hadoop\\nwordcount example, and deletes the cluster.\\nThis DAG relies on three Airflow variables\\nhttps://airflow.apache.org/concepts.html#variables\\n\u8fd9\u91cc\u662f\u5728airflow web interface\u7684admin>>varibale\u8bbe\u7f6e\u7684\\n* gcp_project - Google Cloud Project to use for the Cloud Dataproc cluster.\\n* gce_zone - Google Compute Engine zone where Cloud Dataproc cluster should be\\n  created.\\n* gcs_bucket - Google Cloud Storage bucket to use for result of Hadoop job.\\n  See https://cloud.google.com/storage/docs/creating-buckets for creating a\\n  bucket.\\n\\"\\"\\"\\n\\nimport datetime\\nimport os\\n\\nfrom airflow import models\\nfrom airflow.contrib.operators import dataproc_operator\\nfrom airflow.utils import trigger_rule\\n\\n# Output file for Cloud Dataproc job. \u8f93\u51fa\u6587\u4ef6\u5730\u5740\\n# \u8f93\u51fa\u7684\u5730\u5740\u662f\u901a\u8fc7gcs+\u6587\u4ef6\u540d\u5b57(wordcount) + \u65f6\u95f4 + \'/\'\\noutput_file = os.path.join(\\n    models.Variable.get(\'gcs_bucket\'), \'wordcount\',\\n    datetime.datetime.now().strftime(\'%Y%m%d-%H%M%S\')) + os.sep\\n# Path to Hadoop wordcount example available on every Dataproc cluster.\\nWORDCOUNT_JAR = (\\n    \'file:///usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar\'\\n)\\n# Arguments to pass to Cloud Dataproc job.\\nwordcount_args = [\'wordcount\', \'gs://pub/shakespeare/rose.txt\', output_file]\\n\\nyesterday = datetime.datetime.combine(\\n    datetime.datetime.today() - datetime.timedelta(1),\\n    datetime.datetime.min.time())\\n\\ndefault_dag_args = {\\n    # Setting start date as yesterday starts the DAG immediately when it is\\n    # detected in the Cloud Storage bucket.\\n    \'start_date\': yesterday,\\n    # To email on failure or retry set \'email\' arg to your email and enable\\n    # emailing here.\\n    \'email_on_failure\': False,\\n    \'email_on_retry\': False,\\n    # If a task fails, retry it once after waiting at least 5 minutes\\n    \'retries\': 1,\\n    \'retry_delay\': datetime.timedelta(minutes=5),\\n    \'project_id\': models.Variable.get(\'gcp_project\')\\n}\\n\\n# [START composer_hadoop_schedule]\\nwith models.DAG(\\n        \'composer_hadoop_tutorial\',\\n        # Continue to run DAG once per day\\n        schedule_interval=datetime.timedelta(days=1),\\n        default_args=default_dag_args) as dag:\\n    # [END composer_hadoop_schedule]\\n\\n    # Create a Cloud Dataproc cluster.\\n    create_dataproc_cluster = dataproc_operator.DataprocClusterCreateOperator(\\n        task_id=\'create_dataproc_cluster\',\\n        # Give the cluster a unique name by appending the date scheduled.\\n        # See https://airflow.apache.org/code.html#default-variables\\n        cluster_name=\'composer-hadoop-tutorial-cluster-{{ ds_nodash }}\',\\n        num_workers=2,\\n        zone=models.Variable.get(\'gce_zone\'),\\n        master_machine_type=\'n1-standard-1\',\\n        worker_machine_type=\'n1-standard-1\')\\n\\n    # Run the Hadoop wordcount example installed on the Cloud Dataproc cluster\\n    # master node.\\n    run_dataproc_hadoop = dataproc_operator.DataProcHadoopOperator(\\n        task_id=\'run_dataproc_hadoop\',\\n        main_jar=WORDCOUNT_JAR,\\n        cluster_name=\'composer-hadoop-tutorial-cluster-{{ ds_nodash }}\',\\n        arguments=wordcount_args)\\n\\n    # Delete Cloud Dataproc cluster.\\n    delete_dataproc_cluster = dataproc_operator.DataprocClusterDeleteOperator(\\n        task_id=\'delete_dataproc_cluster\',\\n        cluster_name=\'composer-hadoop-tutorial-cluster-{{ ds_nodash }}\',\\n        # Setting trigger_rule to ALL_DONE causes the cluster to be deleted\\n        # even if the Dataproc job fails.\\n        trigger_rule=trigger_rule.TriggerRule.ALL_DONE)\\n\\n    # [START composer_hadoop_steps]\\n    # Define DAG dependencies.\\n    create_dataproc_cluster >> run_dataproc_hadoop >> delete_dataproc_cluster\\n    # [END composer_hadoop_steps]\\n```\\n\\n## \u4e3a\u4e86\u534f\u8c03\u8fd9\u4e09\u4e2a\u5de5\u4f5c\u6d41\u7a0b\u4efb\u52a1\uff0cDAG\u5bfc\u5165\u4e86\u4ee5\u4e0b\u8fd0\u7b97\u7b26\uff1a\\n\\nDataprocClusterCreateOperator\uff1a\u521b\u5efa\u4e00\u4e2aCloud Dataproc\u96c6\u7fa4\u3002\\nDataProcHadoopOperator\uff1a\u63d0\u4ea4Hadoop wordcount\u4f5c\u4e1a\u5e76\u5c06\u7ed3\u679c\u5199\u5165Cloud Storage\u5b58\u50a8\u6876\u3002\\nDataprocClusterDeleteOperator\uff1a\u5220\u9664\u7fa4\u96c6\u4ee5\u907f\u514d\u4ea7\u751f\u6301\u7eed\u7684Compute Engine\u8d39\u7528\u3002\\n\\n\u4efb\u52a1\u6309\u987a\u5e8f\u8fd0\u884c\uff0c\u60a8\u53ef\u4ee5\u5728\u6587\u4ef6\u7684\u6b64\u90e8\u5206\u4e2d\u770b\u5230\\n```\\n# Define DAG dependencies.\\ncreate_dataproc_cluster >> run_dataproc_hadoop >> delete_dataproc_cluster\\n```\\n\\nDAG\u7684\u540d\u79f0\u4e3ahadoop_tutorial\uff0c\u5e76\u4e14DAG\u6bcf\u5929\u8fd0\u884c\u4e00\u6b21\u3002\\n```\\nwith models.DAG(\\n        \'composer_hadoop_tutorial\',\\n        # Continue to run DAG once per day\\n        schedule_interval=datetime.timedelta(days=1),\\n        default_args=default_dag_args) as dag:\\n```\\n\u7531\u4e8estart_date\u4f20\u9012\u7ed9default_dag_args\u7684\u8bbe\u7f6e\u4e3ayesterday\uff0c\u56e0\u6b64Cloud Composer\u5b89\u6392\u5de5\u4f5c\u6d41\u5728DAG\u4e0a\u4f20\u540e\u7acb\u5373\u5f00\u59cb\u3002\\n\\n## step5 \u8bbe\u7f6eairflow\u53d8\u91cf\\n\\n1. \u53bbairflow web interface \\n\\n![png](../img/airflow/1.png)\\n\\n2. \u521b\u5efa\u4ee5\u4e0bAireflow\u53d8\u91cfgcp_project\uff0cgcs_bucket\u4ee5\u53cagce_zone\uff1a\\n![png](../img/airflow/2.png)\\n\\n## step6 \u5c06DAG\u4e0a\u8f7d\u5230\u4e91\u5b58\u50a8\\n\u5728Cloud Shell\u4e2d\uff0c\u5c06hadoop_tutorial.py\u590d\u5236\u5e76\u4fdd\u5b58\u5728\u672c\u5730\u865a\u62df\u673a\u4e0a\\n```\\ngit clone https://github.com/GoogleCloudPlatform/python-docs-samples\\n```\\n\\n\u8f6c\u5230python-docs-samples\u76ee\u5f55\uff1a\\n```\\ncd python-docs-samples/composer/workflows\\n```\\n\\n\u73b0\u5728\uff0c\u5c06hadoop_tutorial.py\u6587\u4ef6\u7684\u526f\u672c\u4e0a\u8f7d\u5230Cloud Storage\u5b58\u50a8\u6876\uff0c\u8be5\u5b58\u50a8\u6876\u5728\u521b\u5efa\u73af\u5883\u65f6\u4f1a\u81ea\u52a8\u521b\u5efa\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u8f6c\u5230Composer > \u73af\u5883\u8fdb\u884c\u68c0\u67e5\u3002\u5355\u51fb\u60a8\u5148\u524d\u521b\u5efa\u7684\u73af\u5883\uff0c\u8fd9\u5c06\u5e26\u60a8\u8fdb\u5165\u6240\u521b\u5efa\u73af\u5883\u7684\u63cf\u8ff0\u3002\u67e5\u627eDAGs folder\uff0c\u590d\u5236\u8981\u66ff\u6362\u7684\u503c\uff0cDAGs_folder_path\u5e76\u5728\u4ee5\u4e0b\u547d\u4ee4\u4e2d\u4e0a\u4f20\u6587\u4ef6\uff1a\\n```\\ngsutil cp hadoop_tutorial.py DAGs_folder_path\\n```\\n![png](../img/airflow/3.png)\\n\\n\\n\u63a2\u7d22DAG\u8fd0\u884c\\n\u5f53\u60a8\u5c06DAG\u6587\u4ef6\u4e0a\u4f20\u5230dagsCloud Storage\u4e2d\u7684\u6587\u4ef6\u5939\u65f6\uff0cCloud Composer\u4f1a\u89e3\u6790\u8be5\u6587\u4ef6\u3002\u5982\u679c\u672a\u627e\u5230\u9519\u8bef\uff0c\u5219\u5de5\u4f5c\u6d41\u7684\u540d\u79f0\u5c06\u663e\u793a\u5728DAG\u5217\u8868\u4e2d\uff0c\u5e76\u4e14\u8be5\u5de5\u4f5c\u6d41\u5df2\u6392\u961f\u7b49\u5f85\u7acb\u5373\u8fd0\u884c\u3002\\n\\n\u786e\u4fdd\u60a8\u5728Airflow Web\u754c\u9762\u7684DAG\u9009\u9879\u5361\u4e0a\u3002\u6b64\u8fc7\u7a0b\u9700\u8981\u51e0\u5206\u949f\u624d\u80fd\u5b8c\u6210\u3002\u5237\u65b0\u6d4f\u89c8\u5668\u4ee5\u786e\u4fdd\u60a8\u6b63\u5728\u67e5\u770b\u6700\u65b0\u4fe1\u606f\u3002\\n![png](../img/airflow/4.png)\\n![png](../img/airflow/5.png)\\n![png](../img/airflow/6.png)\\n\\n## step7 \u91cd\u65b0\u8fd0\u884c\u5de5\u4f5c\u6d41\u7a0b\\n1. \u5355\u51fbcreate_dataproc_cluster\u56fe\u5f62\u3002\\n2. \u5355\u51fb\u6e05\u9664\u4ee5\u91cd\u7f6e\u4e09\u4e2a\u4efb\u52a1\u3002\\n3. \u7136\u540e\u5355\u51fb\u786e\u5b9a\u8fdb\u884c\u786e\u8ba4\u3002\u8bf7\u6ce8\u610f\uff0ccreate_dataproc_cluster\u5468\u56f4\u7684\u989c\u8272\u5df2\u66f4\u6539\uff0c\u72b6\u6001\u4e3a\u201c\u6b63\u5728\u8fd0\u884c\u201d\u3002\\n![png](../img/airflow/7.png)\\n\\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230dataproc\u5177\u4f53\u7684\u8fd0\u884c\u60c5\u51b5\\n![png](../img/airflow/d-1.png)\\n![png](../img/airflow/d-2.png)\\n![png](../img/airflow/d-3.png)\\n\\njob\u5b8c\u6210\u540e,GSC\u7684\u60c5\u51b5\\n![png](../img/airflow/gs-1.png)\\n![png](../img/airflow/gs-2.png)\\n![png](../img/airflow/gs-3.png)"},{"id":"/2020/6/12/\u5feb\u901f\u642d\u5efawordpress\u7f51\u7ad9","metadata":{"permalink":"/blog/2020/6/12/\u5feb\u901f\u642d\u5efawordpress\u7f51\u7ad9","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-6-12-\u5feb\u901f\u642d\u5efawordpress\u7f51\u7ad9.md","source":"@site/blog/2020-6-12-\u5feb\u901f\u642d\u5efawordpress\u7f51\u7ad9.md","title":"\u4e91\u4e0a\u5feb\u901f\u642d\u5efaWordPress\u7f51\u7ad9","description":"\u6211\u4eec\u5c06\u4f1a\u5728\u8fd9\u53f0\u670d\u52a1\u5668\u4e0a\u642d\u5efa\u548c\u90e8\u7f72LAMP\u73af\u5883\uff0c\u7136\u540e\u5b89\u88c5WordPress\u7f51\u7ad9\uff0c\u6700\u540e\u5411\u5927\u5bb6\u5c55\u793a\u5982\u4f55\u5728WordPress\u7f51\u7ad9\u4f7f\u7528\u5fae\u535a\u6302\u4ef6\u548c\u7f51\u7ad9\u7edf\u8ba1\u5e73\u53f0","date":"2020-06-12T00:00:00.000Z","formattedDate":"June 12, 2020","tags":[{"label":"facebook","permalink":"/blog/tags/facebook"},{"label":"hello","permalink":"/blog/tags/hello"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"},{"label":"google cloud","permalink":"/blog/tags/google-cloud"},{"label":"linux","permalink":"/blog/tags/linux"}],"readingTime":3.785,"hasTruncateMarker":false,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI engine @ Facebook","url":"https://github.com/flybirdgroup"}],"frontMatter":{"id":"WordPress","title":"\u4e91\u4e0a\u5feb\u901f\u642d\u5efaWordPress\u7f51\u7ad9","author":"\u62db\u6653\u8d24","author_title":"AI engine @ Facebook","author_url":"https://github.com/flybirdgroup","tags":["facebook","hello","docusaurus","google cloud","linux"]},"prevItem":{"title":"\u901a\u8fc7Composer\u4f7f\u7528Airflow\u8fd0\u884c\u4e00\u4e2aworkflow","permalink":"/blog/2020/6/12/Airflow_Dataproc"},"nextItem":{"title":"\u4f7f\u7528GKE(Google Kubernetes Engine)\u90e8\u7f72\u5bb9\u5668\u5316\u5e94\u7528 \u8c37\u6b4c\u4e91\u5feb\u901f\u5165\u95e8(\u4e09)","permalink":"/blog/2020/5/1/Kubernetes"}},"content":"\u6211\u4eec\u5c06\u4f1a\u5728\u8fd9\u53f0\u670d\u52a1\u5668\u4e0a\u642d\u5efa\u548c\u90e8\u7f72LAMP\u73af\u5883\uff0c\u7136\u540e\u5b89\u88c5WordPress\u7f51\u7ad9\uff0c\u6700\u540e\u5411\u5927\u5bb6\u5c55\u793a\u5982\u4f55\u5728WordPress\u7f51\u7ad9\u4f7f\u7528\u5fae\u535a\u6302\u4ef6\u548c\u7f51\u7ad9\u7edf\u8ba1\u5e73\u53f0\\n\\n## step1 Login the vm instance\\n\\n![png](../img/aliyun/wordpress/1.png)\\n\\n## step2.1 \u642d\u5efa\u5f00\u53d1\u73af\u5883\\n```\\nyum -y install httpd\\nyum -y install httpd-manual mod_ssl mod_perl mod_auth_mysql #\u5b89\u88c5 apache \u7684\u6269\u5c55\u6587\u4ef6\u3002\\nservice httpd start #\u542f\u52a8 apache http \u670d\u52a1\u3002\\nchkconfig httpd on \u8bbe\u7f6e\u5f00\u673a\u81ea\u52a8\u542f\u52a8 apache http \u670d\u52a1\u3002\\n```\\n\\n## step2.2 \u6821\u9a8c\\n\u53bb\u516c\u7f51ip\u67e5\u770b\\n\\n## step2.3: \u4e0b\u8f7d\u548c\u5b89\u88c5MySQL\u6570\u636e\u5e93\\n\\n```\\nyum -y install mysql mysql-server\\nservice mysqld start #\u542f\u52a8\u670d\u52a1\\nmysql_secure_installation #\u4fee\u6539 MySQL \u6570\u636e\u5e93 root \u7528\u6237\u7684\u5bc6\u7801\uff0c\u5e76\u63d0\u9ad8 MySQL \u6570\u636e\u5e93\u7684\u5b89\u5168\u6027\u3002\\n```\\n```\\n# \u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\\nmysql -uroot -p123\\n\\nshow databases;\\n\\ncreate database wordpress;\\n\\nshow databases;\\n\\nexit\\n\\nchkconfig mysqld on #\u8bbe\u7f6e\u5f00\u673a\u81ea\u52a8\u542f\u52a8MySQL\u670d\u52a1\\n```\\n![png](../img/aliyun/wordpress/2.png)\\n\\n\\n## step2.4: \u5b89\u88c5PHP\u8bed\u8a00\u73af\u5883\\n```\\nyum -y install php php-mysql\\nyum -y install gd php-gd gd-devel php-xml php-common php-mbstring php-ldap php-pear php-xmlrpc php-imap #\u5b89\u88c5 php \u5e38\u7528\u6269\u5c55\u5305\\nservice httpd restart #\u91cd\u542f\u670d\u52a1,\u8fd9\u6b65\u5f88\u91cd\u8981,\u5fc5\u987b\u91cd\u542f\\n\\necho \\"<?php phpinfo(); ?>\\" > /var/www/html/phpinfo.php #\u6267\u884c\u6b64\u547d\u4ee4\uff0c\u521b\u5efa\u4e00\u4e2a php \u9875\u9762\uff0c\u6d4b\u8bd5 PHP \u73af\u5883\\n```\\n\\n## step2.5 \u5728\u6d4f\u89c8\u5668\u6d4b\u8bd5php\u9875\u9762\\n```\\n\u5f39\u6027ip/phpinfo.php\\n```\\n![png](../img/aliyun/wordpress/3.png)\\n\\n## step3 \u5b89\u88c5\u90e8\u7f72wordpress\\n\u4e0b\u8f7d\u4e2d\u6587\u7248WordPress\u5b89\u88c5\u5305\uff0c\u8bf7\u70b9\u51fb\u94fe\u63a5 https://cn.wordpress.org/\uff0c\u8fd9\u4e2a\u662fWordPress\u4e2d\u6587\u5b98\u7f51\uff0c\u53ef\u4ee5\u627e\u5230\u6700\u65b0\u7684\u7248\u672c\u5e76\u4e0b\u8f7d\u5b89\u88c5\uff1b \u4e0b\u8f7d\u5b8c\u6210\u540e,\u89e3\u538b\\n```\\ntar -xzf wordpress-4.7.4-zh_CN.tar.gz\\nls\\n```\\n### \u5907\u4efd WordPress \u914d\u7f6e\u6587\u4ef6\uff0c\u5e76\u5c06\u539f\u6709\u7684\u793a\u4f8b\u914d\u7f6e\u6587\u4ef6\u6837\u672c\u4fdd\u7559\u3002\\n```\\ncd wordpress\\ncp wp-config-sample.php wp-config.php\\n```\\n### \u8fdb\u5165 wp-config.php \u7684\u7f16\u8f91\u9875\u9762\uff1a\\n```\\nvim wp-config.php\\n```\\n### \u6309\u952e\u76d8 i \uff0c\u8fdb\u5165\u7f16\u8f91\u72b6\u6001\uff0c\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u7684\u6570\u636e\u5e93\u4fe1\u606f\uff1a\u4fee\u6539 DB_NAME \u7684\u53c2\u6570\u503c database_name_here \u4e3a\u4e4b\u524d\u521b\u5efa\u7684\u6570\u636e\u5e93 wordpress\uff1a\\n```\\ndefine(\'DB_NAME\', \'wordpress\');\\n```\\n\\n### \u4fee\u6539 DB_USER \u7684\u53c2\u6570\u503c username_here \u4e3a root :\\n```\\ndefine(\'DB_USER\', \'root\');\\n```\\n\\n### \u4fee\u6539 DB_PASSWORD \u7684\u53c2\u6570\u503c password_here \u4e3a 123 :\\n\\n### \u4fee\u6539\u5b8c\u6bd5\u540e\uff0c\u70b9\u51fb esc \uff0c\u9000\u51fa\u7f16\u8f91\u72b6\u6001\uff0c\u7136\u540e\u8f93\u5165 :wq \uff0c\u4fdd\u5b58\u4fee\u6539\u4fe1\u606f\u5e76\u9000\u51fa\u914d\u7f6e\u6587\u4ef6\\n\\n### \u5728 Apache \u7684\u6839\u76ee\u5f55 /var/www/html \u4e0b\uff0c\u521b\u5efa\u4e00\u4e2a wp-blog \u6587\u4ef6\u5939\u3002\\n```\\nmkdir /var/www/html/wp-blog\\n```\\n### \u7136\u540e\uff0c\u5c06 wordpress \u8fc1\u79fb\u5230\u8fd9\u4e2a\u65b0\u5efa\u6587\u4ef6\u5939\u4e2d\u3002\\n```\\nmv * /var/www/html/wp-blog/\\n```\\n\\n### \u5b8c\u6210\u5982\u4e0a\u914d\u7f6e\u540e\uff0c\u8fd4\u56de\u6d4f\u89c8\u5668\uff0c\u5e76\u8bbf\u95ee http://xxx.xxx.xx.x/wp-blog/wp-admin/install.php \uff0c\u5176\u4e2d xxx.xxx.xx.x \u4e3a ECS \u5b9e\u4f8b\u7684 \u5f39\u6027IP \uff0c\u586b\u5199\u5982\u4e0b\u4fe1\u606f\uff0c\u5b8c\u6210\u540e\uff0c\u70b9\u51fb\u9875\u9762\u5e95\u90e8\u7684 \u5b89\u88c5WordPress \uff0c\u5f00\u59cb\u5b89\u88c5 WordPress \u3002\\n![png](../img/aliyun/wordpress/4.png)\\n\\n\u83b7\u5f97\u5bc6\u7801: MsLE1ppUhzV!95xOyq\\n\\n![png](../img/aliyun/wordpress/5.png)\\n![png](../img/aliyun/wordpress/6.png)\\n\\n## step4 \u4f7f\u7528CNZZ\u5e2e\u4f60\u6210\u4e3a\u5408\u683c\u201c\u7ad9\u957f\u201d\\n1. \u672c\u5c0f\u8282\u4ecb\u7ecd\u4e3b\u8981\uff1a\u501f\u52a9 CNZZ  \u5e73\u53f0\u89c2\u5bdf WordPress \u7f51\u7ad9\u4e00\u5929\u6709\u591a\u5c11 IP \u8bbf\u95ee\uff0c\u90a3\u4e9b IP \u90fd\u662f\u4ece\u54ea\u4e2a\u9875\u9762\u8fdb\u5165\u5230\u81ea\u5df1\u7f51\u7ad9\u7684\u7b49\u5185\u5bb9\u3002\\n\\n2. \u70b9\u51fb\u94fe\u63a5 https://web.umeng.com/main.php?c=user&a=login \u8fdb\u884c\u6ce8\u518c\u3001\u767b\u5f55\u3002\\n\\n\u767b\u5f55\u7f51\u5740(https://workbench.umeng.com/)\\n\\n3.  \u767b\u5f55 CNZZ \u6570\u636e\u7edf\u8ba1\u4e13\u5bb6\u7f51\u7ad9\u540e\uff0c\u586b\u5199\u4ee5\u4e0b\u4fe1\u606f\uff0c\u5b8c\u6210\u540e\u70b9\u51fb \u786e\u8ba4\u6dfb\u52a0\u7ad9\u70b9 \u3002\\nhttps://web.umeng.com/main.php?c=site&a=add\\n\\n![png](../img/aliyun/wordpress/7.png)\\n![png](../img/aliyun/wordpress/8.png)\\n![png](../img/aliyun/wordpress/9.png)\\n\\n4. \u5207\u6362\u56de WordPress \u7f51\u7ad9\u7684\u4e3b\u9875\u9762\uff0c\u70b9\u51fb \u5916\u89c2 \uff0c\u5e76\u9009\u62e9\u5b50\u83dc\u5355\u4e0b\u7684 \u5c0f\u5de5\u5177\\n![png](../img/aliyun/wordpress/10.png) \\n5. \u5d4c\u5165\u4ee3\u7801\\n![png](../img/aliyun/wordpress/11.png) \\n![png](../img/aliyun/wordpress/12.png) \\n![png](../img/aliyun/wordpress/13.png) \\n![png](../img/aliyun/wordpress/14.png)  \\n\\n6. \u5220\u9664\u7edf\u8ba1\\n![png](../img/aliyun/wordpress/15.png)"},{"id":"/2020/5/1/Kubernetes","metadata":{"permalink":"/blog/2020/5/1/Kubernetes","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-5-1-Kubernetes.md","source":"@site/blog/2020-5-1-Kubernetes.md","title":"\u4f7f\u7528GKE(Google Kubernetes Engine)\u90e8\u7f72\u5bb9\u5668\u5316\u5e94\u7528 \u8c37\u6b4c\u4e91\u5feb\u901f\u5165\u95e8(\u4e09)","description":"link to \u8c37\u6b4c\u4e91\u5feb\u901f\u5165\u95e8(\u4e8c) \u5b58\u50a8\u6587\u4ef6\u7136\u540e\u5171\u4eab","date":"2020-05-01T00:00:00.000Z","formattedDate":"May 1, 2020","tags":[{"label":"facebook","permalink":"/blog/tags/facebook"},{"label":"hello","permalink":"/blog/tags/hello"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"},{"label":"google cloud","permalink":"/blog/tags/google-cloud"},{"label":"linux","permalink":"/blog/tags/linux"}],"readingTime":3.695,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI engine @ Facebook","url":"https://github.com/flybirdgroup"}],"frontMatter":{"id":"Kubernetes1","title":"\u4f7f\u7528GKE(Google Kubernetes Engine)\u90e8\u7f72\u5bb9\u5668\u5316\u5e94\u7528 \u8c37\u6b4c\u4e91\u5feb\u901f\u5165\u95e8(\u4e09)","author":"\u62db\u6653\u8d24","author_title":"AI engine @ Facebook","author_url":"https://github.com/flybirdgroup","tags":["facebook","hello","docusaurus","google cloud","linux"]},"prevItem":{"title":"\u4e91\u4e0a\u5feb\u901f\u642d\u5efaWordPress\u7f51\u7ad9","permalink":"/blog/2020/6/12/\u5feb\u901f\u642d\u5efawordpress\u7f51\u7ad9"},"nextItem":{"title":"linux\u9ad8\u7ea7\u7528\u6cd5","permalink":"/blog/2020/4/30/linux\u547d\u4ee4"}},"content":"link to [\u8c37\u6b4c\u4e91\u5feb\u901f\u5165\u95e8(\u4e8c) \u5b58\u50a8\u6587\u4ef6\u7136\u540e\u5171\u4eab](GoogleCloudStorage)\\n\\nlink to [\u8c37\u6b4c\u4e91\u5feb\u901f\u5165\u95e8(\u56db) \u8bad\u7ec3TensorFlow\u6a21\u578b](TensorFlow)\\n\\nlink to [Container Registry \u5feb\u901f\u5165\u95e8\u5feb\u901f\u5165\u95e8](docker)\\n\\nlink to [docker\u77e5\u8bc61](dockerhub)\\n\\nlink to [docker\u77e5\u8bc62](dockerhub_2)\\n\\n## step 1 \u9009\u62e9\u9879\u76ee,\u542f\u52a8Kubernetes Engine\u9875\u9762\\n![png](../img/kubernetes/1_create_project.png)\\n\x3c!--truncate--\x3e\\n![png](../img/kubernetes/2_create_API.png)\\n\\n![png](../img/kubernetes/3_Kubernetes.png)\\n\\n![png](../img/kubernetes/4_activate_API.png)\\n\\n\\n![png](../img/kubernetes/5_kubernetes.png)\\n\\n\\n## step 2 \u914d\u7f6egcloud\u5de5\u5177\u7684\u9ed8\u8ba4\u8bbe\u7f6e\\n\u5982\u9700\u8bbe\u7f6e\u9ed8\u8ba4\u9879\u76ee\uff0c\u8bf7\u5728 Cloud Shell \u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\\n```python\\ngcloud config set project project-id\\n```\\n\u5982\u9700\u8bbe\u7f6e\u9ed8\u8ba4\u8ba1\u7b97\u5730\u533a\uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\\n```python\\ngcloud config set compute/zone compute-zone\\n```\\n![png](../img/kubernetes/2.png)\\n\\n## step3 \u521b\u5efaGKE\u96c6\u7fa4\\n\u4e00\u4e2a\u96c6\u7fa4\u5305\u542b\u81f3\u5c11\u4e00\u53f0\u7fa4\u4e3b\u5b9e\u4f8b\u673a\u5668\u548c\u591a\u53f0\u5de5\u4f5c\u5668\u673a\u5668,\u8fd9\u4e9b\u5de5\u4f5c\u673a\u5668\u79f0\u4e3a\\"\u8282\u70b9\\".\u8282\u70b9\u662f\u8fd0\u884cKubernetes\u8fdb\u7a0b\u7684Compute Engine\u865a\u62df\u673a\u5b9e\u4f8b,\u5982\u4e0b\u56fe\\n![png](../img/kubernetes/10_cluster.png)\\n\\n\u5982\u9700\u521b\u5efa\u96c6\u7fa4\uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4, \u5176\u4e2d\uff0ccluster-name \u662f\u96c6\u7fa4\u9009\u62e9\u7684\u540d\u79f0\u3002\uff1a\\n```python\\ngcloud container clusters create cluster-name\\n```\\n\\n#### \u83b7\u53d6\u7528\u4e8e\u8be5\u96c6\u7fa4\u7684\u8eab\u4efd\u9a8c\u8bc1\u51ed\u636e\\n\u521b\u5efa\u96c6\u7fa4\u540e,\u9700\u8981\u83b7\u53d6\u8eab\u4efd\u9a8c\u8bc1\u51ed\u636e\u4ee5\u4fbf\u4e0e\u8be5\u96c6\u7fa4\u4ea4\u4e92,\u547d\u4ee4\u4e3a:\\n```python\\ngcloud container clusters get-credentials cluster-name\\n```\\n\u6b64\u547d\u4ee4\u5c06 kubectl \u914d\u7f6e\u4e3a\u4f7f\u7528\u60a8\u521b\u5efa\u7684\u96c6\u7fa4\u3002\\n\\n### step4 \u521b\u5efaDeployment\\n\\n\u5982\u679c\u9700\u8981\u5728\u96c6\u7fa4\u4e2d\u8fd0\u884c\u5e94\u7528,\u9700\u8981\u8fd0\u884c\u4e00\u4e0b\u547d\u4ee4:\\n```python\\nkubectl create deployment abc-server --image=gcr.io/clean-mountain-272313/flybirdgroup/classifier:latest\\n```\\n\u8fd9\u4e2aKubernetes\u547d\u4ee4kubectl create deployment \u4f1a\u521b\u5efa\u540d\u4e3a abc-server \u7684 Deployment. \u8fd9\u4e2aDeployment\u7684Pod\u5728\u5176\u5bb9\u5668\u4e2d\u8fd0\u884chello-app\u6620\u50cf\\n\\n\u5728\u6b64\u547d\u4ee4\u4e2d:\\n--image \u6307\u5b9a\u4e86\u8981\u90e8\u7f72\u7684\u5bb9\u5668\u955c\u50cf. \u8fd9\u4e2a\u547d\u4ee4\u4f1a\u4eceContainer Registry(\u79c1\u6709\u5bb9\u5668\u6620\u50cf\u6ce8\u518c\u8868)\u62c9\u53d6gcr.io/clean-mountain-272313/flybirdgroup/classifier:latest\\n\\n\u5982\u4f55\u521b\u5efa\u955c\u50cf\u548c\u4e0a\u4f20\u5230\u79c1\u6709\u5bb9\u5668\u955c\u50cf\u6ce8\u518c\u8868\\n\\nlink to [Container Registry \u5feb\u901f\u5165\u95e8\u5feb\u901f\u5165\u95e8](docker)\\n\\nlink to [docker\u77e5\u8bc61](dockerhub)\\n\\nlink to [docker\u77e5\u8bc62](dockerhub_2)\\n\\n### step 5 \u516c\u5f00deployment\\n\\n\u90e8\u7f72\u5e94\u7528\u540e,\u9700\u8981\u5c06\u5176\u516c\u5f00\u5230\u4e92\u8054\u7f51,\u4ee5\u4fbf\u7528\u6237\u8bbf\u95ee\u8be5\u5e94\u7528.\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u521b\u5efaService\u6765\u516c\u5f00\u5e94\u7528,\u8fd9\u662f\u4e00\u79cdKubernetes\u8d44\u6e90,\u53ef\u4ee5\u5c06\u5e94\u7528\u516c\u5f00\u7ed9\u5916\u90e8\u6d41\u91cf.\\n```python\\nkubectl expose deployment abc-server --type LoadBalancer \\\\\\n  --port 80 --target-port 8080 (\u8fd9\u91cc\u8bf7\u6ce8\u610f,\u5982\u679c\u662fflask\u5e94\u7528,target-port \u9009\u62e95000)\\n```\\n#### \u68c0\u67e5\u548c\u67e5\u770b\u5e94\u7528\\n```python\\nkubectl get pods (\u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684pod)\\n```\\n![png](../img/kubernetes/3.png)\\n\u5982\u679cstatus \u662f Running \u548c Ready\u7684\u72b6\u6001\u662f1/1, \u5c31\u53ef\u4ee5\u8fdb\u884c\u4e0b\u4e00\u6b65\\n\\n#### \u4f7f\u7528 kubectl get service \u68c0\u67e5 abc-server Service\uff1a\\n```python\\nkubectl get service abc-server \\n```\\n\u901a\u8fc7\u8fd9\u4e2a\u547d\u4ee4\u53ef\u4ee5\u5f97\u5230external-ip,\u590d\u5236service\u7684\u5916\u90e8ip\u5730\u5740,\u66ff\u6362external-ip\\n```python\\nhttp://external-ip/\\n```\\n\u8fd9\u6837\u5c31\u60f3GKE(google Kebernetes Engine\u90e8\u7f72\u4e86\u4e00\u4e2a\u5bb9\u5668\u5316web\u5e94\u7528)\\n\\n![png](../img/kubernetes/7.png)\\n\\n![png](../img/kubernetes/8.png)\\n\\n# \u67e5\u770bservice\\n\u53ef\u4ee5\u67e5\u770bkubernetes\u7684\u6240\u6709service\\n```kubernetes\\nkubectl get service # \\n```\\n\u8fd9\u4e9bservice\u975e\u5e38\u91cd\u8981,\u56e0\u4e3apod\u4e4b\u95f4\u7684\u76f8\u8fde\u5c31\u662f\u901a\u8fc7\u8fd9\u4e9bservice\u7684\\n\\n# \u5220\u9664pod\\n```\\nkubectl delete pod jenkins2-8698b5449c-grbdm(pod\u7684\u540d\u5b57)\\nkubectl get pod \\n```\\n\u6211\u4eec\u4f1a\u53d1\u73b0pod\u6ca1\u6709\u88ab\u5220\u9664,\u8fd9\u65f6\u5019\u6211\u4eec\u8981\u8f93\u5165\u4e00\u4e0b\u547d\u4ee4\\n```\\nkubectl get deployment\\nkubectl delete deployment \u540d\u5b57name\\nkubectl get pod\\n```\\n\u5c31\u5b8c\u5168\u5220\u9664\u4e86"},{"id":"/2020/4/30/linux\u547d\u4ee4","metadata":{"permalink":"/blog/2020/4/30/linux\u547d\u4ee4","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-30-linux\u547d\u4ee4.md","source":"@site/blog/2020-4-30-linux\u547d\u4ee4.md","title":"linux\u9ad8\u7ea7\u7528\u6cd5","description":"linux\u4e00\u4e9b\u597d\u73a9\u7684\u547d\u4ee4\u6bd4\u5982\u5faa\u73af,\u91cd\u5b9a\u5411","date":"2020-04-30T00:00:00.000Z","formattedDate":"April 30, 2020","tags":[{"label":"linux","permalink":"/blog/tags/linux"},{"label":"command line","permalink":"/blog/tags/command-line"},{"label":"cat","permalink":"/blog/tags/cat"},{"label":"<<EOF","permalink":"/blog/tags/eof"},{"label":"loop","permalink":"/blog/tags/loop"}],"readingTime":0.78,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"linux","title":"linux\u9ad8\u7ea7\u7528\u6cd5","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["linux","command line","cat","<<EOF","loop"]},"prevItem":{"title":"\u4f7f\u7528GKE(Google Kubernetes Engine)\u90e8\u7f72\u5bb9\u5668\u5316\u5e94\u7528 \u8c37\u6b4c\u4e91\u5feb\u901f\u5165\u95e8(\u4e09)","permalink":"/blog/2020/5/1/Kubernetes"},"nextItem":{"title":"python\u8bfb\u53d6bigquery","permalink":"/blog/2020/4/30/python\u8bfb\u53d6Biggquery"}},"content":"linux\u4e00\u4e9b\u597d\u73a9\u7684\u547d\u4ee4\u6bd4\u5982\u5faa\u73af,\u91cd\u5b9a\u5411\\n\\n# \u5faa\u73af\\n```linux\\nfor i in {1..50}\\ndo\\necho i\\ndone\\n```\\n\x3c!--truncate--\x3e\\n# \u91cd\u5b9a\u5411 |, <<, >>, >, >>\u662fa,\u7d2f\u79ef\u5199\u5165, >\u662fw,\u8986\u76d6\u5199\u5165\\n\u5c31\u662f\u5982\u679c\u4e00\u5f00\u59cb\u6ca1\u6709\u8fd9\u4e2a\u6587\u4ef6,\u6267\u884c>>\u548c>\u662f\u4e00\u6837\u7684,\u4f46\u662f\u5982\u679c\u518d\u6267\u884c\u4e00\u6b21,\u6267\u884c>\u540e,\u6587\u4ef6\u5185\u5bb9\u4e00\u6837,\u4f46\u662f>>\u5c31\u6709\u4e24\u6b21\u539f\u6765\u7684\u5185\u5bb9,\\n```linxus\\ncat <<EOF > b.txt\\nhaha\\nlala\\nmama\\nbaba\\ngege\\njiejie\\nEOF\\n\\ncat <<EOF >> b.txt\\nhaha\\nlala\\nmama\\nbaba\\ngege\\njiejie\\nEOF\\n```\\n\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u53ef\u4ee5\u7528\u5faa\u73af\u6765\\n```\\nfor i in {1..50}\\ndo\\ncat <<EOF > b.txt\\nfield_$i,decimal,\\"12,49\\"\\nEOF\\ndone\\n```\\n\\n```\\nfor i in {1..50}\\ndo\\ncat <<EOF >> b.txt\\nfield_$i,decimal,\\"12,49\\"\\nEOF\\ndone\\n```"},{"id":"/2020/4/30/python\u8bfb\u53d6Biggquery","metadata":{"permalink":"/blog/2020/4/30/python\u8bfb\u53d6Biggquery","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-30-python\u8bfb\u53d6Biggquery.md","source":"@site/blog/2020-4-30-python\u8bfb\u53d6Biggquery.md","title":"python\u8bfb\u53d6bigquery","description":"\u5b89\u88c5\u5ba2\u6237\u7aef","date":"2020-04-30T00:00:00.000Z","formattedDate":"April 30, 2020","tags":[{"label":"linux","permalink":"/blog/tags/linux"},{"label":"command line","permalink":"/blog/tags/command-line"},{"label":"cat","permalink":"/blog/tags/cat"},{"label":"<<EOF","permalink":"/blog/tags/eof"},{"label":"loop","permalink":"/blog/tags/loop"}],"readingTime":0.47,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"bigquery1","title":"python\u8bfb\u53d6bigquery","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["linux","command line","cat","<<EOF","loop"]},"prevItem":{"title":"linux\u9ad8\u7ea7\u7528\u6cd5","permalink":"/blog/2020/4/30/linux\u547d\u4ee4"},"nextItem":{"title":"\u8bbe\u7acbJenkins\u5728GKE\u4e0a","permalink":"/blog/2020/4/30/\u521b\u5efajenkins\u5728GKE"}},"content":"## \u5b89\u88c5\u5ba2\u6237\u7aef\\n```\\npip install --upgrade google-cloud-bigquery[bqstorage,pandas]\\n```\\n\x3c!--truncate--\x3e\\n## \u5bfc\u5165\u5de5\u5177\u5305,\u521b\u5efa\u5ba2\u6237\u7aef\u5bf9\u8c61\\n```\\nfrom google.cloud import bigquery\\n\\nclient = bigquery.Client()\\n```\\n## \u8fd0\u884c\u67e5\u8be2\\n```\\nquery_job = client.query(\\"\\"\\"\\n    SELECT\\n      CONCAT(\\n        \'https://stackoverflow.com/questions/\',\\n        CAST(id as STRING)) as url,\\n      view_count\\n    FROM `bigquery-public-data.stackoverflow.posts_questions`\\n    WHERE tags like \'%google-bigquery%\'\\n    ORDER BY view_count DESC\\n    LIMIT 10\\"\\"\\")\\n\\nresults = query_job.result()  # Waits for job to complete.\\n```\\n\\n## \u8f6c\u6210dataframe\\n```\\ndf = results.to_dataframe()\\n```\\n\\n## \u663e\u793a\u67e5\u8be2\u7ed3\u679c\\n```\\ndf.iloc[:,:5] #\u663e\u793adataframe\\n```"},{"id":"/2020/4/30/\u521b\u5efajenkins\u5728GKE","metadata":{"permalink":"/blog/2020/4/30/\u521b\u5efajenkins\u5728GKE","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-30-\u521b\u5efajenkins\u5728GKE.md","source":"@site/blog/2020-4-30-\u521b\u5efajenkins\u5728GKE.md","title":"\u8bbe\u7acbJenkins\u5728GKE\u4e0a","description":"\u8bbe\u7f6ezone\u548c\u4e0b\u8f7d\u4ee3\u7801","date":"2020-04-30T00:00:00.000Z","formattedDate":"April 30, 2020","tags":[{"label":"Jenkins","permalink":"/blog/tags/jenkins"},{"label":"GKE","permalink":"/blog/tags/gke"}],"readingTime":1.91,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"jenkins","title":"\u8bbe\u7acbJenkins\u5728GKE\u4e0a","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["Jenkins","GKE"]},"prevItem":{"title":"python\u8bfb\u53d6bigquery","permalink":"/blog/2020/4/30/python\u8bfb\u53d6Biggquery"},"nextItem":{"title":"Bigquery\u5e38\u7528\u547d\u4ee4","permalink":"/blog/2020/4/29/bq_\u5e38\u7528\u547d\u4ee4"}},"content":"\u8bbe\u7f6ezone\u548c\u4e0b\u8f7d\u4ee3\u7801\\n```\\ngcloud config set compute/zone us-east1-d\\ngit clone https://github.com/GoogleCloudPlatform/continuous-deployment-on-kubernetes.git\\ncd continuous-deployment-on-kubernetes\\n```\\n\x3c!--truncate--\x3e\\n\u521b\u5efaGKE\u96c6\u7fa4\\n```\\ngcloud container clusters create jenkins-cd \\\\\\n--num-nodes 2 \\\\\\n--machine-type n1-standard-2 \\\\\\n--scopes \\"https://www.googleapis.com/auth/projecthosting,cloud-platform\\"\\n```\\n\u67e5\u8be2cluster\u662f\u5426\u8fd0\u884c\\n```\\ngcloud container clusters list\\n```\\n\\n\u83b7\u53d6\u51ed\u8bc1\u53bb\u8fde\u63a5\u4f60\u7684GKE\\n```\\ngcloud container clusters get-credentials jenkins-cd\\n```\\n\u786e\u8ba4\u662f\u5426\u80fd\u8fde\u63a5\u5230\u96c6\u7fa4\\n```\\nkubectl clusters-info\\n```\\n\\n\u5b89\u88c5Helm\\n```\\nwget https://storage.googleapis.com/kubernetes-helm/helm-v2.9.1-linux-amd64.tar.gz\\n```\\n\u89e3\u538b\\n```\\ntar zxfv helm-v2.9.1-linux-amd64.tar.gz\\ncp linux-amd64/helm .\\n```\\n\\n\u6dfb\u52a0\u81ea\u5df1\u4f5c\u4e3a\u4e91\u7684\u7ba1\u7406\u8005\ud83d\ude46\u7ed9jenkins\u6743\u9650\u5230\u96c6\u7fa4\\n```\\nkubectl create clusterrolebinding cluster-admin-binding --clusterrole=cluster-admin --user=$(gcloud config get-value account)\\n```\\n\\n\u7ed9Tiller\u96c6\u7fa4\u7ba1\u7406\u8005\u6743\u9650\\n```\\nkubectl create serviceaccount tiller --namespace kube-system\\nkubectl create clusterrolebinding tiller-admin-binding --\\nclusterrole=cluster-admin --serviceaccount=kube-system:tiller\\n```\\n\\n\u521d\u59cb\u5316helm,\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1Helm(Tiller)\u670d\u52a1\u7aef\u662f\u6b63\u786e\u5b89\u88c5\u5230\u96c6\u7fa4\u4e0a\\n```\\n./helm init --service-account=tiller\\n./helm repo update\\n```\\n\\n\u786e\u8ba4helm\u662f\u5426\u5b89\u88c5\u6210\u529f,\u5e94\u8be5\u770b\u5230\u51fa\u73b0\u5728\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u662fv2.9.1\\n```\\n./helm version\\n```\\n\\n\\n\u7528Helm CLI\u547d\u4ee4\u53bb\u90e8\u7f72\u8bbe\u7f6e\\n```\\n./helm install -n cd stable/jenkins -f jenkins/values.yaml --version 0.16.6 --wait\\n```\\n\\n\u786e\u8ba4jenkins pod\u8fd0\u884c\\n```\\nkubectil get pods\\n```\\n\\n\u8fd0\u884c\u547d\u4ee4\u53bb\u8bbe\u7f6ejenkins UI\u754c\u9762\\n```\\nexport POD_NAME=$(kubectl get pods -l \\"component=cd-jenkins-master\\" -o jsonpath=\\"{.items[0].metadata.name}\\")\\nkubectl port-forward $POD_NAME 8080:8080 >> /dev/null &\\n```\\n\\n\u6d4b\u8bd5Jenkins Service\u662f\u5426\u521b\u5efa\u6b63\u786e\\n```\\nkubectl get svc\\n```\\n\\n\u8fde\u63a5\u5230Jenkins-Jenkins\u4f1a\u81ea\u52a8\u521b\u5efa\u5bc6\u7801,\u83b7\u53d6\u5b83,\u8fd0\u884c\u4e00\u4e0b\u547d\u4ee4:\\n```\\nprintf $(kubectl get secret cd-jenkins -o jsonpath=\\"{.data.jenkins-admin-password}\\" | base64 --decode);echo\\n```\\n\\n\u6211\u8fd9\u8fb9\u51fa\u73b0\u7684\u5bc6\u7801\u662f\\n```\\nJrK3zwoGFI\\n```\\n\u7136\u540e\u53bbgcloud shell \u7684Web Preview\u4e0a\u9009\u62e9Preview on Port 8080,\\n![png](../img/Jenkins/1.png)\\n\u7136\u540e\u8f93\u5165\\n```\\nusername: admin\\npassword: JrK3zwoGFI\\n```\\n![png](../img/Jenkins/2.png)\\n\\n\\n## \u5220\u9664\u547d\u4ee4:\\n```\\nkubectl get deployment\\nkubectl delete deployment \u540d\u5b57name\\nkubectl get pod \\n\\n#\u5220\u9664pod\u540e,\u5220\u9664clusters\\n```\\ngcloud containers clusters delete name\\n```\\n![png](../img/Jenkins/3.png)"},{"id":"/2020/4/29/bq_\u5e38\u7528\u547d\u4ee4","metadata":{"permalink":"/blog/2020/4/29/bq_\u5e38\u7528\u547d\u4ee4","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-29-bq_\u5e38\u7528\u547d\u4ee4.md","source":"@site/blog/2020-4-29-bq_\u5e38\u7528\u547d\u4ee4.md","title":"Bigquery\u5e38\u7528\u547d\u4ee4","description":"\u67e5\u770b\u6570\u636e\u96c6\u7684schema \u4f7f\u7528bq show \u6570\u636e\u96c6","date":"2020-04-29T00:00:00.000Z","formattedDate":"April 29, 2020","tags":[{"label":"gcp","permalink":"/blog/tags/gcp"},{"label":"command line","permalink":"/blog/tags/command-line"},{"label":"github","permalink":"/blog/tags/github"}],"readingTime":2.435,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"bq_command_line","title":"Bigquery\u5e38\u7528\u547d\u4ee4","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["gcp","command line","github"]},"prevItem":{"title":"\u8bbe\u7acbJenkins\u5728GKE\u4e0a","permalink":"/blog/2020/4/30/\u521b\u5efajenkins\u5728GKE"},"nextItem":{"title":"GCS \u8bfb\u5199 by python","permalink":"/blog/2020/4/29/_GCS\u8bfb\u5199by python"}},"content":"## \u67e5\u770b\u6570\u636e\u96c6\u7684schema \u4f7f\u7528bq show \u6570\u636e\u96c6\\n\\n\x3c!--truncate--\x3e\\n\\n# \u589e bq mk, bk load [\u5177\u4f53\u53ef\u4ee5\u53c2\u8003](https://cloud.google.com/bigquery/docs/loading-data-local#cli_1)\\n```bq\\nbq mk babaynames \u521b\u5efa\u65b0\u7684\u6570\u636e\u96c6,\u5728\u81ea\u5df1\u9879\u76ee\u4e2d\u547d\u540d\\n#### \u521b\u5efa\u8868\u683c bq load datasetID tableID data_file Schema\\nbq load \u6570\u636e\u96c6ID.\u8868\u683cID(\u5982\u679c\u7a7a\u5c31\u81ea\u5df1\u521b\u5efa\u4e00\u4e2a)  \u6570\u636e\u6587\u4ef6(\u6bd4\u5982txt) schema\u7c7b\u578b\\nbq load datasetID.tableid your_file name:string,gender:string,count:integer(your schema)\\nbq load --source_format=AVRO fakedatas.customer \\"gs://zz_bucket/avro/cust.avro\\" (avro\u6587\u4ef6)\\n```\\n\u8fd8\u53ef\u4ee5\u6539\u7528 --autodetect \u6807\u5fd7\uff0c\u800c\u65e0\u9700\u63d0\u4f9b\u67b6\u6784\u5b9a\u4e49\u3002\\n\\n# \u5220 bq rm -r\\n## \u5220\u9664\u6570\u636e\u96c6 bq rm\\nbq rm -r \u6570\u636e\u96c6id\\n```\\nbq rm -r babynames\\n```\\n# \u663e\u793a bq ls, bq show\\n### \u68c0\u6d4b\u8868\u683c\u662f\u5426\u521b\u5efa\u6210\u529f\u6216\u8005\u66f4\u65b0\u6210\u529f\\n\u521b\u5efa\u540e,\u53ef\u4ee5\u901a\u8fc7bq ls \u6570\u636e\u96c6id \u67e5\u770b\u662f\u5426\u521b\u5efa\u6210\u529f\\n\u4e5f\u53ef\u4ee5\u901a\u8fc7bq show \u6570\u636e\u96c6id.tableid \u67e5\u770bschema\\n```\\nbq ls \u663e\u793a\u6240\u6709dataset\\nbq ls babaynames \u663e\u793adatasetid\u7684\u6240\u6709table\\nbq show datasetid \u663e\u793adataset\u7684ACL(\u6743\u9650) \u6bd4\u5982\u53ef\u4ee5\u770b\u5230 \u8c01\u662fowners,writers,readers\\nbq show babynames.names2010 \u663e\u793atable\u7684schema\u7c7b\u578b,\u591a\u5c11\u6587\u672c\u6570,\u5b57\u6bb5\\n```\\n\\n# \u67e5 bq query --use_legacy_sql=false \'select * from dataset.table\'\\n```\\n## \u8fd0\u884csql\u8bed\u53e5\u547d\u4ee4\\n\u603b\u4f53\u683c\u5f0f\u5c31\u662f bq query --use_legacy_sql=false \'select \u5b57\u6bb5 \u8026\u5408\u5b57\u6bb5(\u6bd4\u5982count(*)) from datasetid.tableid where \u6761\u4ef6 order by \u5b57\u6bb5 (\u505a\u6392\u5e8fASC,DESC) Limit \u6570\u5b57(\u9650\u5236\u6761\u6570)\'\\n\u6ce8\u610f\u7684\u5730\u65b9\u662f \\n### use_legacy_sql=false \u8868\u793a\u4f7f\u7528\u6807\u51c6sql\u8bed\u53e5\\n### \u6761\u4ef6\u7684\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528\u53cc\u5f15\u53f7\u505a\u533a\u5206\\"\\"\\n```sql\\nbq query \\"select name,count from babynames.names2010 where gender = \'F\' Order by count desc limit 5\\"\\n\\nbq query --use_legacy_sql=false \'SELECT word,SUM(word_count) AS count FROM `bigquery-public-data`.samples.shakespeare WHERE word LIKE \\"%raisin%\\" GROUP BY word\'\\n\\n\u7b2c\u4e8c\u4e2a\u4f8b\u5b50\u662f\u9009\u62e9\u4ecebq\u516c\u5171\u96c6\u4e2d\u9009\u62e9samples\u8fd9\u4e2adataset,\u7136\u540e\u4ece\u8fd9\u4e2adataset\u7684shakespeare\u8868\u4e2d\u9009\u62e9word\u5b57\u6bb5, \u6267\u884c\u6761\u4ef6\u662f word\u5b57\u6bb5\u5fc5\u987b\u7b49\u4e8e\\"huzzah\\"\\nbq query --use_legacy_sql=false \'SELECT word FROM `bigquery-public-data`.samples.shakespeare WHERE word = \\"huzzah\\"\'\\n```\\n\\n## \u8fd0\u884c\u5e2e\u52a9\u547d\u4ee4\\n```\\nbq help query\\n```\\n\\n### \u4e0b\u8f7d\u6570\u636e\u5230\u9879\u76ee\u4e2d\\n\u4f7f\u7528wget \u6570\u636e\u6e90\u8fde\u63a5(\u6bd4\u5982zip,txt,csv\u7b49)\\n```wget\\nwget http://www.ssa.gov/OACT/babynames/names.zip\\n```\\n### \u89e3\u538b\u7f29zip\u6587\u4ef6\u5230\u9879\u76ee\u4e2d\\n```\\nunzip names.zip\\n```"},{"id":"/2020/4/29/_GCS\u8bfb\u5199by python","metadata":{"permalink":"/blog/2020/4/29/_GCS\u8bfb\u5199by python","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-29_GCS\u8bfb\u5199by python.md","source":"@site/blog/2020-4-29_GCS\u8bfb\u5199by python.md","title":"GCS \u8bfb\u5199 by python","description":"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8c37\u6b4c\u7684Python\u5ba2\u6237\u7aefAPI\u5c06\u6587\u4ef6\u4e0a\u4f20\u5230\u8c37\u6b4c\u4e91\u5b58\u50a8\u3002","date":"2020-04-29T00:00:00.000Z","formattedDate":"April 29, 2020","tags":[{"label":"terraform","permalink":"/blog/tags/terraform"},{"label":"gcp","permalink":"/blog/tags/gcp"},{"label":"compute engine","permalink":"/blog/tags/compute-engine"},{"label":"vm","permalink":"/blog/tags/vm"}],"readingTime":1.14,"hasTruncateMarker":false,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"GCS1","title":"GCS \u8bfb\u5199 by python","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["terraform","gcp","compute engine","vm"]},"prevItem":{"title":"Bigquery\u5e38\u7528\u547d\u4ee4","permalink":"/blog/2020/4/29/bq_\u5e38\u7528\u547d\u4ee4"},"nextItem":{"title":"gsutil\u5e38\u7528\u547d\u4ee4","permalink":"/blog/2020/4/29/_gsutil\u5e38\u7528\u547d\u4ee4"}},"content":"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8c37\u6b4c\u7684Python\u5ba2\u6237\u7aefAPI\u5c06\u6587\u4ef6\u4e0a\u4f20\u5230\u8c37\u6b4c\u4e91\u5b58\u50a8\u3002\\n\\n\\n# \u65b9\u6cd5\u4e00: \\n\u9996\u5148\uff0c\u5982\u4e0b\u5b89\u88c5api\u5ba2\u6237\u7aef\u3002\\n\\n>\\n```\\npip install --upgrade google-api-python-client \\n```\\n\u7136\u540e\uff0c\u542f\u7528api\u8eab\u4efd\u9a8c\u8bc1\u4ee5\u83b7\u53d6\u5e94\u7528\u7a0b\u5e8f\u9ed8\u8ba4\u51ed\u636e\u3002\\n\\n>\\n```\\ngcloud beta auth application-default login \\n```\\n\u4ee5\u4e0b\u662f\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f\u9ed8\u8ba4\u51ed\u636e\u5c06\u672c\u5730\u6587\u4ef6\u4e0a\u4f20\u5230Google\u4e91\u5b58\u50a8\u7684\u793a\u4f8b\u4ee3\u7801\u3002\\n\\n```\\nfrom googleapiclient import discovery\\nfrom oauth2client.client import GoogleCredentials\\n\\ncredentials = GoogleCredentials.get_application_default()\\nservice = discovery.build(\'storage\', \'v1\', credentials=credentials)\\n\\nfilename = \'./account_id_schema_new.csv\'\\n\\nbucket = \'bq-pandas-bucket\'\\n\\nbody = {\'name\': \'dest_file_name.csv\'}\\n\\nreq = service.objects().insert(bucket=bucket, body=body, media_body=filename)\\nesp = req.execute()\\n```\\n\\n# \u65b9\u6cd5\u4e8c--\u4ec5\u4ec5\u9700\u8981\u5b89\u88c5\u4e24\u4e2a\u5305\\n```\\npip install dask[dataframe] --upgrade --user\\npip install gcsfs --user\\n```\\n\\n## \u4f8b\u5b50\\n![png](../img/google/gcs/gcs1/1.png)\\n\\n\u539f\u6765\u65e0\u8bba\u7528pandavro\u6216\u8005pandas\u90fd\u662f\u8bfb\u53d6\u4e0d\u4e86GCS\u7684\u6587\u4ef6\u7684\\n\\n\u4f46\u662f\u5b89\u88c5\u5305\u540e,\u5c31\u53ef\u4ee5\u8bfb\u53d6GCS\u6587\u4ef6\u4e86\\n![png](../img/google/gcs/gcs1/2.png)\\n\\n\u7136\u540e\u5199\u5165gcs,\u5c31\u60f3\u5e73\u65f6\u90a3\u6837,\u76f4\u63a5to_csv\u5c31\u53ef\u4ee5\u4e86\\n![png](../img/google/gcs/gcs1/3.png)\\n\\n```\\nimport dask.bag as db\\nb = db.read_avro(\'gs://zz_mm_bucket/account_id_schema_new.avro\')\\ndf = b.to_dataframe()\\n```"},{"id":"/2020/4/29/_gsutil\u5e38\u7528\u547d\u4ee4","metadata":{"permalink":"/blog/2020/4/29/_gsutil\u5e38\u7528\u547d\u4ee4","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-29_gsutil\u5e38\u7528\u547d\u4ee4.md","source":"@site/blog/2020-4-29_gsutil\u5e38\u7528\u547d\u4ee4.md","title":"gsutil\u5e38\u7528\u547d\u4ee4","description":"gsutil\u547d\u4ee4\u5feb\u901f\u5165\u95e8","date":"2020-04-29T00:00:00.000Z","formattedDate":"April 29, 2020","tags":[{"label":"terraform","permalink":"/blog/tags/terraform"},{"label":"gcp","permalink":"/blog/tags/gcp"},{"label":"compute engine","permalink":"/blog/tags/compute-engine"},{"label":"vm","permalink":"/blog/tags/vm"}],"readingTime":1.12,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"gsutil","title":"gsutil\u5e38\u7528\u547d\u4ee4","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["terraform","gcp","compute engine","vm"]},"prevItem":{"title":"GCS \u8bfb\u5199 by python","permalink":"/blog/2020/4/29/_GCS\u8bfb\u5199by python"},"nextItem":{"title":"\u4f7f\u7528terraform\u57fa\u672c\u8bed\u6cd5\u548c\u521b\u5efavm","permalink":"/blog/2020/4/27/_terraform"}},"content":"[gsutil\u547d\u4ee4\u5feb\u901f\u5165\u95e8](https://cloud.google.com/storage/docs/quickstart-gsutil)\\n\\n\x3c!--truncate--\x3e\\n```\\nmb \\ngsutil mb -l us-east1 gs://my-awesome-bucket/ #\u521b\u5efabucket\\n\\ncp \u590d\u5236\u4e0b\u8f7d\\ngsutil cp Desktop/kitten.png gs://my-awesome-bucket \u590d\u5236\u6587\u4ef6\u5230bucket\\ngsutil cp gs://my-awesome-bucket/kitten.png Desktop/kitten2.png \u4ecebucket\u4e0a\u4e0b\u8f7d\u6587\u4ef6\u5230\u672c\u5730\\ngsutil cp gs://my-awesome-bucket/kitten.png gs://my-awesome-bucket/just-a-folder/kitten3.png \u590d\u5236bucket\u91cc\u7684\u6587\u4ef6\u5230bucket\u91cc\u9762\u7684\u6587\u4ef6\u5939\u4e2d\\n```\\n\x3c!--truncate--\x3e\\n```\\nls \u5217\u4e3e\\ngsutil ls gs://my-awesome-bucket \u5217\u4e3ebucket\u5185\u5bb9\\ngsutil ls -l gs://my-awesome-bucket/kitten.png \u5217\u4e3ebucket\u6587\u4ef6\u7684\u8be6\u7ec6\u4fe1\u606f\\n\\nacl account credential limit \u6743\u9650\\ngsutil acl ch -u AllUsers:R gs://my-awesome-bucket/kitten.png\\n\u4f7f\u7528 gsutil acl ch \u547d\u4ee4\u5411\u6240\u6709\u7528\u6237\u6388\u4e88\u5b58\u50a8\u5728\u5b58\u50a8\u5206\u533a\u4e2d\u7684\u5bf9\u8c61\u7684\u8bfb\u53d6\u6743\u9650\\ngsutil acl ch -d AllUsers gs://my-awesome-bucket/kitten.png\\n\u4f7f\u7528 gsutil acl ch \u547d\u4ee4\u5411\u6240\u6709\u7528\u6237\u79fb\u9664\u5b58\u50a8\u5728\u5b58\u50a8\u5206\u533a\u4e2d\u7684\u5bf9\u8c61\u7684\u8bfb\u53d6\u6743\u9650\\n\\niam -\u5411\u67d0\u4eba\u6388\u4e88\u548c\u79fb\u9664\u60a8\u7684\u5b58\u50a8\u5206\u533a\u7684\u8bbf\u95ee\u6743\u9650\\ngsutil iam ch user:jane@gmail.com:objectCreator,objectViewer gs://my-awesome-bucket\\ngsutil iam ch -d user:jane@gmail.com:objectCreator,objectViewer gs://my-awesome-bucket\\n\\nrm \u6e05\u9664\\ngsutil rm gs://my-awesome-bucket/kitten.png \u5220\u9664\u6587\u4ef6\\n\\ngsutil rm -r gs://my-awesome-bucket \u6e05\u9664bucket\\n```"},{"id":"/2020/4/27/_terraform","metadata":{"permalink":"/blog/2020/4/27/_terraform","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-27_terraform.md","source":"@site/blog/2020-4-27_terraform.md","title":"\u4f7f\u7528terraform\u57fa\u672c\u8bed\u6cd5\u548c\u521b\u5efavm","description":"\u6211\u89c9\u5f97terraform\u7684\u57fa\u672c\u8bed\u6cd5\u5c31\u662f\u5b57\u5178\u5bf9\u8c61\u5f0f\u8bed\u6cd5.","date":"2020-04-27T00:00:00.000Z","formattedDate":"April 27, 2020","tags":[{"label":"terraform","permalink":"/blog/tags/terraform"},{"label":"gcp","permalink":"/blog/tags/gcp"},{"label":"compute engine","permalink":"/blog/tags/compute-engine"},{"label":"vm","permalink":"/blog/tags/vm"}],"readingTime":9.965,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"terraform1","title":"\u4f7f\u7528terraform\u57fa\u672c\u8bed\u6cd5\u548c\u521b\u5efavm","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["terraform","gcp","compute engine","vm"]},"prevItem":{"title":"gsutil\u5e38\u7528\u547d\u4ee4","permalink":"/blog/2020/4/29/_gsutil\u5e38\u7528\u547d\u4ee4"},"nextItem":{"title":"\u5173\u4e8enginx\u548cport\u77e5\u8bc6\u603b\u7ed3","permalink":"/blog/2020/4/26/\u5173\u4e8enginx\u548cport\u77e5\u8bc6\u603b\u7ed3"}},"content":"\u6211\u89c9\u5f97terraform\u7684\u57fa\u672c\u8bed\u6cd5\u5c31\u662f\u5b57\u5178\u5bf9\u8c61\u5f0f\u8bed\u6cd5.\\n\\n\u603b\u4f53\u7ed3\u6784\u5c31\u662f \\n1. instance.tf \u7528\u6765\u521b\u4f5c\u8d44\u6e90\u7684\u6587\u4ef6,\u6bd4\u5982vm instance,storage bucket,bigquery\u7b49\\n\\n2. variables.tf \u53c2\u6570\u53d8\u91cf\u6587\u4ef6,\u7528\u6765\u5199\u90a3\u4e9b\u53d8\u91cf\u7684,\u53d8\u91cf\u7684\u683c\u5f0f\u4e3a variable \\"project\\" {} \u5c31\u662f: variable + \u540d\u5b57 + {}\\n\\n3. terraform.tfvars \u7528\u6765\u5199\u53d8\u91cf\u5177\u4f53\u7b49\u4e8e\u4ec0\u4e48\u7684, \u6bd4\u5982 project = \\"terraform-45110831\\"\\n\\n4. output.tf \u5728\u521b\u5efa\u5b9e\u4f8b\u540e,\u6253\u5370\u8f93\u51fa\u6211\u4eec\u89c9\u5f97\u91cd\u8981\u7684\u53c2\u6570, \u5177\u4f53\u683c\u5f0f output \u540d\u5b57 {value = \\"${\u53d8\u91cf}\\"} \u5982output \\"ip\\" {value = \\"${google_compute_address.vm_static_ip.address}\\"} \u53e3\u8bc0: 2\u7f8e\u51431file4\u5f15\u53f7,\u7b80\u79f0\\"214\\"!!\\n\\n\x3c!--truncate--\x3e\\n\\n## \u5176\u4e2d\u8be6\u7ec6\u7684\u7528\u6cd5\u6211\u4eec\u53ef\u4ee5\u53bb[\u5b98\u7f519\u6b65\u6559\u7a0b\u5b66\u4e60](https://learn.hashicorp.com/terraform/gcp/change),\u975e\u5e38\u7b80\u5355,\u4f46\u662f\u5f88\u591a\u5751,\u4f46\u662f\u8d70\u5b8c\u5751\u540e,\u611f\u89c9\u5c31\u57fa\u672c\u4e0a\u624b\u4e86\\n\\n## \u5176\u4e2d5\u4e2a\u70b9\u9700\u8981\u6ce8\u610f\u7684\u662f: \\n\\n1. \u53d8\u91cf\u7684\u5199\u6cd5 \\"${var.project}\\"\\n   \\n2. \u5982\u679c\u53d8\u91cf\u662f\u4e2a\u6587\u4ef6\u7684\u8bdd: \\"${file(\\"${var.jupyter_sh}\\")}\\"  ${file(\\"${var.jupyter.sh}\\")} \u4e5f\u5c31\u662f \\"${file(\\"${\u53d8\u91cf}\\")}\\"\\n   \\n3. \u8fd8\u6709\u5c31\u662f\u5b57\u5178\u5c5e\u6027\u90fd\u662f\u7528.\u6765\u5f15\u7528\\n   \\n4. tag\u7684\u4f7f\u7528,\u56e0\u4e3atag\u5c5e\u6027\u7684\u6dfb\u52a0\u5bf9\u4e8evm instance\u5c24\u5176\u91cd\u8981\\n\\n5. \u4f7f\u7528meta_startup_script\u811a\u672c,\u53ef\u4ee5\u5728\u521b\u5efavm instance\u540e\u901a\u8fc7\u811a\u672c\u8fd0\u884c\u7a0b\u5e8f,\u975e\u5e38\u6709\u7528\\n   \\n## \u4f7f\u7528vs code\u8fde\u63a5\u8fdc\u7a0b\u670d\u52a1\u5668\\n\\n\u5728vs code \u754c\u9762 \u6309fn+F1, \\n```\\nF1\\nssh -i ~/.ssh/id_rsa flybird@34.73.166.222 (\u8fde\u63a5\u8fdc\u7a0b\u670d\u52a1\u5668)\\n```\\n\u8fde\u63a5\u6210\u529f\u540e,\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u670d\u52a1\u5668\u51c6\u5907\u521b\u5efavm instance\u4e86\\n# \u4f7f\u7528terraform\u521b\u5efaVM\\n\u4f7f\u7528terraform\u53ef\u4ee5\u5f88\u5feb\u7684,\u53ef\u590d\u5236\u6027\u7684\u914d\u7f6e\u4e00\u4e2avm\u673a\u5668\\n\x3c!--truncate--\x3e\\n# 1 \u9996\u5148\u6211\u4eec\u8981\u5b89\u88c5terraform,\u5b89\u88c5\u7684\u5177\u4f53\u6559\u7a0b\u8bf7\u770b[terraform\u5b89\u88c5](https://learn.hashicorp.com/terraform/gcp/install)\\n\\n\u5927\u81f4\u6b65\u9aa4\u662f\\n```\\n\u4e0b\u8f7d terraform_0.12.24_linux_amd64.zip\\nunzip terraform_0.12.24_linux_amd64.zip\\nsudo snap install terraform \u5b89\u88c5terraform\\nterraform \u786e\u8ba4terraform\u662f\u5426\u5b89\u88c5\u6210\u529f\\n```\\n\\nterraform\u5b89\u88c5\u597d\u540e,\u6211\u4eec\u53bbGCP>>APIs$Services>>Credentials\u521b\u5efaservice account,\u4e0b\u8f7djson\u6587\u4ef6,\u4fdd\u5b58\u597d\\nterraform\u521b\u5efa\u6559\u7a0b\u6211\u4eec\u53ef\u4ee5\u53bb[terraform\u5165\u95e8\u6559\u7a0b](https://learn.hashicorp.com/terraform/gcp/change)\u770b\u5230\\n\\n## 2 \u6211\u4eec\u8fd9\u91cc\u4f1a\u521b\u5efa\u4e00\u4e2ainstance.tf\u6587\u4ef6\\n```\\nprovider \\"google\\" {\\n  credentials = \\"terraform-45110831-450974fa2608.json\\"\\n  project = \\"terraform-45110831\\"\\n  region  = \\"us-central1\\"\\n  zone    = \\"us-central1-a\\"\\n}\\nresource \\"google_compute_network\\" \\"vpc_network\\" {\\n  name = \\"terraform-network\\"\\n}\\nresource \\"google_compute_instance\\" \\"default\\" {\\n  project      = \\"terraform-45110831\\"\\n  name         = \\"terraform\\"\\n  machine_type = \\"n1-standard-1\\"\\n  zone         = \\"us-central1-a\\"\\n\\n  boot_disk {\\n    initialize_params {\\n      image = \\"debian-cloud/debian-9\\"\\n    }\\n  }\\n\\n  network_interface {\\n    network = \\"default\\"\\n    access_config {\\n    }\\n  }\\n}\\n```\\n\\nresource \u540e\u9762\u8ddf\u4e24\u4e2a\u5b57\u6bb5,\u7b2c\u4e00\u4e2a\u662fresource type\u5b57\u6bb5\u548cresource name, \u8fd9\u91cc\u7684resource type\u662fgoogle_compute_instance, name\u662f terraform, google_compute_instance \u4f1a\u81ea\u52a8\u544a\u8bc9terraform\u8fd9\u4e2a\u662f\u8c37\u6b4c\u7684provider\\n\\n## 3 \u5199\u597d\u914d\u7f6e\u540e,\u6211\u4eec\u8f93\u5165\u4e00\u4e0b\u547d\u4ee4\\n```\\nterraform init\\n```\\n\u8fd9\u4e2a\u547d\u4ee4\u6216\u521d\u59cb\u5316\u5f88\u591a\u540e\u7eed\u4f1a\u88ab\u7528\u5230\u7684\u547d\u4ee4\u7684\u672c\u5730\u8bbe\u7f6e\u548c\u6570\u636e\\ngoogle provider plugin \u4f1a\u88ab\u4e0b\u8f7d\u548c\u5b89\u88c5\\n\\n## 4 \u521d\u59cb\u5316\u540e,\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u6574\u4f53\u8ba1\u5212,\u67e5\u770b\u8bbe\u7f6e\u662f\u5426\u7b26\u5408\u6211\u4eec\u7684\u8981\u6c42,\u8f93\u5165\u8fd9\u4e2a\u547d\u4ee4\u7684\u65f6\u5019,GCP\u4e0d\u4f1a\u90e8\u7f72vm\\n```\\nterraform plan\\n```\\n\\n## 5 \u89c9\u5f97\u6ca1\u6709\u95ee\u9898,\u6211\u4eec\u5c31\u53ef\u4ee5\u5e94\u7528\u4e86\\n```\\nterraform apply\\n```\\n\u8fd9\u4e2a\u547d\u4ee4\u5c31\u4f1a\u6267\u884c\u4e4b\u524dplan\u7684\u4e1c\u897f\\n```\\nAn execution plan has been generated and is shown below.\\nResource actions are indicated with the following symbols:\\n  + create\\n\\nTerraform will perform the following actions:\\n\\n  # google_compute_instance.default will be created\\n  + resource \\"google_compute_instance\\" \\"default\\" {\\n      + can_ip_forward       = false\\n      + cpu_platform         = (known after apply)\\n      + deletion_protection  = false\\n      + guest_accelerator    = (known after apply)\\n      + id                   = (known after apply)\\n      + instance_id          = (known after apply)\\n      + label_fingerprint    = (known after apply)\\n      + machine_type         = \\"n1-standard-1\\"\\n      + metadata_fingerprint = (known after apply)\\n      + name                 = \\"terraform\\"\\n      + project              = \\"qwiklabs-gcp-42390cc9da8a4c4b\\"\\n      + self_link            = (known after apply)\\n      + tags_fingerprint     = (known after apply)\\n      + zone                 = \\"us-central1-a\\"\\n\\n      + boot_disk {\\n          + auto_delete                = true\\n          + device_name                = (known after apply)\\n          + disk_encryption_key_sha256 = (known after apply)\\n          + kms_key_self_link          = (known after apply)\\n          + source                     = (known after apply)\\n\\n          + initialize_params {\\n              + image  = \\"debian-cloud/debian-9\\"\\n              + labels = (known after apply)\\n              + size   = (known after apply)\\n              + type   = (known after apply)\\n            }\\n        }\\n\\n      + network_interface {\\n          + address            = (known after apply)\\n          + name               = (known after apply)\\n          + network            = \\"default\\"\\n          + network_ip         = (known after apply)\\n          + subnetwork         = (known after apply)\\n          + subnetwork_project = (known after apply)\\n\\n          + access_config {\\n              + assigned_nat_ip = (known after apply)\\n              + nat_ip          = (known after apply)\\n              + network_tier    = (known after apply)\\n            }\\n        }\\n\\n      + scheduling {\\n          + automatic_restart   = (known after apply)\\n          + on_host_maintenance = (known after apply)\\n          + preemptible         = (known after apply)\\n\\n          + node_affinities {\\n              + key      = (known after apply)\\n              + operator = (known after apply)\\n              + values   = (known after apply)\\n            }\\n        }\\n    }\\n\\nPlan: 1 to add, 0 to change, 0 to destroy.\\n\\nDo you want to perform these actions?\\n  Terraform will perform the actions described above.\\n  Only \'yes\' will be accepted to approve.\\n\\n  Enter a value:\\n```\\n\\n\u6211\u4eec\u770b\u5230 +, \u8fd9\u610f\u5473Terraform\u4f1a\u521b\u5efa\u8fd9\u4e2a\u8d44\u6e90,\u6211\u4eec\u80fd\u770b\u5230\u5f88\u591a\u5c5e\u6027,\u5982\u679c\u6709\u7684value\u662f\u663e\u793acomputed,\u8fd9\u610f\u5473\u7740\u8fd9value\u4f1a\u7b49\u5230resource\u521b\u5efa\u540e\u624d\u77e5\u9053\\n\\n## 6 \u663e\u793avm \u7684\u914d\u7f6e\\n```\\nterraform show\\n```\\n\\n## 7.1 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528terraform\u53bb\u4fee\u6539resources\\n\u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u5728 resource google_compute_instance \u4e0a\u6dfb\u52a0tags\\n### \u6572\u9ed1\u677f!!! \u5982\u679ctags\u4e0a\u6dfb\u52a0\\"http-server\\",\\"https-server\\"\u540e,Firewalls\u9632\u706b\u5899\u5c31allow http traffic\u548c https traffic\u4e86\\n\\n```\\nresource \\"google_compute_instance\\" \\"default\\" {\\n  project      = \\"terraform-45110831\\"\\n  name         = \\"terraform\\"\\n  machine_type = \\"n1-standard-1\\"\\n  zone         = \\"us-central1-a\\"\\n  tags         = [\\"web\\", \\"dev\\",\\"http-server\\",\\"https-server\\"]\\n```\\n\u7136\u540e\u5728\u7ec8\u7aef\u8f93\u5165terraform init, terraform plan\u540e,\u5c31\u4f1a\u51fa\u73b0\\n```\\nTerraform will perform the following actions:\\n\\n  ~ google_compute_instance.default\\n    tags.#:         \\"0\\" => \\"2\\"\\n    tags.292811013: \\"\\" => \\"dev\\"\\n    tags.365508689: \\"\\" => \\"web\\"\\n```\\nterraform apply \u5c31\u4f1a\u5bf9resource\u8fdb\u884c\u4fee\u6539\\n\\n## 7.2 \u4e5f\u652f\u6301\u7834\u574f\u6027\u4fee\u6539,\u6bd4\u5982\u66f4\u6362\u78c1\u76d8\u955c\u50cf,\u6bd4\u5982\u4eceDebian 9\u6620\u50cf\u66f4\u6539\u4e3a\u4f7f\u7528Google\u7684Container-Optimized OS\\n```\\nboot_disk {\\n    initialize_params {\\n      image = \\"cos-cloud/cos-stable\\"\\n    }\\n  }\\n```\\nterrform init> terrform plan >terrform apply\u540e\\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230internal IP \u548c external ip\u6539\u53d8\u4e86,\u7136\u540e\u6211\u4eec\u767b\u9646\u8fdbvm instance\u540e,\u6211\u4eec\u4e4b\u524d\u7684\u6240\u4ee5\u8d44\u6599\u90fd\u6ca1\u6709\u4e86\\n<h1> \u6240\u4ee5\u5982\u679c\u8fdb\u884cdestructive change\u524d,\u4e00\u5b9a\u8981\u6ce8\u610f </h1>\\n\\n\\n## 8 terraform destroy\\n\u8f93\u5165\u547d\u4ee4\u540e:\\n```\\nAn execution plan has been generated and is shown below.\\nResource actions are indicated with the following symbols:\\n  - destroy\\n\\nTerraform will perform the following actions:\\n\\n  - google_compute_instance.default\\n\\n  - google_compute_network.vpc_network\\n```\\nterraform destroy\u547d\u4ee4\u9500\u6bc1\u8d44\u6e90,\u8be5\u547d\u4ee4\u7c7b\u578b\u4e8eterraform apply,terraform\u786e\u5b9a\u5fc5\u987b\u9500\u6bc1\u7269\u4ef6\u7684\u987a\u5e8f,\u5982\u679c\u8fd8\u6709\u8d44\u6e90,GCP\u5c06\u4e0d\u5141\u8bb8\u5220\u9664VPC\u7f51\u7edc,\u56e0\u6b64Terraform\u4f1a\u7b49\u5230\u5b9e\u4f8b\u88ab\u9500\u6bc1\u540e\u518d\u9500\u6bc1\u7f51\u7edc,terraform\u6267\u884c\u64cd\u4f5c\u7684\u65f6\u5019,terraform\u5c06\u5efa\u4e00\u4e2a\u4f9d\u8d56\u5173\u7cfb\u56fe\u5df2\u786e\u5b9a\u9500\u6bc1\u987a\u5e8f.\u5728\u5177\u6709\u591a\u4e2a\u8d44\u6e90\u7684\u66f4\u590d\u6742\u7684\u60c5\u51b5\u4e0b,Terraform\u5c06\u5728\u5b89\u5168\u7684\u60c5\u51b5\u4e0b\u5e76\u884c\u6267\u884c\u64cd\u4f5c.\\n\\n\\n## GCP\u4e5f\u53ef\u4ee5\u5220\u9664\\n\u6211\u4eec\u53ef\u4ee5\u53bbGCP shell\u4e2d\u8f93\u5165\u4e00\u4e0b\u547d\u4ee4\\n```\\ngcloud compute instances delete instance\u540d\u5b57\\n```\\n\\n\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7fresource\u4e0eresource\u4e4b\u95f4\u76f8\u4e92\u4f9d\u8d56,\u4f7f\u7528depends_on = [\\"\\"]\\n\u6bd4\u5982\u6211\u53ef\u4ee5\u73b0\u5728\u521b\u5efa\u4e00\u4e2astorage bucket, \u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u5728\u521b\u5efastorage bucket\u524d\u4e00\u5b9a\u8981\u521b\u5efa vm\u5148\\n\\nresource \\"google\\n```\\nresource \\"google_compute_instance\\" \\"default\\" {\\n  project      = \\"terraform-45110831\\"\\n  name         = \\"terraform\\"\\n  machine_type = \\"n1-standard-1\\"\\n  zone         = \\"us-central1-a\\"\\n  tags         = [\\"web\\", \\"dev\\"]\\n}\\n\\nresource \\"google_storage_bucket\\" \\"example_bucket\\" {\\n  depends_on = [\\"google_compute_instance.default\\"]\\n  ...\\n}\\n```\\n\\n## 9 \u53ef\u4ee5\u5728\u672c\u7ec8\u7aef\u8f93\u5165\u547d\u4ee4[Provisioners](https://www.terraform.io/docs/provisioners/index.html)\\n```\\nresource \\"google_compute_instance\\" \\"vm_instance\\" {\\n  name         = \\"terraform-instance\\"\\n  machine_type = \\"f1-micro\\"\\n  tags         = [\\"web\\", \\"dev\\"]\\n\\n  provisioner \\"local-exec\\" {\\n    command = \\"echo ${google_compute_instance.vm_instance.name}:  ${google_compute_instance.vm_instance.network_interface.0.access_config.0.nat_ip} >> ip_address.txt\\"\\n  }\\n```\\n## \u6bcf\u4e2avm\u5b9e\u4f8b\u53ef\u4ee5\u5177\u6709\u591a\u4e2a\u7f51\u7edc\u63a5\u53e3,\u56e0\u6b64\u6211\u4eec\u7684network interface.0\u5c31\u662f\u5f15\u7528\u7b2c\u4e00\u4e2a,\u6bcf\u4e2a\u7f51\u7edc\u63a5\u53e3\u4e5f\u5177\u6709\u591a\u4e2aaccess_config\u5feb,\u6211\u4eec\u9009\u62e9acess_config.0\u6307\u5b9a\u5f15\u7528\u7b2c\u4e00\u4e2a\\n# terraform\u7684\u6838\u5fc3\u5728\u4e8e\u53d8\u91cf,\u6211\u4e2a\u4eba\u611f\u89c9\u5c31\u50cf\u662fjavascript\u7684\u5b57\u5178\u5bf9\u8c61,\u6240\u4ee5\u5c5e\u6027\u90fd\u7528.\u6765\u5f15\u7528, \u53e6\u5916\u53d8\u91cf\u7684\u8868\u793a\u65b9\u6cd5\u4e3a\u7f8e\u5143\u7b26\u53f7$ + {\u53d8\u91cf} \u5c31\u662f ${google_compute_instance.vm_instance}\\n## \u4f46\u662f\u4f60\u53d1\u73b0ip_address.txt\u5728terraform apply\u540e\u6ca1\u6709\u521b\u5efa\u6210\u529f\\n\u56e0\u4e3a\u9884\u914d\u5668provisioner\u53ea\u662f\u5728\u521b\u5efa\u8d44\u6e90\u65f6\u8fd0\u884c,\u4f46\u662f\u6dfb\u52a0provisioner\u4e0d\u4f1a\u5f3a\u5236\u9500\u6bc1\u548c\u91cd\u65b0\u521b\u5efa\u8be5\u8d44\u6e90,\u6240\u4ee5\u6211\u4eec\u8981\u7528terraform taint\u544a\u8bc9terraform,\u9700\u8981\u91cd\u65b0\u521b\u5efa\u5b9e\u4f8b\\n```\\nterraform taint google_compute_instance.vm_instance\\nterraform apply\\ncat ip_address.txt\\n```\\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230txt\u6587\u4ef6\u5185\u5bb9\u4e86\\n\\n\\n## 10.1 \u521b\u5efavm instance\u6210\u529f\u540e,\u6211\u4eec\u9700\u8981\u6dfb\u52a0sshkey,\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u8fde\u63a5external ip,\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4:\\n```linux\\nssh-keygen \u4ea7\u751fid-rsa.pub, \u590d\u5236\u5176\u5185\u5bb9,\u5728vm\u7684meta data\u4e0a\u7c98\u8d34\u597d\\nssh username@external_ip\\n```\\n## 10.2 \u5982\u679c\u51fa\u73b0permisson dennied,\u53ef\u4ee5\u76f4\u63a5\u5728vm\u673a\u4e0a\u628assh key\u5220\u6389,\u7136\u540e\u5728\u672c\u5730\u91cd\u65b0\u521b\u5efassh key,\u7136\u540e\u590d\u5236\u7c98\u8d34\u5230 meta data\u4e0a\\n\\n## 11 \u8d77\u59cb\u811a\u672cmetadata_startup_script\\n\u6211\u4eec\u5728\u521b\u5efaresouce google_compute_instance \u7684\u65f6\u5019,\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2ametadata_startup_script\u5c5e\u6027,\u8fd9\u4e2a\u662f\u7528\u6765\u8fd0\u884c\u5728\u521b\u5efa\u7684vm\u865a\u62df\u673a\u4e0a\u7684,\u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u811a\u672c\u521b\u5efa[jupyter\u548cpython\u7684\u5de5\u5177(\u8bf7\u770b\u6848\u4f8b)](jupyterhub_GCP)\u7b49,\u811a\u672c\u662f\u5728root\u76ee\u5f55\u8fd0\u884c,\\n\\n### \u5982\u679c\u6211\u4eec\u60f3\u5728home\u76ee\u5f55\u8fd0\u884c,\u8bf7cd home/\u7528\u6237\u540d\\n```linux\\nmetadata_startup_script = \\"${file(\\"${var.jupyter_sh}\\")}\\" \\n```"},{"id":"/2020/4/26/\u5173\u4e8enginx\u548cport\u77e5\u8bc6\u603b\u7ed3","metadata":{"permalink":"/blog/2020/4/26/\u5173\u4e8enginx\u548cport\u77e5\u8bc6\u603b\u7ed3","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-26\u5173\u4e8enginx\u548cport\u77e5\u8bc6\u603b\u7ed3.md","source":"@site/blog/2020-4-26\u5173\u4e8enginx\u548cport\u77e5\u8bc6\u603b\u7ed3.md","title":"\u5173\u4e8enginx\u548cport\u77e5\u8bc6\u603b\u7ed3","description":"port\u662fservice\u670d\u52a1\u7684\u7aef\u53e3","date":"2020-04-26T00:00:00.000Z","formattedDate":"April 26, 2020","tags":[{"label":"nginx","permalink":"/blog/tags/nginx"},{"label":"port","permalink":"/blog/tags/port"},{"label":"target","permalink":"/blog/tags/target"},{"label":"load-balance","permalink":"/blog/tags/load-balance"}],"readingTime":3.155,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"nginx","title":"\u5173\u4e8enginx\u548cport\u77e5\u8bc6\u603b\u7ed3","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["nginx","port","target","load-balance"]},"prevItem":{"title":"\u4f7f\u7528terraform\u57fa\u672c\u8bed\u6cd5\u548c\u521b\u5efavm","permalink":"/blog/2020/4/27/_terraform"},"nextItem":{"title":"\u8bfb\u53d6avro\u6587\u4ef6\u7684schema","permalink":"/blog/2020/4/21/python\u8bfb\u53d6avro\u7684schema"}},"content":"##  port\u662fservice\u670d\u52a1\u7684\u7aef\u53e3\\n## targetport\u662fpod\u4e5f\u5c31\u662f\u5bb9\u5668\u7684\u7aef\u53e3\\n## nodeport\u662f\u5bb9\u5668\u6240\u5728\u5bbf\u4e3b\u673a\u7684\u7aef\u53e3(\u901a\u8fc7service\u66b4\u9732\u7ed9\u5bbf\u4e3b\u673a,\u800cport\u53bb\u6ca1\u6709)\\n\x3c!--truncate--\x3e\\nport\u7684\u4e3b\u8981\u4f5c\u7528\u662fclusters\u96c6\u7fa4\u91cc\u9762\u7684\u4e00\u4e2apod\u8bbf\u95ee\u5176\u4ed6pod\u7684\u65f6\u5019,\u9700\u8981\u7aef\u53e3port,\u6bd4\u5982\u96c6\u7fa4\u91cc\u9762nginx\u9700\u8981\u8bbf\u95eemysql,\u90a3\u4e48\u4e45\u9700\u8981mysql\u7684target port,\\n```mysql\\napiVersion: v1\\n kind: Service\\n metadata:\\n  name: mysql-service\\n spec:\\n  ports:\\n  - port: 33306\\n    targetPort: 3306\\n  selector:\\n   name: mysql-pod\\n```\\n\u6bd4\u5982nginx\u901a\u8fc7\u8bbf\u95eeservice\u768433306\u7aef\u53e3,service\u6839\u636eselector\u4e2d\u7684name,\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230mysql-pod\u8fd9\u4e2apod\u76843306\u7aef\u53e3\\n\u901a\u8fc7POST\u521b\u5efa service\\n```\\n{\\n    \\"kind\\": \\"Service\\",\\n    \\"apiVersion\\": \\"v1\\",\\n    \\"metadata\\": {\\n        \\"name\\": \\"my-service\\"\\n    },\\n    \\"spec\\": {\\n        \\"selector\\": {\\n            \\"app\\": \\"MyApp\\"\\n        },\\n        \\"ports\\": [\\n            {\\n                \\"name\\": \\"http\\",\\n                \\"protocol\\": \\"TCP\\",\\n                \\"port\\": 80,\\n                \\"targetPort\\": 9376\\n            },\\n            {\\n                \\"name\\": \\"https\\",\\n                \\"protocol\\": \\"TCP\\",\\n                \\"port\\": 443,\\n                \\"targetPort\\": 9377\\n            }\\n        ]\\n    }\\n}\\n```\\n\u5bf9\u4e8e\u6bcf\u4e2a\u8fd0\u884c\u7684pod,kubernete\u5c06\u5176\u6dfb\u52a0\u7ed9\u73b0\u6709\u7684service\u7684\u5168\u5c40\u53d8\u91cf, \u6bd4\u5982\u53eb\u505a\\"redis-master\\"\u7684service,\u5bf9\u5916\u6620\u5c046379\u7aef\u53e3,\\nservice\u8981\u60f3\u88abpod\u4f7f\u7528,\u5fc5\u987b\u5148\u6bd4pod\u5efa\u7acb\\n\u6240\u4ee5\u603b\u4f53\u6d41\u7a0b\u5c31pod\u4e4b\u95f4\u90fd\u662f\u901a\u8fc7service\u6765\u76f8\u4e92\u8bbf\u95ee,\u6240\u4ee5\u5148service\u7684port,\u7136\u540eservice\u901a\u8fc7selector\u627e\u5230name,\u518d\u628a\u8bf7\u6c42\u53d1\u9001\u5230name\u5bf9\u5e94\u7684target port\\n\\n# [Nginx\u57fa\u7840\u77e5\u8bc6](https://www.cnblogs.com/mq0036/p/9794540.html)\\n\\n## nginx\u80fd\u505a\u7684\u4e8b\u60c5:\\n1 [\u6b63\u5411,\u65b9\u5411\u4ee3\u7406](https://www.jianshu.com/p/ae76c223c6ef)\\n2 \u8d1f\u8f7d\u5747\u8861\\n3 http\u670d\u52a1\u5668-\u52a8\u9759\u5206\u79bb\\n\\n![png](../img/kubernetes/nginx/nginx.png)\\n\\n### \u6b63\u5411\u4ee3\u7406\u662fnginx proxy\u7ed9client\u4ee3\u7406,\u7136\u540e\u5bf9\u63a5Server,\u83b7\u53d6\u5185\u5bb9\\n### \u65b9\u5411\u4ee3\u7406\u662fproxy\u7ed9Server\u505a\u4ee3\u7406,clients\u8bbf\u95eeproxy\u83b7\u53d6\u5185\u5bb9\\n\\n### nginx\u7684\u8d1f\u8f7d\u5747\u8861\u6709\u4e00\u4e0b\u51e0\u4e2a\u7b56\u7565:\\n1 RR- \u6309\u7167\u8bf7\u6c42\u65f6\u95f4\u987a\u5e8f\u5206\u914d\u5230\u4e0d\u540c\u7684\u540e\u7aef\u670d\u52a1\u5668,\u540e\u7aef\u670d\u52a1\u5668\u6302\u6389,\u5c31\u81ea\u52a8\u5254\u9664\\n2 \u6743\u91cd- \u7ed9\u4e0d\u540c\u670d\u52a1\u5668\u8d4b\u4e88\u6743\u91cd,\u6743\u91cd\u5927\u7684,\u5c31\u627f\u5f53\u66f4\u591a\u8bbf\u95ee\\n3 ip_hash- \u56e0\u4e3a\u5ba2\u6237\u767b\u5f55\u4fe1\u606f\u4fdd\u5b58\u5728session\u4e2d,\u5982\u679c\u8df3\u8f6c\u5230\u53e6\u5916\u4e00\u53f0\u670d\u52a1\u5668\u7684\u65f6\u5019,\u9700\u8981\u91cd\u65b0\u767b\u5f55,\u6240\u4ee5ip_hash\u7684\u65b9\u6cd5\u8ba9\u4e00\u4e2a\u5ba2\u6237\u53ea\u8bbf\u95ee\u4e00\u53f0\u670d\u52a1\u5668\\n4 fair(\u7b2c\u4e09\u65b9)- \u6309\u540e\u7aef\u670d\u52a1\u5668\u7684\u54cd\u5e94\u65f6\u95f4\u6765\u5206\u914d\u8bf7\u6c42,\u54cd\u5e94\u8d8a\u77ed,\u5c31\u8d8a\u5148\u5206\u914d\\n5 url_hash- \u5c31\u662f\u8bbe\u5b9a\u65b9\u5411url\u8fde\u63a5\u662f\u8bbf\u95ee\u90a3\u53f0\u670d\u52a1\u5668,\u540e\u7aef\u670d\u52a1\u5668\u4e3a\u7f13\u5b58\u65f6\u6bd4\u8f83\u6709\u6548\\n\\n### \u52a8\u9759\u5206\u79bb\\nnginx\u672c\u8eab\u5c31\u662f\u4e00\u53f0\u670d\u52a1\u5668,\u6240\u4ee5\u53ef\u4ee5\u4fdd\u5b58\u4e00\u4e9b\u9759\u6001\u8d44\u6e90,\u4e5f\u5c31\u662f\u6211\u4eec\u53ef\u4ee5\u628a\u52a8\u6001\u7f51\u7ad9\u91cc\u7684\u52a8\u6001\u7f51\u9875\u6309\u7167\u4e00\u5b9a\u89c4\u5219\u628a\u4e0d\u53d8\u7684\u8d44\u6e90\u548c\u7ecf\u5e38\u53d8\u7684\u8d44\u6e90\u533a\u5206\u5f00\u6765,\u52a8\u9759"},{"id":"/2020/4/21/python\u8bfb\u53d6avro\u7684schema","metadata":{"permalink":"/blog/2020/4/21/python\u8bfb\u53d6avro\u7684schema","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-21-python\u8bfb\u53d6avro\u7684schema.md","source":"@site/blog/2020-4-21-python\u8bfb\u53d6avro\u7684schema.md","title":"\u8bfb\u53d6avro\u6587\u4ef6\u7684schema","description":"\u9996\u5148\u5b89\u88c5\u5305","date":"2020-04-21T00:00:00.000Z","formattedDate":"April 21, 2020","tags":[{"label":"dataproc","permalink":"/blog/tags/dataproc"},{"label":"GCP","permalink":"/blog/tags/gcp"},{"label":"avro","permalink":"/blog/tags/avro"},{"label":"bigquery","permalink":"/blog/tags/bigquery"}],"readingTime":0.35,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"avro","title":"\u8bfb\u53d6avro\u6587\u4ef6\u7684schema","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["dataproc","GCP","avro","bigquery"]},"prevItem":{"title":"\u5173\u4e8enginx\u548cport\u77e5\u8bc6\u603b\u7ed3","permalink":"/blog/2020/4/26/\u5173\u4e8enginx\u548cport\u77e5\u8bc6\u603b\u7ed3"},"nextItem":{"title":"\u628aavro\u6587\u4ef6\u653e\u5230bigquery","permalink":"/blog/2020/4/21/\u628aavro\u6587\u4ef6\u653e\u5230bigquery"}},"content":"\u9996\u5148\u5b89\u88c5\u5305\\n```\\npip install avro-python3\\n```\\n\u7136\u540e\u5728py\u6587\u4ef6\u5012\u5165\u5305\\n```\\nfrom avro.datafile import DataFileReader, DataFileWriter\\nimport avro.io\\nreader = avro.datafile.DataFileReader(open(\'./account_id_schema_new.avro\',\\"rb\\"),avro.io.DatumReader())\\nschema = reader.meta\\nprint(schema)\\n```\\n\x3c!--truncate--\x3e\\n\u663e\u793a\u7684\u6548\u679c\u5982\u4e0b:\\n```\\n{\'avro.schema\': b\'{\\"fields\\": [{\\"type\\": [\\"null\\", \\"string\\"], \\"name\\": \\"ACNO\\"}, {\\"type\\": [\\"null\\", \\"double\\"], \\"name\\": \\"FIELD_1\\"}, {\\"type\\": [\\"null\\", \\"double\\"], \\"name\\": \\"FIELD_2\\"}, {\\"type\\": [\\"null\\", \\"double\\"], \\"name\\": \\"FIELD_3\\"}], \\"type\\": \\"record\\", \\"name\\": \\"Root\\"}\',\\n \'avro.codec\': b\'null\'}\\n ```"},{"id":"/2020/4/21/\u628aavro\u6587\u4ef6\u653e\u5230bigquery","metadata":{"permalink":"/blog/2020/4/21/\u628aavro\u6587\u4ef6\u653e\u5230bigquery","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-21-\u628aavro\u6587\u4ef6\u653e\u5230bigquery.md","source":"@site/blog/2020-4-21-\u628aavro\u6587\u4ef6\u653e\u5230bigquery.md","title":"\u628aavro\u6587\u4ef6\u653e\u5230bigquery","description":"\u53bb\u5230\u63a7\u5236\u53f0,\u786e\u8ba4storage\u548cbigquery API\u5df2\u542f\u7528","date":"2020-04-21T00:00:00.000Z","formattedDate":"April 21, 2020","tags":[{"label":"dataproc","permalink":"/blog/tags/dataproc"},{"label":"GCP","permalink":"/blog/tags/gcp"},{"label":"avro","permalink":"/blog/tags/avro"},{"label":"bigquery","permalink":"/blog/tags/bigquery"}],"readingTime":0.915,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"avro","title":"\u628aavro\u6587\u4ef6\u653e\u5230bigquery","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["dataproc","GCP","avro","bigquery"]},"prevItem":{"title":"\u8bfb\u53d6avro\u6587\u4ef6\u7684schema","permalink":"/blog/2020/4/21/python\u8bfb\u53d6avro\u7684schema"},"nextItem":{"title":"\u7528yaml\u914d\u7f6e\u6587\u4ef6\u4f20\u53c2\u6570\u7ed9pyspark,\u7136\u540e\u518ddataproc\u8fd0\u884c","permalink":"/blog/2020/4/18/dataproc+spark+yaml"}},"content":"\u53bb\u5230\u63a7\u5236\u53f0,\u786e\u8ba4storage\u548cbigquery API\u5df2\u542f\u7528\\n\u6253\u5f00gcs\\n\u8bbe\u7f6eproject id\\n```\\ngcloud config set project project_id\\n```\\n\x3c!--truncate--\x3e\\n\\n\u5728storage\u4e0a\u521b\u5efabucket\\n```\\ngsutil mb gs://bucket_name\\ngsutil ls #\u67e5\u770b\u521b\u5efa\u662f\u5426\u6210\u529f\\n```\\n```\\n\u4e0a\u4f20\u6587\u4ef6\u5939\u6216\u8005\u6587\u4ef6\u5230storage bucket, \u5982\u679cstorage bucket\u6ca1\u6709\u8fd9\u4e2a\u6587\u4ef6\u540d,\u5c31\u4f1a\u521b\u5efa\u4e00\u4e2a\\n```\\n```\\ngsutil cp -r faker_demo/data gs://z_bucket/sub_file\\ngsutil ls gs://z_bucket/sub_file/* \u53c2\u770b\u6240\u6709\u6587\u4ef6\\ngsutil rm gs://z_bucket/sub_file/.DS_Store #\u5220\u9664\u6587\u4ef6\\n```\\n\u53bbbig query \u521b\u5efadataset\\n```\\nbq mk fake_data\\nbq ls #\u67e5\u770b\u547d\u4ee4\\n```\\n\u521b\u5efabiq query \u8868\u683c csv, \u6216\u8005avro,\u6ce8\u610f--source_format \u8981\u5927\u5199AVRO,CSV, \u5982\u679ccsv\u7c7b\u578b\u7684schema\u53ef\u4ee5\u7528--autodetect,\\n```\\nbq load --source_format=AVRO fake_data.account_id_schema \\"gs://z_bucket/sub_file/avro_output/accountID.avro\\"\\n\\nbq load --source_format=CSV fake_data.account_id_schema  \\"gs://z_bucket/sub_file/input/account_id_schema.csv\\" \\n\\nbq load --autodetect --source_format=CSV fake_data.account_id_schema \\"gs://z_bucket/sub_file/output/accountID.csv\\"\\n```\\n\u67e5\u770b\u5b57\u6bb5\\n\\n```\\nbq show fake_data.account_id_schema\\n```\\n\\n\u67e5\u8be2\\n\\n```\\nbq query \\"select * from fake_data.account_id_schema limit 5\\"\\n```"},{"id":"/2020/4/18/dataproc+spark+yaml","metadata":{"permalink":"/blog/2020/4/18/dataproc+spark+yaml","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-18-dataproc+spark+yaml.md","source":"@site/blog/2020-4-18-dataproc+spark+yaml.md","title":"\u7528yaml\u914d\u7f6e\u6587\u4ef6\u4f20\u53c2\u6570\u7ed9pyspark,\u7136\u540e\u518ddataproc\u8fd0\u884c","description":"\u9996\u5148\u6211\u4eec\u8981\u5b66Yaml\u8bed\u6cd5:","date":"2020-04-18T00:00:00.000Z","formattedDate":"April 18, 2020","tags":[{"label":"dataproc","permalink":"/blog/tags/dataproc"},{"label":"GCP","permalink":"/blog/tags/gcp"},{"label":"Spark","permalink":"/blog/tags/spark"},{"label":"Hadoop","permalink":"/blog/tags/hadoop"}],"readingTime":2.73,"hasTruncateMarker":false,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"dataproc6","title":"\u7528yaml\u914d\u7f6e\u6587\u4ef6\u4f20\u53c2\u6570\u7ed9pyspark,\u7136\u540e\u518ddataproc\u8fd0\u884c","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["dataproc","GCP","Spark","Hadoop"]},"prevItem":{"title":"\u628aavro\u6587\u4ef6\u653e\u5230bigquery","permalink":"/blog/2020/4/21/\u628aavro\u6587\u4ef6\u653e\u5230bigquery"},"nextItem":{"title":"yaml\u8bed\u6cd5\u5b66\u4e60","permalink":"/blog/2020/4/18/yaml\u8bed\u6cd5\u5b66\u4e60"}},"content":"\u9996\u5148\u6211\u4eec\u8981\u5b66Yaml\u8bed\u6cd5:\\n\u5177\u4f53yaml\u8bed\u6cd5\u53ef\u4ee5\u53c2\u8003[yaml\u8bed\u6cd5\u8be6\u60c5](yaml1)\\n\\n\u6574\u4f53\u601d\u8def\\n## \u51c6\u5907yaml\u6587\u4ef6\u548cpyspark\\n1. \u5bfc\u5165\u5de5\u5177\u5305\\n```\\n#!/usr/bin/env python\\nfrom pyspark.sql import SparkSession\\nimport sys,yaml,datetime\\nimport os\\nimport pathlib\\nimport google.cloud.storage as gcs\\n```\\n2. \u6211\u4eec\u5199\u4e86\u4e00\u4e2aYaml\u6587\u4ef6\u4f5c\u4e3aconfig\u6587\u4ef6\\n3. \u6211\u4eec\u5728\u6211\u4eec\u7684pyspark\u6587\u4ef6\u8bfb\u53d6yaml\u6587\u4ef6,\u8fd9\u91cc\u8981\u6ce8\u610f\u7684\u662f,\u56e0\u4e3a\u672c\u5730\u548cGCS\u4f1a\u6709\u4e0d\u540c,\u672c\u5730\u662f\u53ef\u4ee5\u76f4\u63a5\u8bfb\u53d6\u7684,\u4f46\u662f\u5982\u679cyaml\u6587\u4ef6\u5728GCS,yaml\u6587\u4ef6\u5c31\u662fobject,\u662f\u4e0d\u53ef\u6539\u5199\u7684,\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5open(yaml\u6587\u4ef6,\\"r\\")\\n4. \u6211\u4eec\u9700\u8981\u5728pyspark\u6587\u4ef6\u4e0a\u521b\u5efagcs\u5ba2\u6237\u7aef,\u7136\u540e\u521b\u5efa\u8bbe\u7f6e\u4e00\u4e2a\u672c\u5730\u6587\u4ef6\u8def\u5f84,\u7136\u540e\u901a\u8fc7\u5ba2\u6237\u7aef\u8bfb\u53d6yaml\u6587\u4ef6\u5185\u5bb9\u5e76\u4e14\u4e0b\u8f7d\u5230\u672c\u5730,\u7136\u540e\u518d\u901a\u8fc7\u672c\u5730\u4f7f\u7528with open\u65b9\u6cd5\u8bfb\u53d6yaml\u6587\u4ef6\u5185\u5bb9\\n```\\nclient = gcs.Client()\\n\\n#set target file to write to\\ntarget = pathlib.Path(\\"local_file.yaml\\")\\n\\nconfig_file = sys.argv[1] +\\"config.yaml\\"\\n\\n#set file to download\\nFULL_FILE_PATH = config_file\\n\\n#open filestream with write permissions\\nwith target.open(mode=\\"wb\\") as downloaded_file:\\n\\n        #download and write file locally\\n        client.download_blob_to_file(FULL_FILE_PATH, downloaded_file)\\n\\nconfig_file=\\"local_file.yaml\\"\\n```\\n\\n\u8bfb\u53d6\u540e,\u6211\u4eec\u5c31\u53ef\u4ee5\u64cd\u4f5c\u4e00\u4e0b\u4ee3\u7801\\n```\\nfor job in config[\\"jobs\\"]:\\n    print(\\"Creating source views...\\")\\n    for source in job[\\"sources\\"]:\\n        print(source)\\n        if source.get(\\"table\\") is not None:\\n            print(\\"Creating view %s from table %s...\\" % (source[\\"view\\"], source[\\"table\\"]))\\n            df = spark.table(source[\\"table\\"])\\n            df.show(5)\\n            print(\'table now\')\\n        else:\\n            print(\\"Creating view %s from object %s...\\" % (source[\\"view\\"], source[\\"object\\"]))\\n            df = spark.read.format(source[\'object\'][source[\'object\'].rfind(\'.\')+1:]).option(\\"header\\",\\"true\\").load(source[\'object\'])\\n            df.show(5)\\n        if source.get(\\"columns\\") is not None:\\n            # columns listed, select given columns\\n            df = df.select(source[\\"columns\\"])\\n            df.show(5)\\n        if source.get(\'Fillna\') is not None:\\n            print(source[\'Fillna\'][\\"fields\\"])\\n            print(\'hah\',type(source[\'Fillna\']))\\n            df = df.fillna({source[\'Fillna\'][\\"fields\\"]:source[\'Fillna\'][\\"num\\"]})\\n            df.show(5)\\n        if source.get(\\"filters\\") is not None:\\n            df.filter(source[\\"filters\\"])\\n        if source.get(\\"union\\") is not None:\\n            df_union = spark.sql(\\"select * from %s\\"%(source[\'union\']))\\n            df.union(df_union)\\n            df.show(1)\\n        if source.get(\\"join\\") is not None:\\n            cur = df.select(source[\'Key\'])\\n            pre = spark.sql(\\"select * from %s\\"%(source[\'right\']))\\n            df = cur.join(pre,[source[\'Key\']],source[\'how\'])\\n            df.show(5)\\n        df.createOrReplaceTempView(source[\\"view\\"])\\n    print(\\"Performing SQL Transformations...\\")\\n    if job.get(\\"transforms\\") is not None:\\n        for transform in job[\\"transforms\\"]:\\n            spark.sql(transform[\\"sql\\"])\\n            print(df.count())\\n    if job.get(\\"targets\\") is not None:\\n        print(\\"Writing out final object to %s...\\" % (job[\\"targets\\"][\\"target_location\\"]))\\n        start = datetime.datetime.now()\\n        final_df = spark.table(job[\\"targets\\"][\\"final_object\\"])\\n        final_df.write.mode(job[\\"targets\\"][\\"mode\\"]).format(job[\\"targets\\"][\\"format\\"]).save(job[\\"targets\\"][\\"target_location\\"])\\n        finish = datetime.datetime.now()\\n        print(\\"Finished writing out target object...\\")\\n```\\n## \u8fd9\u7aef\u4ee3\u7801\u7684\u903b\u8f91\u5c31\u662f\u5faa\u73afconfig\u91cc\u9762\u7684jobs,jobs\u91cc\u9762\u5305\u62ec\u8bfb\u53d6\u6587\u4ef6\u6216\u8005table,fillna,union,transoform\u7b49etl\u4f5c\u4e1a\\n\\n## \u51c6\u5907\u542f\u52a8dataproc\u4ee3\u7801\\n```\\nCLUSTER_NAME=newnew\\ngcloud beta dataproc clusters create ${CLUSTER_NAME} \\\\\\n    --region=global \\\\\\n    --zone=us-central1-b \\\\\\n    --worker-machine-type n1-standard-1 \\\\\\n    --num-workers 2 \\\\\\n    --image-version 1.4-debian \\\\\\n    --initialization-actions gs://dataproc-initialization-actions/python/pip-install.sh \\\\\\n    --metadata \'PIP_PACKAGES=google-cloud-storage PyYAML pathlib avro-python3 dask[dataframe] gcsfs fastavro\' \\\\\\n    --enable-component-gateway \\\\\\n    --worker-boot-disk-size=40 \\\\\\n    --optional-components=ANACONDA \\\\\\n    --enable-component-gateway\\nBUCKET_NAME=zz_michael\\ngcloud config set dataproc/region global\\ngcloud dataproc jobs submit pyspark dyyaml.py --cluster newnew \\\\\\n--jars=gs://spark-lib/bigquery/spark-bigquery-latest.jar \\\\\\n--jars=https://repo1.maven.org/maven2/org/apache/spark/spark-avro_2.11/2.4.4/spark-avro_2.11-2.4.4.jar \\\\\\n-- gs://${BUCKET_NAME}/yaml/ \\n```\\n\\n## job\u5b8c\u6210\u540e\u9700\u8981\u5220\u9664dataproc clusters\\n```\\nCLUSTER_NAME=newnew\\ngcloud dataproc clusters delete $CLUSTER_NAME\\n```"},{"id":"/2020/4/18/yaml\u8bed\u6cd5\u5b66\u4e60","metadata":{"permalink":"/blog/2020/4/18/yaml\u8bed\u6cd5\u5b66\u4e60","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-18-yaml\u8bed\u6cd5\u5b66\u4e60.md","source":"@site/blog/2020-4-18-yaml\u8bed\u6cd5\u5b66\u4e60.md","title":"yaml\u8bed\u6cd5\u5b66\u4e60","description":"\u9996\u5148\u6211\u4eec\u8981\u5b66Yaml\u8bed\u6cd5:","date":"2020-04-18T00:00:00.000Z","formattedDate":"April 18, 2020","tags":[{"label":"dataproc","permalink":"/blog/tags/dataproc"},{"label":"GCP","permalink":"/blog/tags/gcp"},{"label":"Spark","permalink":"/blog/tags/spark"},{"label":"Hadoop","permalink":"/blog/tags/hadoop"}],"readingTime":3.445,"hasTruncateMarker":false,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"yaml1","title":"yaml\u8bed\u6cd5\u5b66\u4e60","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["dataproc","GCP","Spark","Hadoop"]},"prevItem":{"title":"\u7528yaml\u914d\u7f6e\u6587\u4ef6\u4f20\u53c2\u6570\u7ed9pyspark,\u7136\u540e\u518ddataproc\u8fd0\u884c","permalink":"/blog/2020/4/18/dataproc+spark+yaml"},"nextItem":{"title":"dataproc--dataproc+GCS+Bigquery+Pyspark","permalink":"/blog/2020/4/17/dataproc+GCS+Bigquery+pyspark"}},"content":"\u9996\u5148\u6211\u4eec\u8981\u5b66Yaml\u8bed\u6cd5:\\n\u5177\u4f53yaml\u8bed\u6cd5\u53ef\u4ee5\u53c2\u8003[yaml\u8bed\u6cd5\u8be6\u60c5]([yaml1](https://learn-the-web.algonquindesign.ca/topics/yaml/))\\n\\n# yaml\u8bed\u6cd5\u7684\u6838\u5fc3\u6211\u89c9\u5f97\u4e5f\u662f\u5b57\u5178\u8bed\u8a00\\n\\n## \u7f29\u51cf\u7a7a\u683c:\\nYAML\u5bf9\u6b64\u975e\u5e38\u4e25\u683c:\u4ec5\u7f29\u8fdb2\u4e2a\u7a7a\u683c\\n\\n## \u7ed3\u6784\u5316\u6570\u636e-\u8a00\u5916\u4e4b\u610f\u5c31\u662f\u5b57\u5178\u5bf9\u8c61\\n\u4e24\u4e2a\u4e3b\u8981\u7ed3\u6784:\\n1. ```\u5bf9\u8c61 \u7c7b\u4f3cjavascript\u7684\u5bf9\u8c61 \u6216\u8005html <dl>```\\n2. ```\u6570\u7ec4 \u7c7b\u4f3cjavascript\u7684\u6570\u7ec4 \u7c7b\u4f3chtml<ul>```\\n\\n## \u8bfb\u53d6yaml\u6587\u4ef6\\n```\\nconfig_file  = \'./test.yaml\'\\nwith open(config_file, \'r\') as stream:\\n    config = yaml.load(stream.read(),Loader=yaml.FullLoader)\\n```\\n\\n### \u5bf9\u8c61\\nYAML\u4e2d\u7684\u5bf9\u8c61\u4ee5\u5355\u8bcd/\u672f\u8bed\u5f00\u5934,\u540e\u8ddf\u5192\u53f7\u548c\u7a7a\u683c\\n\\n\u5bf9\u8c61\u5305\u542b\u5bf9\u8c61\\n```\\ndimensions:\\n  width: 3 metres\\n  height: 8 metres\\n  length: 12 metres\\n  weight: 4 tonnes\\n```\\n\u6211\u4eec\u53ef\u4ee5dimension[\'width\']\u83b7\u53d6wdith\u6570\u503c\\n```\\nfor key,values in config[\'dimensions\']:\\n    print(key,values)\\n```\\n\\n### \u6570\u7ec4\\n```\\nlikes_to_eat:\\n  - Other dinosaurs\\n  - Meat\\n  - More meat\\n  - Not plants\\n```\\n```\\nfor key,values in enumerate(config[\'likes_to_eat\']):\\n    print(key,values)\\n```\\n\\n### \u6570\u636e\u5305\u542b\u5bf9\u8c61\\n```\\nPerson:\\n    - name: T. rex\\n      period: Late Cretaceous Period\\n    - name: Stegosaurus\\n      period: Late Jurassic Period\\n    - name: Velociraptor\\n      period: Cretaceous Period\\n```\\n\\"-\\"\u53ef\u4ee5\u770b\u51fa\u5217\u8868[],\u7136\u540e\u5982\u679c\u91cc\u9762\u6709\u5bf9\u8c61,\u5c31\u662f\u5217\u8868\u5d4c\u5957\u5bf9\u8c61\u7684\u610f\u601d\\n\\n## \u4ee5\u4e0a\u5c31\u662fyaml\u6700\u57fa\u672c\u7684\u7528\u6cd5\\n\\n### \u6587\u5b57\u533a\u5757\\n\u5982\u679c\u60a8\u7684YAML\u4e2d\u6709\u8d85\u5927\u6587\u672c\u5757\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u7ad6\u7ebf\uff08|\uff09\u6216\u5927\u4e8e\u7b26\u53f7\uff08>\uff09\u7684\u65b9\u5f0f\u5c06\u6587\u672c\u5206\u5f00\uff0c\u5e76\u5141\u8bb8\u66f4\u591a\u683c\u5f0f\u3002\\n\u5927\u4e8e\u53f7\u4f7f\u60a8\u53ef\u4ee5\u5728\u591a\u884c\u4e0a\u7f16\u5199\u6587\u672c\uff0c\u56e0\u4e3a\u5f53\u60a8\u89e3\u6790YAML\u65f6\uff0c\u8fd9\u4e9b\u884c\u5c06\u6298\u53e0\u4e3a\u4e00\u884c\u3002\\n```\\ndesc: >\\n  Tyrannosaurus (/t\u0268\u02ccr\xe6n\u0259\u02c8s\u0254r\u0259s/ or /ta\u026a\u02ccr\xe6n\u0259\u02c8s\u0254r\u0259s/ (\\"tyrant lizard\\", from the Ancient Greek tyrannos (\u03c4\u03cd\u03c1\u03b1\u03bd\u03bd\u03bf\u03c2), \\"tyrant\\", and sauros (\u03c3\u03b1\u1fe6\u03c1\u03bf\u03c2), \\"lizard\\"[1])) is a genus of coelurosaurian theropod dinosaur.\\n  The species Tyrannosaurus rex (rex meaning \\"king\\" in Latin), commonly abbreviated to T. rex, is one of the most well-represented of the large theropods.\\n```\\n\\n## \u9a8c\u8bc1\\n\u6211\u4eec\u53ef\u4ee5\u53bbyaml\u8bed\u6cd5\u9a8c\u8bc1\u7f51\u7ad9\u9a8c\u8bc1(http://www.yamllint.com/)\\n\\n\u6211\u7684\u4e00\u4e2a\u5b9e\u4f8b:\\n```\\njobs: \\n  - \\n    name: \\"read_file and conbine as one dataframe5\\"\\n    sources: \\n      - \\n        Fillna: \\n          fields: NUM_OF_MTHS_PD_30\\n          num: 0\\n        JobDescription: \\"read Curr_RD file\\"\\n        object: \\"gs://zz_michael/yaml/Curr_RD.avro\\"\\n        view: Curr_RD\\n      - \\n        Fillna: \\n          fields: NUM_OF_MTHS_PD_30\\n          num: 0\\n        JobDescription: \\"read Prev_RD file\\"\\n        object: \\"gs://zz_michael/yaml/Prev_RD.avro\\"\\n        view: Prev_RD\\n      - \\n        JobDescription: \\"left join\\"\\n        Key: ARNG_ID\\n        how: left_outer\\n        join: left_outer\\n        left: Curr_RD\\n        right: Prev_RD\\n        table: Curr_RD\\n        view: df5\\n  - \\n    name: \\"filter Df5 df\\"\\n    sources: \\n      - \\n        JobDescription: \\"filter df5\\"\\n        filters: \\"NUM_OF_MTHS_PD_30 >=1\\"\\n        table: df5\\n        view: df6\\n    transforms: \\n      - \\n        sql: \\"CREATE OR REPLACE TEMPORARY VIEW df7 as select * from df5 where NUM_OF_MTHS_PD_30 is null or NUM_OF_MTHS_PD_30 <1\\"\\n  - \\n    name: fillna\\n    sources: \\n      - \\n        Fillna: \\n          fields: NUM_OF_MTHS_PD_30\\n          num: 0\\n        JobDescription: fillna\\n        table: df7\\n        view: df8\\n  - \\n    name: union\\n    sources: \\n      - \\n        JobDescription: union\\n        table: df6\\n        union: df8\\n        view: df9\\n  - \\n    name: write to avro file\\n    sources: \\n      - \\n        JobDescription: \\"left join\\"\\n        Key: ARNG_ID\\n        how: left_outer\\n        join: left_outer\\n        left: Curr_RD\\n        right: df9\\n        table: Curr_RD\\n        view: df10\\n    targets: \\n      final_object: df10\\n      format: csv\\n      mode: overwrite\\n      target_location: \\"gs://zz_michael/yaml/output\\"\\n    transforms: \\n      - \\n        sql: \\"CREATE OR REPLACE TEMPORARY VIEW df10 as select * from df10\\"\\nname: haha\\n```\\n## \u89e3\u6790\u4e0a\u9762YAML\u6587\u4ef6\\n1. \u6211\u4eec\u53ef\u4ee5\u770b\u5230Jobs\u662f\u5bf9\u8c61 jobs(object)\\n2. \u4ece\'-\'\u53ef\u4ee5\u770b\u51fa,Jobs\u5bf9\u8c61\u5d4c\u5957\u5217\u8868 \u7c7b\u4f3c [i for i in config[\\"jobs\\"]],\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u53ef\u4ee5\u904d\u5386jobs\\n3. \u5217\u8868\u91cc\u9762\u5d4c\u5957\u5bf9\u8c61: [{\\"name\\":\\"\\",\\"sources\\":\\"\\"},{\\"name\\":\\"\\",\\"sources\\":\\"\\",\\"transforms\\":\\"\\"},{\\"name\\":\\"\\",\\"sources\\":\\"\\"},{\\"name\\":\\"\\",\\"sources\\":\\"\\"},{\\"name\\":\\"\\",\\"sources\\":\\"\\",\\"transforms\\":\\"\\",\'targets\':\\"\\"}]\\n4. \u6211\u4eec\u770b\u5230source\u4e5f\u662f\u6709\u5d4c\u5957\u7684,\u4e5f\u662f\u5d4c\u5957\u5bf9\u8c61[{},{}]\\n5. Fillna\u5bf9\u8c61\u91cc\u9762\u4e5f\u662f\u6709\u5d4c\u5957\u5bf9\u8c61"},{"id":"/2020/4/17/dataproc+GCS+Bigquery+pyspark","metadata":{"permalink":"/blog/2020/4/17/dataproc+GCS+Bigquery+pyspark","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-17-dataproc+GCS+Bigquery+pyspark.md","source":"@site/blog/2020-4-17-dataproc+GCS+Bigquery+pyspark.md","title":"dataproc--dataproc+GCS+Bigquery+Pyspark","description":"\u6d41\u7a0b\u5f88\u7b80\u5355","date":"2020-04-17T00:00:00.000Z","formattedDate":"April 17, 2020","tags":[{"label":"dataproc","permalink":"/blog/tags/dataproc"},{"label":"GCP","permalink":"/blog/tags/gcp"},{"label":"Spark","permalink":"/blog/tags/spark"},{"label":"Hadoop","permalink":"/blog/tags/hadoop"}],"readingTime":1.585,"hasTruncateMarker":false,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"dataproc4","title":"dataproc--dataproc+GCS+Bigquery+Pyspark","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["dataproc","GCP","Spark","Hadoop"]},"prevItem":{"title":"yaml\u8bed\u6cd5\u5b66\u4e60","permalink":"/blog/2020/4/18/yaml\u8bed\u6cd5\u5b66\u4e60"},"nextItem":{"title":"dataproc\u53c2\u6570\u5316\u8dd1spark\u548c\u8bfb\u5199avro\u6587\u4ef6","permalink":"/blog/2020/4/17/dataproc\u53c2\u6570\u5316\u8dd1spark\u548c\u8bfb\u5199avro"}},"content":"## \u6d41\u7a0b\u5f88\u7b80\u5355\\n\u9996\u5148\u6211\u4eec\u4eceGCS\u90a3\u91cc\u8bfb\u53d6avro\u6570\u636e,\u7136\u540e\u6211\u4eec\u8bfb\u53d6avro\u6570\u636e\u53d8\u6210dask.Dataframe,\u7136\u540e\u5bf9dask.Dataframe\u64cd\u4f5c,\u518d\u8f6c\u6210pandas Dataframe,\u7136\u540e\u53d8\u6210Spark Dataframe,\u6700\u540e\u901a\u8fc7Spark \u4e0e bigquery \u7684connector\u5bf9\u63a5\u8d77\u6765,\u5199\u5165big query\\n\\n## \u5b89\u88c5\u521a\u624d\u7684\u601d\u8def\u5199python.py\\n```\\nimport dask.bag as db # \u5bfc\u5165\u5de5\u5177\u5305\\ndef run():\\n    b = db.read_avro(\'gs://zz_mm_bucket/account_id_schema_new.avro\') #\u4eceGCS\u8bfb\u53d6avro\u6587\u4ef6\\n    df = b.to_dataframe() # \u8f6c\u6210Dataframe\\n    df_values = df.compute().values.tolist() #\u8f6c\u6210pandas\u7684dataframe\\n    df_columns = list(df.columns)\\n\\n    import pandas as pd\\n    from pyspark.sql import SparkSession #spark\u521d\u59cb\u5316\\n    spark = SparkSession.builder.appName(\\"DataFrame\\").getOrCreate()\\n    bucket = \\"haha_mm_bucket\\" #\u8bbe\u7f6ebucket\\n    spark.conf.set(\'temporaryGcsBucket\', bucket) #\u7ed9spark\u521d\u59cb\u5316\u8bbe\u7f6ebucket\u96f6\u65f6\u5b58\u653e\u6570\u636e\u7684gcs\\n\\n    spark_df = spark.createDataFrame(df_values, df_columns) \u628adataframe\u8f6c\u6210spark\u7684dataframe\\n    spark_df.show(10) #\u5bf9spark\u7684dataframe\u8fdb\u884c\u64cd\u4f5c\\n    spark_df.write.format(\'bigquery\').option(\'table\',\'query-11:newdata.newdata\').save() # \u5199\u5165bigquery\\n\\nif __name__ == \'__main__\':\\n    run()\\n```\\n###  \u53bb\u5230\u7ec8\u7aef\u8f93\u5165\u547d\u4ee4,\u63d0\u4ea4spark job\\n```\\ngcloud dataproc jobs submit pyspark wordcount.py \\\\\\n    --cluster cluster-name \\\\\\n    --region cluster-region (example: \\"us-central1\\") \\\\\\n    --jars=gs://spark-lib/bigquery/spark-bigquery-latest.jar\\n```\\n\u4e3b\u8981\u683c\u5f0f: gcloud dataproc jobs submit pyspark python.py(python\u6587\u4ef6) \\\\\\n        --cluster cluster-name \\\\\\n        --region cluster-region(\u6bd4\u5982:us-central1,\u4e00\u5b9a\u8981\u5bf9\u5e94dataproc\u96c6\u7fa4\u7684region)\\n        --jars \u4e0ebiguqery\u8fde\u63a5\u7684\u5305\\n\u6ce8\u610f\u8fd9\u91cc\u7684jars:\\nIf you are using Dataproc image 1.5, add the following parameter:\\n--jars=gs://spark-lib/bigquery/spark-bigquery-latest_2.12.jar\\nIf you are using Dataproc image 1.4 or below, add the following parameter:\\n--jars=gs://spark-lib/bigquery/spark-bigquery-latest.jar\\n\\n\\n```\\ngcloud config set dataproc/region us-central1\\nBUCKET_NAME=haha_mm_bucket\\ninput=new.avro\\ngcloud dataproc jobs submit pyspark wordcount3.py \\\\\\n--cluster cluster-662b \\\\\\n-- gs://${BUCKET_NAME}/${input} \\\\\\n--jars=gs://spark-lib/bigquery/spark-bigquery-latest.jar \\\\\\n--packages com.databricks:spark-avro_2.11:4.0.0\\n```"},{"id":"/2020/4/17/dataproc\u53c2\u6570\u5316\u8dd1spark\u548c\u8bfb\u5199avro","metadata":{"permalink":"/blog/2020/4/17/dataproc\u53c2\u6570\u5316\u8dd1spark\u548c\u8bfb\u5199avro","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-17-dataproc\u53c2\u6570\u5316\u8dd1spark\u548c\u8bfb\u5199avro.md","source":"@site/blog/2020-4-17-dataproc\u53c2\u6570\u5316\u8dd1spark\u548c\u8bfb\u5199avro.md","title":"dataproc\u53c2\u6570\u5316\u8dd1spark\u548c\u8bfb\u5199avro\u6587\u4ef6","description":"1. spark \u521d\u59cb\u5316,\u56e0\u4e3a\u8981\u8bfb\u53d6\u6210dataframe\u6216\u8005sql\u5f62\u5f0f,\u5bfc\u5165SparkSession","date":"2020-04-17T00:00:00.000Z","formattedDate":"April 17, 2020","tags":[{"label":"dataproc","permalink":"/blog/tags/dataproc"},{"label":"GCP","permalink":"/blog/tags/gcp"},{"label":"Spark","permalink":"/blog/tags/spark"},{"label":"Hadoop","permalink":"/blog/tags/hadoop"}],"readingTime":2.74,"hasTruncateMarker":false,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"dataproc5","title":"dataproc\u53c2\u6570\u5316\u8dd1spark\u548c\u8bfb\u5199avro\u6587\u4ef6","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["dataproc","GCP","Spark","Hadoop"]},"prevItem":{"title":"dataproc--dataproc+GCS+Bigquery+Pyspark","permalink":"/blog/2020/4/17/dataproc+GCS+Bigquery+pyspark"},"nextItem":{"title":"dataproc\u81ea\u52a8\u4f38\u7f29\u548c\u8fd0\u884cspark job","permalink":"/blog/2020/4/17/dataproc\u81ea\u52a8\u4f38\u7f29\u548c\u8fd0\u884csparkjob"}},"content":"### 1. spark \u521d\u59cb\u5316,\u56e0\u4e3a\u8981\u8bfb\u53d6\u6210dataframe\u6216\u8005sql\u5f62\u5f0f,\u5bfc\u5165SparkSession\\n```\\nfrom pyspark.sql import SparkSession\\nimport sys\\n```\\n### 2. \u521b\u5efaspark\u5bf9\u8c61\\n```\\nspark = SparkSession \\\\\\n  .builder \\\\\\n  .master(\'yarn\') \\\\\\n  .appName(\'gcs-sparkdataframe-sql-avro\') \\\\\\n  .getOrCreate()\\n```\\n### \u53c2\u6570\u5224\u65ad\u548c\u53c2\u6570\u8bbe\u7f6e\\n```\\nif len(sys.argv) != 4:\\n  raise Exception(\\"Exactly 3 arguments are required: <inputUri> <table1><table2>\\")\\n\\ninputUri=sys.argv[1]\\ntable1=sys.argv[2]\\ntable2=sys.argv[3]\\n```\\n### 4 \u8bfb\u53d6avro\u6587\u4ef6\\n```\\ndf = spark.read.format(\'avro\').load(inputUri)\\n```\\n### 5 \u6ce8\u518c\u89c6\u56fe,\u5b9e\u884c\u67e5\u8be2\u8bed\u53e5\\n```\\ndf1 = spark.sql(\\"select ACNO,%s from bigtable\\" % (\\",\\".join(df.columns[1:round(len(df.columns) / 2)])))\\ndf2 = spark.sql(\\"select ACNO,%s from bigtable\\" % (\\",\\".join(df.columns[round(len(df.columns) / 2):])))\\ndf1.show(10)\\ndf2.show(10)\\n```\\n\\n### 6 \u5904\u7406\u597d\u7684dataframe\u5bf9\u8c61\u5199\u6210avro\u6587\u4ef6 (\u6ce8\u610f,\u7528sql\u5904\u7406\u8fc7\u540e\u7684\u8fd8\u662fdataframe\u5bf9\u8c61)\\n```\\ndf1.write.format(\'avro\').save(table1,\'avro\')\\n\\ndf2.write.format(\'avro\').save(table2,\'avro\')\\n```\\n\\n### 7 \u53bb\u5230\u7ec8\u7aef\u8f93\u5165\u547d\u4ee4,\u521b\u5efadataproc\u96c6\u7fa4,\u7136\u540e\u63d0\u4ea4spark job\\n```\\nCLUSTER_NAME=newnew\\ngcloud beta dataproc clusters create ${CLUSTER_NAME} \\\\\\n    --region=global \\\\\\n    --zone=us-central1-b \\\\\\n    --worker-machine-type n1-standard-1 \\\\\\n    --num-workers 2 \\\\\\n    --image-version 1.4-debian \\\\\\n    --initialization-actions gs://dataproc-initialization-actions/python/pip-install.sh \\\\\\n    --metadata \'PIP_PACKAGES=google-cloud-storage avro-python3 dask[dataframe] gcsfs fastavro\' \\\\\\n    --enable-component-gateway \\\\\\n    --worker-boot-disk-size=40 \\\\\\n    --optional-components=ANACONDA \\\\\\n    --enable-component-gateway\\nBUCKET_NAME=zz_mm_bucket\\ngcloud config set dataproc/region global\\ngcloud dataproc jobs submit pyspark avrosqlargs.py --cluster newnew \\\\\\n--jars=gs://spark-lib/bigquery/spark-bigquery-latest.jar \\\\\\n--jars=https://repo1.maven.org/maven2/org/apache/spark/spark-avro_2.11/2.4.4/spark-avro_2.11-2.4.4.jar \\\\\\n-- gs://${BUCKET_NAME}/input/gs://zz_mm_bucket/input/ gs://${BUCKET_NAME}/output/table1 gs://${BUCKET_NAME}/output/table2\\n```\\n## \u8fd9\u91cc\u6ce8\u610f\u7684\u662fgcloud dataproc jobs sumbit\u7684\u53c2\u6570\u683c\u5f0f\u662f pyspark.py\u6587\u4ef6, files\\n\u6240\u4ee5\u4f8b\u5b50\u4e2d\u6211\u4eec\u7684\u53c2\u6570\u603b\u5171\u67094\u4e2a\\n1 avrosqlargs.py\\n\\n2 gs://${BUCKET_NAME}/input/gs://zz_mm_bucket/input/\\n\\n3 gs://${BUCKET_NAME}/output/table1 \\n\\n4 gs://${BUCKET_NAME}/output/table2\\n\\njars\u548ccluster\u90fd\u4e0d\u7b97\u4e3a\u53c2\u6570\\n\\n\u8fd8\u6709\u5c31\u662ffiles\u7684\u662f\u6587\u4ef6\u5939\u5f62\u5f0f\u800c\u4e0d\u80fd\u662f\u6587\u4ef6\u5f62\u5f0f,\u6240\u4ee5\u8bfb\u5165\u6587\u4ef6\u5939\u540e,\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8bfb\u53d6\u4f60\u9700\u8981\u7684\u6587\u4ef6,\u6bd4\u5982sys.argv+\'\u6587\u4ef6\u540d\'\\n\\n\u6240\u4ee5\u6574\u4f53\u53ef\u4ee5\u6539\u6210:\\n```\\n#!/usr/bin/python\\n\\"\\"\\"BigQuery I/O PySpark example.\\"\\"\\"\\nfrom pyspark.sql import SparkSession\\nimport sys\\n\\n\\n\\nspark = SparkSession \\\\\\n  .builder \\\\\\n  .master(\'yarn\') \\\\\\n  .appName(\'gcs-sparkdataframe-sql-avro\') \\\\\\n  .getOrCreate()\\n\\n# get spark datafrom from avro file in GCS\\n\\nif len(sys.argv) != 4:\\n  raise Exception(\\"Exactly 3 arguments are required: <inputUri> <table1><table2>\\")\\n\\ninputUri=sys.argv[1]\\ntable1=sys.argv[2]\\ntable2=sys.argv[3]\\n\\nfile = inputUri+\'account_id_schema_new.avro\'\\ndf = spark.read.format(\'avro\').load(file)\\n\\n\\n#create temp table\\ndf.createOrReplaceTempView(\'bigtable\')\\n\\n# split temp table into 2 spark dataframes\\ndf1 = spark.sql(\\"select ACNO,%s from bigtable\\" % (\\",\\".join(df.columns[1:round(len(df.columns) / 2)])))\\ndf2 = spark.sql(\\"select ACNO,%s from bigtable\\" % (\\",\\".join(df.columns[round(len(df.columns) / 2):])))\\ndf1.show(10)\\ndf2.show(10)\\n\\n# Saving the dataframes into avro files and dump avro files into GCS\\n\\ndf1.write.mode(\\"overwrite\\").format(\'avro\').save(table1,\'avro\')\\n\\ndf2.write.mode(\\"overwrite\\").format(\'avro\').save(table2,\'avro\')\\n```\\n\\n## \u5173\u4e8e\u751f\u6210\u6587\u4ef6,\u56e0\u4e3aspark\u662f\u57fa\u4e8ehadoop\u7684,\u6240\u4ee5\u6587\u4ef6\u4e5f\u4f1a\u5206\u5e03\u5f0f\u5b58\u50a8,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u770b\u5230\\n```\\ndf = spark.read.format(\'avro\').load(sys.argv[3])\\n```\\n## \u4e00\u822c\u662f\u5206\u533a\u662f\u4f1a\u6839\u636e\u4f60\u7684\u7535\u8111\u7684cpu\u6838\u6570\u81ea\u52a8\u5206\u914d,\u6211\u7684\u7535\u8111\u662fcore i5,\u4e5f\u5c31\u662f\u56db\u6838\u7684,\u6240\u4ee5\u9ed8\u8ba4\u662f4\\n\u6211\u4eec\u53ef\u4ee5\u91cd\u5206\u533a:\\n```\\ndf.repartition(10) # \u5c31\u662f\u520610\u533a\\ndf.rdd.getNumPartitions() #\u67e5\u770b\u5206\u533a\u6570\\ndf.coalesce(1)\\n```"},{"id":"/2020/4/17/dataproc\u81ea\u52a8\u4f38\u7f29\u548c\u8fd0\u884csparkjob","metadata":{"permalink":"/blog/2020/4/17/dataproc\u81ea\u52a8\u4f38\u7f29\u548c\u8fd0\u884csparkjob","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-17-dataproc\u81ea\u52a8\u4f38\u7f29\u548c\u8fd0\u884csparkjob.md","source":"@site/blog/2020-4-17-dataproc\u81ea\u52a8\u4f38\u7f29\u548c\u8fd0\u884csparkjob.md","title":"dataproc\u81ea\u52a8\u4f38\u7f29\u548c\u8fd0\u884cspark job","description":"\u6211\u4eec\u8fd0\u7528\u6570\u636e\u5206\u6790\u7684\u65f6\u5019,\u901a\u5e38\u90fd\u662f\u810f\u6570\u636e,\u6211\u4eec\u9700\u8981\u6e05\u6d17\u624d\u80fd\u88ab\u4f7f\u7528.","date":"2020-04-17T00:00:00.000Z","formattedDate":"April 17, 2020","tags":[{"label":"dataproc","permalink":"/blog/tags/dataproc"},{"label":"GCP","permalink":"/blog/tags/gcp"},{"label":"Spark","permalink":"/blog/tags/spark"},{"label":"Hadoop","permalink":"/blog/tags/hadoop"}],"readingTime":2.51,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"dataproc2","title":"dataproc\u81ea\u52a8\u4f38\u7f29\u548c\u8fd0\u884cspark job","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["dataproc","GCP","Spark","Hadoop"]},"prevItem":{"title":"dataproc\u53c2\u6570\u5316\u8dd1spark\u548c\u8bfb\u5199avro\u6587\u4ef6","permalink":"/blog/2020/4/17/dataproc\u53c2\u6570\u5316\u8dd1spark\u548c\u8bfb\u5199avro"},"nextItem":{"title":"dataproc--\u8dd1pyspark(\u4ecebig query\u83b7\u53d6\u6570\u636e)","permalink":"/blog/2020/4/17/dataproc\u8dd1pyspark"}},"content":"\u6211\u4eec\u8fd0\u7528\u6570\u636e\u5206\u6790\u7684\u65f6\u5019,\u901a\u5e38\u90fd\u662f\u810f\u6570\u636e,\u6211\u4eec\u9700\u8981\u6e05\u6d17\u624d\u80fd\u88ab\u4f7f\u7528.\\n\u6211\u4eec\u53ef\u4ee5\u52a0\u8f7dBig query\u7684\u6570\u636e\u653e\u5230Dataproc\u4e2d,\u901a\u8fc7spark\u96c6\u7fa4\u6765etl\u6709\u7528\u7684\u6570\u636e,\u7136\u540e\u628a\u4e00\u4e9bprocessed data\u6bd4\u5982zipped csv file\u653e\u5230google gloud storage\u4e0a\\n![png](../img/dataproc/dataproc2/1.png)\\n\\n# \u51c6\u5907\u9636\u6bb5\\n## \u53bb\u5230\u63a7\u5236\u53f0,\u786e\u8ba4cloud dataproc API\u5df2\u542f\u7528\\n\x3c!--truncate--\x3e\\n![png](../img/dataproc/dataproc1/1.png)\\n![png](../img/dataproc/dataproc1/2.png)\\n![png](../img/dataproc/dataproc1/3.png)\\n\\n# \u6211\u4eec\u4f1a\u4f7f\u7528\u547d\u4ee4\u53bbdataproc\u521b\u5efa\u96c6\u7fa4\\n\\n## \u9996\u5148\u6211\u4eec\u521b\u5efa\u4e00\u4e2ayaml\u6587\u4ef6,\u5bf9\u96c6\u7fa4\u505a\u81ea\u52a8\u4f38\u7f29\u7684\u5b9a\u4e49\\n[\u5173\u4e8espark\u81ea\u52a8\u4f38\u7f29\u539f\u7406](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#autoscaling_and_spark_structured_streaming)\\n```\\nworkerConfig:\\n  minInstances: 2\\n  maxInstances: 100\\n  weight: 1\\nsecondaryWorkerConfig:\\n  minInstances: 0\\n  maxInstances: 100\\n  weight: 1\\nbasicAlgorithm:\\n  cooldownPeriod: 4m\\n  yarnConfig:\\n    scaleUpFactor: 1\\n    scaleDownFactor: 1.0\\n    scaleUpMinWorkerFraction: 0.0\\n    scaleDownMinWorkerFraction: 0.0\\n    gracefulDecommissionTimeout: 1h\\n```\\n\\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5148\u521b\u5efa\u81ea\u52a8\u4f38\u7f29\u653f\u7b56\\n```\\ngcloud beta dataproc autoscaling-policies import policy-name --source policy-file.yaml\\n```\\n[\u5177\u4f53\u7684command\u547d\u4ee4](https://cloud.google.com/sdk/gcloud/reference/beta/dataproc/autoscaling-policies)\\n\\n## \u521b\u5efa\u96c6\u7fa4\\n```\\nCLUSTER_NAME=newnew\\ngcloud beta dataproc clusters create ${CLUSTER_NAME} \\\\\\n    --region=global \\\\\\n    --zone=us-central1-b \\\\\\n    --worker-machine-type n1-standard-1 \\\\\\n    --num-workers 2 \\\\\\n    --image-version 1.4-debian \\\\\\n    --initialization-actions gs://dataproc-initialization-actions/python/pip-install.sh \\\\\\n    --metadata \'PIP_PACKAGES=google-cloud-storage avro-python3 dask[dataframe] gcsfs fastavro\' \\\\\\n    --enable-component-gateway \\\\\\n    --worker-boot-disk-size=40 \\\\\\n    --optional-components=JUPYTER,ANACONDA \\\\\\n    --enable-component-gateway \\\\\\n    --autoscaling-policy=global\\n```\\n\\n## \u521b\u5efa\u6210\u529f\u540e,Dataprocmenu\u4e0a\u67e5\u770b,\u540c\u65f6\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2aGCS,\u8fd9\u6837\u6211\u4eec\u5904\u7406\u597d\u7684\u6570\u636e\u5c31\u53ef\u4ee5\u5b58\u5728\u5728GCS\u4e0a\u4e86\\n```\\nBUCKET_NAME=<bucket_name>\\ngsutil mb gs://${BUCKET_NAME}\\n```\\n\\n## \u6211\u4eec\u53ef\u4ee5\u53bbbigquery\u7684public data\u627e\u6570\u636e,\u67e5\u770b\u8868\u7684\u6570\u636e\u7ed3\u6784\\n![png](../img/dataproc/dataproc2/2.png)\\n\\n## \u8fd0\u884c pyspark job\\n```\\ncd\\ngit clone https://github.com/GoogleCloudPlatform/cloud-dataproc\\n```\\n```\\ncd ~/cloud-dataproc/codelabs/spark-bigquery\\ngcloud dataproc jobs submit pyspark --cluster ${CLUSTER_NAME} \\\\\\n    --jars gs://spark-lib/bigquery/spark-bigquery-latest_2.12.jar \\\\\\n    --driver-log-levels root=FATAL \\\\\\n    counts_by_subreddit.py\\n```\\n\u6211\u4eec\u9700\u8981\u63d0\u4f9b\u96c6\u7fa4\u540d\u5b57,\u63d0\u4f9bjars\u7684\u53c2\u6570,\u8fd9\u4e2ajar\u5305\u80fd\u591f\u5141\u8bb8\u6211\u4eec\u901a\u8fc7saprk-bigquery-connector\u8fde\u63a5\u5230\u6211\u4eec\u7684job,\\ndriver-log-levels root=FATAL\u80fd\u591f\u6291\u5236\u65e5\u5fd7\u8f93\u51fa\u9664\u4e86\u9519\u8bef\u4fe1\u606f,\u56e0\u4e3aspark logs.\\n![png](../img/dataproc/dataproc2/3.png)\\n![png](../img/dataproc/dataproc2/4.png)\\n![png](../img/dataproc/dataproc2/5.png)\\n\\n## \u6211\u4eec\u67e5\u770bDataproc\u548cspark\\n![png](../img/dataproc/dataproc2/6.png)\\n![png](../img/dataproc/dataproc2/7.png)\\n![png](../img/dataproc/dataproc2/8.png)\\n![png](../img/dataproc/dataproc2/9.png)\\n\\n## \u6211\u4eec\u8dd1\u4e00\u4e2a\u4efb\u52a1,\u52a0\u8f7d\u6570\u636e\u5230memory,\u63d0\u53d6\u5fc5\u987b\u8981\u7684\u4fe1\u606f,\u7136\u540e\u8f93\u51fa\u5230GCS\u91cc\u9762.\u6211\u4eec\u8fd9\u91cc\u662f\u63d0\u53d6title,body\u548ctimestamp created,\u7136\u540e\u6211\u4eec\u628a\u8fd9\u4e9bdata\u8f6c\u6210csv\u6587\u4ef6,\u5b58\u5165gcs\u91cc\u9762\\n```\\ncd ~/cloud-dataproc/codelabs/spark-bigquery\\nbash backfill.sh ${CLUSTER_NAME} ${BUCKET_NAME}\\n```\\n\\n\u67e5\u770b\\n```\\ngsutil ls gs://${BUCKET_NAME}/reddit_posts/*/*/food.csv.gz\\n```\\n\\n(\u7c7b\u4f3c\u7684\u5b9e\u9a8c\u53ef\u4ee5\u53c2\u8003)(https://codelabs.developers.google.com/codelabs/pyspark-bigquery/index.html?index=..%2F..index#1)"},{"id":"/2020/4/17/dataproc\u8dd1pyspark","metadata":{"permalink":"/blog/2020/4/17/dataproc\u8dd1pyspark","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-17-dataproc\u8dd1pyspark.md","source":"@site/blog/2020-4-17-dataproc\u8dd1pyspark.md","title":"dataproc--\u8dd1pyspark(\u4ecebig query\u83b7\u53d6\u6570\u636e)","description":"\u6d41\u7a0b\u5f88\u7b80\u5355","date":"2020-04-17T00:00:00.000Z","formattedDate":"April 17, 2020","tags":[{"label":"dataproc","permalink":"/blog/tags/dataproc"},{"label":"GCP","permalink":"/blog/tags/gcp"},{"label":"Spark","permalink":"/blog/tags/spark"},{"label":"Hadoop","permalink":"/blog/tags/hadoop"}],"readingTime":1.83,"hasTruncateMarker":false,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"dataproc3","title":"dataproc--\u8dd1pyspark(\u4ecebig query\u83b7\u53d6\u6570\u636e)","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["dataproc","GCP","Spark","Hadoop"]},"prevItem":{"title":"dataproc\u81ea\u52a8\u4f38\u7f29\u548c\u8fd0\u884cspark job","permalink":"/blog/2020/4/17/dataproc\u81ea\u52a8\u4f38\u7f29\u548c\u8fd0\u884csparkjob"},"nextItem":{"title":"5\u5206\u949f\u5728\u8c37\u6b4c\u4e91\u4e0a\u4f7f\u7528Dataproc\u8fd0\u884cApache Spark\u96c6\u7fa4","permalink":"/blog/2020/4/17/dataproc\u8fd0\u884cApache Spark\u96c6\u7fa4"}},"content":"## \u6d41\u7a0b\u5f88\u7b80\u5355\\n\u6211\u4eec\u8981\u7528spark\u8bfb\u53d6\u4ecebigquery\u8bfb\u53d6table,\u7136\u540e\u6211\u4eec\u5bf9\u8fd9\u4e2atable\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u5904\u7406,\u518d\u5206\u6210\u4e24dataframe\u5bf9\u8c61,\u7136\u540e\u628a\u4e24\u4e2a\u5bf9\u8c61\u5199\u5165bigquery\\n\\n### 1. spark \u521d\u59cb\u5316,\u56e0\u4e3a\u8981\u8bfb\u53d6\u6210dataframe\u6216\u8005sql\u5f62\u5f0f,\u5bfc\u5165SparkSession\\n```\\n#!/usr/bin/python\\nfrom pyspark.sql import SparkSession\\n```\\n### 2. \u521b\u5efaspark\u5bf9\u8c61\\n```\\nspark = SparkSession.builder.master(\'yarn\').appName(\'your app name\').getOrCreate()\\n```\\n### 3 \u6211\u4eec\u901a\u8fc7connector\u8fde\u63a5\u4e00\u4e2agoogle storage bucket \u7ed9Bigquery\u8f93\u51fa\u6570\u636e\u4e34\u65f6\u7528\\n```\\nbucket = \\"haha_mm_bucket\\"\\nspark.conf.set(\'temporaryGcsBucket\',bucket)\\n```\\n### 4 \u914d\u7f6e\u597dtmp bucket,\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u8bfb\u53d6\u6570\u636e,\u5e76\u4e14\u628a\u6570\u636e\u6846\u6ce8\u518c\u4e3a\u89c6\u56fe\\n```\\ndf = spark.read.format(\'bigquery\').option(\'table\',\'datasetid:tableid\').load()\\ndf.createTempView(\\"temp table name(\u6bd4\u5982words)\\")\\n\u4e5f\u53ef\u4ee5\u662fdf.createOrReplaceTempView(\'words\') \u8fd9\u6837\u5c31\u53ef\u4ee5\u8986\u76d6\u539f\u6765\u540c\u6837\u540d\u5b57\u7684\u4e34\u65f6\u89c6\u56fe\\n```\\n### 5 \u5f00\u59cb\u4f7f\u7528sql\u8bed\u53e5\\n```\\nlefttable = spark.sql(\\"SELECT ACNO, FIELD_1, FIELD_2 FROM words\\")\\nrighttable = spark.sql(\\"SELECT ACNO, FIELD_3, FIELD_4 FROM words\\")\\nlefttable.show()\\nlefttable.printSchema()\\nrighttable.show()\\nrighttable.printSchema()\\n```\\n\\n### 6 \u5904\u7406\u597d\u7684dataframe\u5bf9\u8c61\u5199\u5165bigquery (\u6ce8\u610f,\u7528sql\u5904\u7406\u8fc7\u540e\u7684\u8fd8\u662fdataframe\u5bf9\u8c61)\\n```\\nlefttable.write.format(\'bigquery\').option(\'table\',\'query-11:newdata.lefttable\').save()\\nrighttable.write.format(\'bigquery\').option(\'table\',\'query-11:newdata.righttable\').save()\\n```\\n\\n### 7 \u53bb\u5230\u7ec8\u7aef\u8f93\u5165\u547d\u4ee4,\u63d0\u4ea4spark job\\n```\\ngcloud dataproc jobs submit pyspark wordcount.py \\\\\\n    --cluster cluster-name \\\\\\n    --region cluster-region (example: \\"us-central1\\") \\\\\\n    --jars=gs://spark-lib/bigquery/spark-bigquery-latest.jar\\n```\\n\u4e3b\u8981\u683c\u5f0f: gcloud dataproc jobs submit pyspark python.py(python\u6587\u4ef6) \\\\\\n        --cluster cluster-name \\\\\\n        --region cluster-region(\u6bd4\u5982:us-central1,\u4e00\u5b9a\u8981\u5bf9\u5e94dataproc\u96c6\u7fa4\u7684region)\\n        --jars \u4e0ebiguqery\u8fde\u63a5\u7684\u5305\\n\u6ce8\u610f\u8fd9\u91cc\u7684jars:\\nIf you are using Dataproc image 1.5, add the following parameter:\\n--jars=gs://spark-lib/bigquery/spark-bigquery-latest_2.12.jar\\nIf you are using Dataproc image 1.4 or below, add the following parameter:\\n--jars=gs://spark-lib/bigquery/spark-bigquery-latest.jar\\n\\n\\n```\\ngcloud config set dataproc/region us-central1\\nBUCKET_NAME=haha_mm_bucket\\ninput=new.avro\\ngcloud dataproc jobs submit pyspark wordcount3.py \\\\\\n--cluster cluster-662b \\\\\\n-- gs://${BUCKET_NAME}/${input} \\\\\\n--jars=gs://spark-lib/bigquery/spark-bigquery-latest.jar \\\\\\n--packages com.databricks:spark-avro_2.11:4.0.0\\n```"},{"id":"/2020/4/17/dataproc\u8fd0\u884cApache Spark\u96c6\u7fa4","metadata":{"permalink":"/blog/2020/4/17/dataproc\u8fd0\u884cApache Spark\u96c6\u7fa4","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-17-dataproc\u8fd0\u884cApache Spark\u96c6\u7fa4.md","source":"@site/blog/2020-4-17-dataproc\u8fd0\u884cApache Spark\u96c6\u7fa4.md","title":"5\u5206\u949f\u5728\u8c37\u6b4c\u4e91\u4e0a\u4f7f\u7528Dataproc\u8fd0\u884cApache Spark\u96c6\u7fa4","description":"png","date":"2020-04-17T00:00:00.000Z","formattedDate":"April 17, 2020","tags":[{"label":"dataproc","permalink":"/blog/tags/dataproc"},{"label":"GCP","permalink":"/blog/tags/gcp"},{"label":"Spark","permalink":"/blog/tags/spark"},{"label":"Hadoop","permalink":"/blog/tags/hadoop"}],"readingTime":5.165,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"dataproc1","title":"5\u5206\u949f\u5728\u8c37\u6b4c\u4e91\u4e0a\u4f7f\u7528Dataproc\u8fd0\u884cApache Spark\u96c6\u7fa4","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["dataproc","GCP","Spark","Hadoop"]},"prevItem":{"title":"dataproc--\u8dd1pyspark(\u4ecebig query\u83b7\u53d6\u6570\u636e)","permalink":"/blog/2020/4/17/dataproc\u8dd1pyspark"},"nextItem":{"title":"google script + excel+ google drive","permalink":"/blog/2020/4/16/bq_\u811a\u672c\u5236\u4f5cpresentation"}},"content":"\x3c!--truncate--\x3e\\n![png](../img/dataproc/dataproc1/1.png)\\n![png](../img/dataproc/dataproc1/2.png)\\n![png](../img/dataproc/dataproc1/3.png)\\n\\n# \u53bbdataproc->cluster->create cluster\\n![png](../img/dataproc/dataproc1/10.png)\\n\\n# create cluster\u540e\u5728\u4ee5\u4e0b\u5b57\u6bb5\u8f93\u5165\u5bf9\u5e94\u503c\\n![png](../img/dataproc/dataproc1/4.png)\\n\\n\u5177\u4f53\u5982\u4e0b:\\n\\n![png](../img/dataproc/dataproc1/5.png)\\n\\n# \u4ee5\u4e0a\u63a7\u5236\u53f0\u7684\u6b65\u9aa4,\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7gcloud terminal\u4ee3\u7801\u5b9e\u73b0\\n```\\ngcloud set config project project ID # \u8bbe\u7f6e\u6307\u5b9a\u9879\u76eeid\\ngcloud config set dataproc/region global #\u5728dataproc\u8bbe\u7f6eregion,\u8fd9\u4e00\u6b65\u5f88\u91cd\u8981\\ngcloud dataproc clusters create example-cluster\\n```\\n![png](../img/dataproc/dataproc1/1.png)\\n## \u8fd9\u6837gcp\u5c31\u4f1a\u5e2e\u4f60\u642d\u5efacluster\u4e86\\n\\n# \u521b\u5efa\u96c6\u7fa4\u6210\u529f\u540e,\u8fd0\u884cjob\\n## \u53bbjob,\u9009\u62e9 sumbit job\\n\\n![png](../img/dataproc/dataproc1/6.png)\\n\\n### \u5728\u5bf9\u5e94\u5b57\u6bb5\u8f93\u5165\u5bf9\u5e94\u503c\\n![png](../img/dataproc/dataproc1/7.png)\\n### \u5177\u4f53\u5982\u4e0b,\u8f93\u5165\u5b8c\u6210\u540e\u70b9\u51fbsumbit\\n![png](../img/dataproc/dataproc1/8.png)\\n### \u6211\u4eec\u53ef\u4ee5\u70b9\u51fbjob id \u67e5\u770b\u7ed3\u679c\u548c\u65e5\u5fd7\\n![png](../img/dataproc/dataproc1/9.png)\\n\\n# \u4ee5\u4e0a\u6b65\u9aa4,\u6211\u4eec\u540c\u6837\u53ef\u4ee5\u7528\u4ee3\u7801\u5728GCPterminal\u4e0a\u64cd\u4f5c\\n```\\ngcloud dataproc jobs submit spark --cluster example-cluster \\\\\\n  --class org.apache.spark.examples.SparkPi \\\\\\n  --jars file:///usr/lib/spark/examples/jars/spark-examples.jar -- 1000\\n```\\n\u6211\u4eec\u628ajob\u6253\u5305\u6210jar,\u7136\u540e\u7528submit spark \u6765\u8fd0\u884c\\n\u547d\u4ee4 gcloud dataproc jobs submit spark --cluster \u96c6\u7fa4\u540d\u79f0 \\\\ --class \u7c7b\u540d --jars jar\u5305\u8def\u5f84 --task\u6570\u91cf\\n\\n![png](../img/dataproc/dataproc1/2.png)\\n![png](../img/dataproc/dataproc1/3.png)\\n\\n## \u6211\u4eec\u53ef\u4ee5\u53ef\u4ee5\u66f4\u65b0worker\u6570\u91cf\\ngcloud dataproc clusters update \u96c6\u7fa4\u540d\u5b57 -num-workers=\u6570\u91cf\\n```\\ngcloud dataproc clusters update example-cluster --num-workers= 4\\n```\\n![png](../img/dataproc/dataproc1/4.png)\\n# \u6211\u4eec\u53ef\u4ee5\u53c2\u8003\u96c6\u7fa4\u8bbe\u7f6e\\n```\\ngcloud dataproc clusters describe example-cluster\\n```\\n\\n![png](../img/dataproc/dataproc1/5.png)\\n\\n## \u5173\u4e8espark jar\u5305\u548cclass\u95ee\u9898\\n[\u53c2\u8003\u94fe\u63a51](https://www.jianshu.com/p/2c7bcee7001a)\\n\\n[\u53c2\u770b\u94fe\u63a52](https://blog.csdn.net/u014234504/article/details/82812343)\\n\\n[class\u7684\u5199\u6cd5](https://wenku.baidu.com/view/a0dd882fa8956bec0975e397.html)\\n\\n\\n# \u7528dataproc\u521b\u5efa\u96c6\u7fa4\u548c\u8fd0\u884cspark job \u5b8c\u6210!!\\n\u5173\u4e8e[spark job,stage,task](https://zhuanlan.zhihu.com/p/50752866)\u7684\u7406\u89e3\u548c\u53c2\u8003\\n\\n\\n# \u7528gcloud\u6765\u542fcluster\u547d\u4ee4\\n\\n[\u4e00\u4e2aNLP\u5b9e\u9a8c](https://codelabs.developers.google.com/codelabs/spark-nlp/index.html?index=..%2F..index&_ga=2.18367290.242813027.1588130089-996489118.1587002962&_gac=1.182983892.1588923163.Cj0KCQjwhtT1BRCiARIsAGlY51KEFc2-GGnxsXVhFZsKWExLJckKepaugZrKbbr2cvW0KLPRtubd7vAaAkA2EALw_wcB#0)\\n\\n\\n# \u5728dataproc\u521b\u5efa\u96c6\u7fa4\\n```\\nCLUSTER_NAME=my-cluster\\nZONE=us-east1-b\\nBUCKET_NAME=bm_reddit\\nREGION=us-east1\\ngcloud beta dataproc clusters create ${CLUSTER_NAME} \\\\\\n     --zone=${ZONE} \\\\\\n     --metadata \'PIP_PACKAGES=google-cloud-storage\' \\\\\\n     --worker-machine-type n1-standard-1 \\\\\\n     --num-workers 2 \\\\\\n     --image-version 1.4-debian9 \\\\\\n     --initialization-actions gs://dataproc-initialization-actions/spark-nlp/spark-nlp.sh,gs://dataproc-initialization-actions/python/pip-install.sh \\\\\\n     --region=${REGION} \\\\\\n     --optional-components=JUPYTER,ANACONDA \\\\\\n     --enable-component-gateway \\\\\\n     --worker-boot-disk-size=30\\n```\\n## \u53c2\u6570\u8bf4\u660e:\\nmetadata\u6307\u6e90\u6570\u636e,\u6bd4\u5982\u60f3\u8981\u5b89\u88c5CONDA_PACKAGE,\u6211\u4eec\\n```\\n--metadata \'CONDA_PACKAGES=scipy=1.0.0 tensorflow\' \\\\ \\n```\\n\u5982\u679c\u60f3\u5b89\u88c5pip_package,\u6211\u4eec\u53ef\u4ee5\\n```\\n--metadata \'PIP_PACKAGES=pandas==0.23.0 scipy==1.1.0\' \\\\ \\n```\\n\u8be6\u7ec6\u53ef\u4ee5[\u53c2\u8003\u94fe\u63a5](https://cloud.google.com/dataproc/docs/tutorials/python-configuration)\\n\\n## Install PyPI packages\\n```\\n--initialization-actions gs://goog-dataproc-initialization-actions-${REGION}/python/pip-install.sh\\n```\\n## Install Conda packages\\n```\\n--initialization-actions gs://goog-dataproc-initialization-actions-${REGION}/python/conda-install.sh\\n```\\n\\n--initialization-actions\u662f\u7528\u5728\u5b89\u88c5metadata\u7684\u5305\\n```\\n--initialization-actions \\\\ \\n    gs://goog-dataproc-initialization-actions-${REGION}/conda/bootstrap-conda.sh,gs://goog-dataproc-initialization-actions-${REGION}/conda/install-conda-env.sh\\n```\\n\u4e0b\u8f7d\u4ee3\u7801\\n```\\ncd\\ngit clone https://github.com/GoogleCloudPlatform/cloud-dataproc\\ncd cloud-dataproc/codelabs/spark-nlp\\n```\\n\\n\u8fd0\u884c\\n```\\ngcloud dataproc jobs submit pyspark --cluster ${CLUSTER_NAME}\\\\\\n    --properties=spark.jars.packages=JohnSnowLabs:spark-nlp:2.0.8 \\\\\\n    --driver-log-levels root=FATAL \\\\\\n    topic_model.py \\\\\\n    -- ${BUCKET_NAME}\\n```\\n\\nCLUSTER_NAME=newnew\\ngcloud beta dataproc clusters create ${CLUSTER_NAME} \\\\\\n    --region=global \\\\\\n    --zone=us-east1-b \\\\\\n    --worker-machine-type n1-standard-2 \\\\\\n    --num-workers 2 \\\\\\n    --image-version 1.5-debian \\\\\\n    --initialization-actions gs://dataproc-initialization-actions/python/pip-install.sh \\\\\\n    --metadata \'PIP_PACKAGES=google-cloud-storage avro-python3 dask[dataframe] gcsfs fastavro\' \\\\\\n    --enable-component-gateway \\\\\\n    --worker-boot-disk-size=40 \\\\\\n    --optional-components=JUPYTER,ANACONDA \\\\\\n    --enable-component-gateway \\\\\\n    --autoscaling-policy=global\\n\\n\\nworkerConfig:\\n  minInstances: 2\\n  maxInstances: 100\\n  weight: 1\\nsecondaryWorkerConfig:\\n  minInstances: 0\\n  maxInstances: 100\\n  weight: 1\\nbasicAlgorithm:\\n  cooldownPeriod: 4m\\n  yarnConfig:\\n    scaleUpFactor: 0.05\\n    scaleDownFactor: 1.0\\n    scaleUpMinWorkerFraction: 0.0\\n    scaleDownMinWorkerFraction: 0.0\\n    gracefulDecommissionTimeout: 1h\\n\\n## \u5e38\u89c1\u9519\u8bef\\n\\n\u6848\u4f8b1:cpus\u7684\u9650\u989d\u95ee\u9898\\nMultiple validation errors: - Insufficient \'CPUS\' quota. Requested 12.0, available 7.0. - Insufficient \'CPUS_ALL_REGIONS\' quota. Requested 12.0, available 11.0. - This request exceeds CPU quota. Some things to try: request fewer workers (a minimum of 2 is required), use smaller master and/or worker machine types (such as n1-standard-2).\\n\\n\\n\u8fd9\u91cc\u7684insufficent \'CPUS\' \u53ea\u7684\u662fmaster\u548cworker\u6240\u6709\u7684node\u7684cpus\u6570\u91cf\u603b\u548c\\nInsufficient \'CPUS_ALL_REGIONS\' quota\u662f\u5728\u5168\u7403\u7684cpus\u9650\u989d,\u5982\u679cregion\u9009\u62e9global, \u90a3\u4e48\u8fd9\u91cc\u9650\u989d\u5c31\u662f11(available 11), \u5982\u679cregion\u9009\u62e9\u65f6\u67d0\u4e2a\u5730\u533a,\u6bd4\u5982us-central1,\u90a3\u4e48\u6211\u8fd9\u91cc\u7684quota\u5c31\u662f7.\u4e3a\u4ec0\u4e48\u662f7\u5462,\u56e0\u4e3a\u8c37\u6b4c\u7684\u8bd5\u7528\u8d26\u53f7\u6700\u591a\u53ea\u80fd\u67098CPUs,\u6211\u8fd9\u4e2aproject\u91cc\u9762\u5df2\u7ecf\u5728\u4e00\u4e2a\u5730\u533a\u533a\u57df\u521b\u5efa\u4e86\u4e00\u4e2avm,\u8fd9\u4e2avm\u7684machining type\u662f(n1-standard-1 (1 vCPU, 3.75 GB memory)),\u6240\u4ee5\u5360\u7528\u4e86\u4e00\u4e2acpu,\u6240\u4ee5\u5730\u65b9region\u7684cpus\u53ef\u7528\u989d\u5ea6\u5c31\u662f8-1=7\\n\u540c\u7406,\u5168\u7403\u7684\u8bdd\u662f12cpu,\u6211\u5df2\u7ecf\u7528\u4e861\u4e2a\u4e86,\u6240\u4ee5\u5168\u7403\u5269\u4e0b\u7684\u5c31\u662f12-1=11.\\n\\n\u6848\u4f8b2: yarn core\u6570 \u548c yarn memory\\nyarn core = worker\u7684node\u4e2a\u6570 * vcpu\\nyarn memory =  worker\u7684node\u4e2a\u6570 * memoery * 0.8\\n\\n![png](../img/dataproc/dataproc1/11.png)\\n\\ngoogle\u5bf9yarn memoery\u7684\u5b9a\u4e49: \\nThe number of worker nodes times the amount of memory on each node times the fraction given to YARN (0.8)\\n\\ngoogle\u5bf9yarn coreds\u7684\u5b9a\u4e49:\\nthe number of worker nodes times the number of vCPUs per node\\n\\n## \u521b\u5efa\u96c6\u7fa4\u540e,\u4f7f\u7528jupyter, \u53bb\u5230cluster,\u7136\u540e\u53bb\u5230web interfaces,\u9009\u62e9jupyter\\n\u5982\u679c\u8fd0\u884cspark\u7684\u65f6\u5019,\u51fa\u73b0 Py4JJavaError\u9519\u8bef\\n\u53ef\u4ee5\u5b89\u88c5\\n```\\nconda install -c cyclus java-jdk\\n```\\n\\n\u5982\u679c\u60f3\u5b89\u88c5python3\\n```\\n!conda create -n py36 python=3.6 anaconda\\n```\\n\\n## Dataproc image version 1.3 \u6216\u8005\u4e4b\u524d\u7684\u8bdd\u9ed8\u8ba4\u662fpython2.7\\n\u6240\u4ee5\u6211\u4eec\u6700\u597d\u5b89\u88c5Dataproc image version 1.4+,\u9ed8\u8ba4\u5c31\u662fpython3,\u5177\u4f53\u8be6\u7ec6\u5982\u4e0b\\n```\\nMiniconda3 is installed on Dataproc 1.4+ clusters. The default Python interpreter is Python 3.6 for Dataproc 1.4 and Python 3.7 for Dataproc 1.5, located on the VM instance at /opt/conda/miniconda3/bin/python3.6 and /opt/conda/miniconda3/bin/python3.7, respectively. Python 2.7 is also available at /usr/bin/python2.7.\\n```\\n\\n## \u5177\u4f53\u914d\u7f6ecluster\u914d\u7f6e\u7684\u8bf7\u67e5\u770b\\n[\u53c2\u8003\u94fe\u63a5](https://cloud.google.com/dataproc/docs/tutorials/python-configuration)"},{"id":"/2020/4/16/bq_\u811a\u672c\u5236\u4f5cpresentation","metadata":{"permalink":"/blog/2020/4/16/bq_\u811a\u672c\u5236\u4f5cpresentation","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-16-bq_\u811a\u672c\u5236\u4f5cpresentation.md","source":"@site/blog/2020-4-16-bq_\u811a\u672c\u5236\u4f5cpresentation.md","title":"google script + excel+ google drive","description":"\u6211\u4eec\u7684\u76ee\u6807\u662f\u521b\u5efa\u4e00\u4e2a\u811a\u672c\u53ef\u4ee5\u8bfb\u53d6\u6570\u636e,\u5bfc\u51fa\u6210\u8868\u683c\u5f62\u5f0f\u800c\u4e14\u5236\u4f5c\u51fa\u56fe\u6807,\u6700\u540e\u505a\u6210\u4e00\u4e2appt\u5e7b\u706f\u6f14\u793a,\u770b\u8d77\u6765\u662f\u4e0d\u662f\u5f88\u725b,\u8fd9\u4e9b\u52a8\u4f5c\u53ea\u9700\u8981\u5199\u4e2a\u811a\u672c\u5c31\u80fd\u5b8c\u6210\u5566","date":"2020-04-16T00:00:00.000Z","formattedDate":"April 16, 2020","tags":[{"label":"script","permalink":"/blog/tags/script"},{"label":"excel","permalink":"/blog/tags/excel"},{"label":"google","permalink":"/blog/tags/google"}],"readingTime":15.43,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"bigquery_presentation","title":"google script + excel+ google drive","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["script","excel","google"]},"prevItem":{"title":"5\u5206\u949f\u5728\u8c37\u6b4c\u4e91\u4e0a\u4f7f\u7528Dataproc\u8fd0\u884cApache Spark\u96c6\u7fa4","permalink":"/blog/2020/4/17/dataproc\u8fd0\u884cApache Spark\u96c6\u7fa4"},"nextItem":{"title":"Bigquery\u4e2dsql\u8bed\u53e5\u5e38\u7528\u547d\u4ee4","permalink":"/blog/2020/4/15/bq_sql\u5e38\u7528\u77ed\u8bed"}},"content":"### \u6211\u4eec\u7684\u76ee\u6807\u662f\u521b\u5efa\u4e00\u4e2a\u811a\u672c\u53ef\u4ee5\u8bfb\u53d6\u6570\u636e,\u5bfc\u51fa\u6210\u8868\u683c\u5f62\u5f0f\u800c\u4e14\u5236\u4f5c\u51fa\u56fe\u6807,\u6700\u540e\u505a\u6210\u4e00\u4e2appt\u5e7b\u706f\u6f14\u793a,\u770b\u8d77\u6765\u662f\u4e0d\u662f\u5f88\u725b,\u8fd9\u4e9b\u52a8\u4f5c\u53ea\u9700\u8981\u5199\u4e2a\u811a\u672c\u5c31\u80fd\u5b8c\u6210\u5566\\n\\n#### \u8bf7\u770b\u6f14\u793a\\n\x3c!--truncate--\x3e\\n#### \u6211\u4eec\u8fdb\u5165script.google.com,\u70b9\u51fbgetting started,\u7136\u540e\u518d\u70b9\u51fbApps script\\n![png](../img/bigquery/bigquery_presentation/1.png)\\n\\n#### \u6211\u4eec\u8fdb\u5165scripts\u4e2d,\u6211\u4eec\u53ef\u4ee5\u6539\u540d\u6210slides demo\\n![png](../img/bigquery/bigquery_presentation/2.png)\\n\\n#### \u7136\u540e\u6211\u4eec\u53bb\u5230\u63a7\u5236\u53f0\u67e5\u770bbig query api \u662f\u5426\u5df2\u7ecf\u542f\u52a8\\n#### \u786e\u8ba4\u540e,\u6211\u4eec\u70b9\u51fbResources\u7684advanced google services\\n![png](../img/bigquery/bigquery_presentation/3.png)\\n\\n#### \u6211\u4eec\u5f00\u542fBigQuery API\u670d\u52a1\\n![png](../img/bigquery/bigquery_presentation/4.png)\\n\\n#### \u4fee\u6539\u4ee3\u7801\u6587\u4ef6\u540d\u5b57,\u6539\u6210bs-sheets-slides.gs\\n\u8fd9\u91cc\u7528\u5f97\u662fjavascript\u6765\u5199\\n![png](../img/bigquery/bigquery_presentation/5.png)\\n\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\\n```javascript\\n/**\\n * Copyright 2018 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\"License\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at apache.org/licenses/LICENSE-2.0.\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\"AS IS\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n// Filename for data results\\nvar QUERY_NAME = \\"Most common words in all of Shakespeare\'s works\\";\\n// Replace this value with your Google Cloud API project ID\\nvar PROJECT_ID = \'<YOUR_PROJECT_ID>\';\\nif (!PROJECT_ID) throw Error(\'Project ID is required in setup\');\\n\\n/**\\n * Runs a BigQuery query; puts results into Sheet. You must enable\\n * the BigQuery advanced service before you can run this code.\\n * @see http://developers.google.com/apps-script/advanced/bigquery#run_query\\n * @see http://github.com/gsuitedevs/apps-script-samples/blob/master/advanced/bigquery.gs\\n *\\n * @returns {Spreadsheet} Returns a spreadsheet with BigQuery results\\n * @see http://developers.google.com/apps-script/reference/spreadsheet/spreadsheet\\n */\\nfunction runQuery() {\\n  // Replace sample with your own BigQuery query.\\n  var request = {\\n    query:\\n        \'SELECT \' +\\n            \'LOWER(word) AS word, \' +\\n            \'SUM(word_count) AS count \' +\\n        \'FROM [bigquery-public-data:samples.shakespeare] \' +\\n        \'GROUP BY word \' +\\n        \'ORDER BY count \' +\\n        \'DESC LIMIT 10\'\\n  };\\n  var queryResults = BigQuery.Jobs.query(request, PROJECT_ID);\\n  var jobId = queryResults.jobReference.jobId;\\n\\n  // Wait for BQ job completion (with exponential backoff).\\n  var sleepTimeMs = 500;\\n  while (!queryResults.jobComplete) {\\n    Utilities.sleep(sleepTimeMs);\\n    sleepTimeMs *= 2;\\n    queryResults = BigQuery.Jobs.getQueryResults(PROJECT_ID, jobId);\\n  }\\n\\n  // Get all results from BigQuery.\\n  var rows = queryResults.rows;\\n  while (queryResults.pageToken) {\\n    queryResults = BigQuery.Jobs.getQueryResults(PROJECT_ID, jobId, {\\n      pageToken: queryResults.pageToken\\n    });\\n    rows = rows.concat(queryResults.rows);\\n  }\\n\\n  // Return null if no data returned.\\n  if (!rows) {\\n    return Logger.log(\'No rows returned.\');\\n  }\\n\\n  // Create the new results spreadsheet.\\n  var spreadsheet = SpreadsheetApp.create(QUERY_NAME);\\n  var sheet = spreadsheet.getActiveSheet();\\n\\n  // Add headers to Sheet.\\n  var headers = queryResults.schema.fields.map(function(field) {\\n    return field.name.toUpperCase();\\n  });\\n  sheet.appendRow(headers);\\n\\n  // Append the results.\\n  var data = new Array(rows.length);\\n  for (var i = 0; i < rows.length; i++) {\\n    var cols = rows[i].f;\\n    data[i] = new Array(cols.length);\\n    for (var j = 0; j < cols.length; j++) {\\n      data[i][j] = cols[j].v;\\n    }\\n  }\\n\\n  // Start storing data in row 2, col 1\\n  var START_ROW = 2;      // skip header row\\n  var START_COL = 1;\\n  sheet.getRange(START_ROW, START_COL, rows.length, headers.length).setValues(data);\\n\\n  Logger.log(\'Results spreadsheet created: %s\', spreadsheet.getUrl());\\n}\\n```\\n\u8be5\u67e5\u8be2\u901a\u8fc7\u67e5\u770b\u838e\u58eb\u6bd4\u4e9a\u7684\u4f5c\u54c1\uff08\u5c5e\u4e8e BigQuery\u7684\u516c\u5171\u6570\u636e\u96c6\uff09\uff0c\u5f97\u51fa\u4ed6\u6240\u6709\u4f5c\u54c1\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u524d10\u4e2a\u5355\u8bcd\uff0c\u5e76\u6309\u6d41\u884c\u7a0b\u5ea6\u4ece\u9ad8\u5230\u4f4e\u6392\u5e8f\u3002\u8bd5\u60f3\u4e00\u4e0b\uff0c\u624b\u52a8\u6267\u884c\u6b64\u64cd\u4f5c\u4f1a\u6709\u591a\u5927\u7684\u4e50\u8da3\uff0c\u60a8\u5e94\u8be5\u5bf9BigQuery\u7684\u6709\u7528\u6027\u6709\u6240\u4e86\u89e3\u3002\\n### \u70b9\u51fbrunQuery\u8fd0\u884c,\u671f\u95f4\u53ef\u80fd\u9700\u8981\u9700\u8981\u6388\u6743\u8ba4\u8bc1\\n![png](../img/bigquery/bigquery_presentation/6.png)\\n![png](../img/bigquery/bigquery_presentation/7.png)\\n\\n### \u6210\u529f\u8fd0\u884c\u540e,\u6211\u4eec\u53ef\u4ee5\u53bbdrive.google.com\u4e2d\u627e\u5230excel\u8868\u683c\u7684url\u94fe\u63a5,\u70b9\u51fbMost common words\u90a3\u5757\u6761\u6846\\n![png](../img/bigquery/bigquery_presentation/8.png)\\n\\n### \u70b9\u51fb\u8fdb\u5165\u540e,\u6211\u4eec\u53ef\u4ee5\u770b\u5230bigquery\u7684\u516c\u5171\u96c6\u67e5\u8be2\u7684\u6570\u636e\u73b0\u5728\u7528\u8868\u683c\u5f62\u5f0f\u51fa\u73b0\u4e86\\n![png](../img/bigquery/bigquery_presentation/9.png)\\n\\n### \u6211\u4eec\u53ef\u4ee5\u53bbbig query \u7528sql\u8bed\u53e5\u64cd\u4f5c\u4e00\u904d,\u5f97\u5230\u7684\u6570\u636e\u4e5f\u5f88excel\u8868\u683c\u4e00\u6837\\n![png](../img/bigquery/bigquery_presentation/10.png)\\n\\n### \u4e0b\u4e00\u6b65,\u6211\u4eec\u8981\u901a\u8fc7\u6570\u636e\u521b\u5efa\u56fe\u8868\ud83d\udcc8\\n##### 1 \u5230\u76ee\u524d\u4e3a\u6b62,\u6211\u4eec\u7f16\u5199\u4e86\u4e00\u4e2a\u67e5\u8be2\u838e\u58eb\u6bd4\u4e9a\u7684\u5e94\u7528\u7a0b\u5e8f,\u8fdb\u884c\u4e86\u6392\u5e8f,\u7136\u540e\u5c06\u7ed3\u6784\u663e\u793a\u5728\u8868\u683c\u4e2d,\u6211\u4eec\u73b0\u5728\u8981createColumnChart()\u529f\u80fd,{\u5728\u6700\u540e\u4e00\u884c\u4ee3\u7801\u4e4b\u540e}bq-sheets-slides.gsrunQuery()\\n```\\n/**\\n * Uses spreadsheet data to create columnar chart.\\n * @param {Spreadsheet} Spreadsheet containing results data\\n * @returns {EmbeddedChart} visualizing the results\\n * @see http://developers.google.com/apps-script/reference/spreadsheet/embedded-chart\\n */\\nfunction createColumnChart(spreadsheet) {\\n  // Retrieve the populated (first and only) Sheet.\\n  var sheet = spreadsheet.getSheets()[0];\\n  // Data range in Sheet is from cell A2 to B11\\n  var START_CELL = \'A2\';  // skip header row\\n  var END_CELL = \'B11\';\\n  // Place chart on Sheet starting on cell E5.\\n  var START_ROW = 5;      // row 5\\n  var START_COL = 5;      // col E\\n  var OFFSET = 0;\\n\\n  // Create & place chart on the Sheet using above params.\\n  var chart = sheet.newChart()\\n     .setChartType(Charts.ChartType.COLUMN)\\n     .addRange(sheet.getRange(START_CELL + \':\' + END_CELL))\\n     .setPosition(START_ROW, START_COL, OFFSET, OFFSET)\\n     .build();\\n  sheet.insertChart(chart);\\n}\\n```\\n#### 2 \u8fd4\u56de\u7535\u5b50\u8868\u683c:\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d, createColumnChart()\u51fd\u6570\u9700\u8981\u7535\u5b50\u8868\u683c\u5bf9\u8c61,\u56e0\u6b64\u8c03\u6574\u5e94\u7528\u7a0b\u5e8f\u4ee5\u8fd4\u56despreadsheet\u5bf9\u8c61,\u4ee5\u4fbf\u53ef\u4ee5\u5c06\u5176\u4f20\u9012\u7ed9createColumnChart().\u6240\u4ee5\u6211\u4eec\u5728runQuery()\u51fd\u6570\u6700\u540e\u4e00\u884c\u6dfb\u52a0\u4e00\u4e0b\u4ee3\u7801\\n```\\nLogger.log(\'Results spreadsheet created: %s\', spreadsheet.getUrl());\\n\\n  // Return the spreadsheet object for later use.\\n  return spreadsheet;\\n}\\n```\\n#### 3 \u6267\u884ccreateBigQueryPresentation()\u529f\u80fd,\u6211\u4eec\u628aBigQuery\u548cchart-creation \u529f\u80fd\u5206\u5f00\u662f\u4e0d\u9519\u7684\u6ce8\u610f.\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2acreateBigQueryPresentation()\u529f\u80fd\u53bb\u9a71\u52a8app,\u8c03\u7528\u4e24\u8005\u548c\u8c03\u7528createColumnChart()\u51fd\u6570\\n```\\n/**\\n * Runs a BigQuery query, adds data and a chart in a Sheet.\\n */\\nfunction createBigQueryPresentation() {\\n  var spreadsheet = runQuery();\\n  createColumnChart(spreadsheet);\\n}\\n```\\n\u6211\u4eec\u628a\u8fd9\u5757\u4ee3\u7801\u653e\u5230\u4ee5\u4e0b\u4ee3\u7801\u4e0b\u9762\\n```\\n// Filename for data results\\nvar QUERY_NAME = \\"Most common words in all of Shakespeare\'s works\\";\\n// Replace this value with your Google Cloud API project ID\\nvar PROJECT_ID = \'project-id-4323960745859879834\';\\nif (!PROJECT_ID) throw Error(\'Project ID is required in setup\');\\n```\\n\\n### \u4e3a\u4e86\u4f7f\u5f97\u4ee3\u7801\u53ef\u4ee5\u590d\u7528\u6027,\u6211\u4eec\u6709\u4e24\u6b65\u8981\u505a\\n1: \u8fd4\u56despreadsheet\u5bf9\u8c61\\n2: \u521b\u5efa\u4e00\u4e2a\u9a71\u52a8\u51fd\u6570\\n\u540c\u65f6\u5982\u679c\u4e00\u4e2a\u540c\u4e8b\u9700\u8981\u590d\u7528runQuery()\u51fd\u6570,\u4f46\u662f\u4e0d\u60f3\u8981\u8fde\u63a5\u767b\u5f55\u5462\\n\u6211\u4eec\u53ef\u4ee5\u4ee3\u7801\u4fee\u6539\u4e00\u4e0b,\u5177\u4f53\u5982\u4e0b:\\n```javascript\\n/**\\n * Runs a BigQuery query, adds data and a chart in a Sheet.\\n */\\nfunction createBigQueryPresentation() {\\n  var spreadsheet = runQuery();\\n  Logger.log(\'Results spreadsheet created: %s\', spreadsheet.getUrl());\\n  createColumnChart(spreadsheet);\\n}\\n```\\n#### \u5177\u4f53\u5448\u73b0\u5982\u4e0b:\\n\\n![png](../img/bigquery/bigquery_presentation/11.png)\\n\\n\u6574\u6bb5\u4ee3\u7801\u5177\u4f53\u5982\u4e0b:\\n``` javascript\\n/**\\n * Copyright 2018 Google LLC\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\"License\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at apache.org/licenses/LICENSE-2.0.\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\"AS IS\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n// Filename for data results\\nvar QUERY_NAME = \\"Most common words in all of Shakespeare\'s works\\";\\n// Replace this value with your Google Cloud API project ID\\nvar PROJECT_ID = \'qwiklabs-gcp-5c0cf6ad321746e4\';\\nif (!PROJECT_ID) throw Error(\'Project ID is required in setup\');\\n\\n/**\\n * Runs a BigQuery query, adds data and a chart in a Sheet.\\n */\\nfunction createBigQueryPresentation() {\\n  var spreadsheet = runQuery();\\n  Logger.log(\'Results spreadsheet created: %s\', spreadsheet.getUrl());\\n  createColumnChart(spreadsheet);\\n}\\n\\n/**\\n * Runs a BigQuery query; puts results into Sheet. You must enable\\n * the BigQuery advanced service before you can run this code.\\n * @see http://developers.google.com/apps-script/advanced/bigquery#run_query\\n * @see http://github.com/gsuitedevs/apps-script-samples/blob/master/advanced/bigquery.gs\\n *\\n * @returns {Spreadsheet} Returns a spreadsheet with BigQuery results\\n * @see http://developers.google.com/apps-script/reference/spreadsheet/spreadsheet\\n */\\nfunction runQuery() {\\n  // Replace sample with your own BigQuery query.\\n  var request = {\\n    query:\\n        \'SELECT \' +\\n            \'LOWER(word) AS word, \' +\\n            \'SUM(word_count) AS count \' +\\n        \'FROM [bigquery-public-data:samples.shakespeare] \' +\\n        \'GROUP BY word \' +\\n        \'ORDER BY count \' +\\n        \'DESC LIMIT 10\'\\n  };\\n  var queryResults = BigQuery.Jobs.query(request, PROJECT_ID);\\n  var jobId = queryResults.jobReference.jobId;\\n\\n  // Wait for BQ job completion (with exponential backoff).\\n  var sleepTimeMs = 500;\\n  while (!queryResults.jobComplete) {\\n    Utilities.sleep(sleepTimeMs);\\n    sleepTimeMs *= 2;\\n    queryResults = BigQuery.Jobs.getQueryResults(PROJECT_ID, jobId);\\n  }\\n\\n  // Get all results from BigQuery.\\n  var rows = queryResults.rows;\\n  while (queryResults.pageToken) {\\n    queryResults = BigQuery.Jobs.getQueryResults(PROJECT_ID, jobId, {\\n      pageToken: queryResults.pageToken\\n    });\\n    rows = rows.concat(queryResults.rows);\\n  }\\n\\n  // Return null if no data returned.\\n  if (!rows) {\\n    return Logger.log(\'No rows returned.\');\\n  }\\n\\n  // Create the new results spreadsheet.\\n  var spreadsheet = SpreadsheetApp.create(QUERY_NAME);\\n  var sheet = spreadsheet.getActiveSheet();\\n\\n  // Add headers to Sheet.\\n  var headers = queryResults.schema.fields.map(function(field) {\\n    return field.name.toUpperCase();\\n  });\\n  sheet.appendRow(headers);\\n\\n  // Append the results.\\n  var data = new Array(rows.length);\\n  for (var i = 0; i < rows.length; i++) {\\n    var cols = rows[i].f;\\n    data[i] = new Array(cols.length);\\n    for (var j = 0; j < cols.length; j++) {\\n      data[i][j] = cols[j].v;\\n    }\\n  }\\n\\n  // Start storing data in row 2, col 1\\n  var START_ROW = 2;      // skip header row\\n  var START_COL = 1;\\n  sheet.getRange(START_ROW, START_COL, rows.length, headers.length).setValues(data);\\n\\n  Logger.log(\'Results spreadsheet created: %s\', spreadsheet.getUrl());\\n\\n  // Return the spreadsheet object for later use.\\n  return spreadsheet;\\n}\\n\\n/**\\n * Uses spreadsheet data to create columnar chart.\\n * @param {Spreadsheet} Spreadsheet containing results data\\n * @returns {EmbeddedChart} visualizing the results\\n * @see http://developers.google.com/apps-script/reference/spreadsheet/embedded-chart\\n */\\nfunction createColumnChart(spreadsheet) {\\n  // Retrieve the populated (first and only) Sheet.\\n  var sheet = spreadsheet.getSheets()[0];\\n  // Data range in Sheet is from cell A2 to B11\\n  var START_CELL = \'A2\';  // skip header row\\n  var END_CELL = \'B11\';\\n  // Place chart on Sheet starting on cell E5.\\n  var START_ROW = 5;      // row 5\\n  var START_COL = 5;      // col E\\n  var OFFSET = 0;\\n\\n  // Create & place chart on the Sheet using above params.\\n  var chart = sheet.newChart()\\n     .setChartType(Charts.ChartType.COLUMN)\\n     .addRange(sheet.getRange(START_CELL + \':\' + END_CELL))\\n     .setPosition(START_ROW, START_COL, OFFSET, OFFSET)\\n     .build();\\n  sheet.insertChart(chart);\\n}\\n```\\n\\n\u7136\u540e\u6211\u4eec\u901a\u8fc7\u9009run-createBigQueryPresentation()\u51fd\u6570,\u6211\u4eec\u53bb\u5230google drive\u53bb\u770b\u6211\u4eec\u8868\u683c,\u56fe\u7247\\n\\n\u6700\u540e\u4e00\u90e8\u5206,\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u7684google ppt,\u7136\u540e\u518d\u6807\u9898\u5e7b\u706f\u7247\u4e0a\u586b\u5145\u6807\u9898\u548c\u526f\u6807\u9898,\u7136\u540e\u6dfb\u52a02\u5f20\u65b0slide,\u4e00\u4e2a\u7528\u4e8e\u6570\u636e\u5355\u5143\u683c,\u53e6\u5916\u4e00\u4e2a\u7528\u4e8e\u56fe\u8868\\n#### 1 \u521b\u5efa\u5e7b\u706f\u7247\\n``` javascript\\n/**\\n * Create presentation with spreadsheet data & chart\\n * @param {Spreadsheet} Spreadsheet with results data\\n * @param {EmbeddedChart} Sheets chart to embed on slide\\n * @returns {Presentation} Slide deck with results\\n */\\nfunction createSlidePresentation(spreadsheet, chart) {\\n  // Create the new presentation.\\n  var deck = SlidesApp.create(QUERY_NAME);\\n\\n  // Populate the title slide.\\n  var [title, subtitle] = deck.getSlides()[0].getPageElements();\\n  title.asShape().getText().setText(QUERY_NAME);\\n  subtitle.asShape().getText().setText(\'via GCP and G Suite APIs:\\\\n\' +\\n    \'Google Apps Script, BigQuery, Sheets, Slides\');\\n```\\n\\n#### 2 \u6dfb\u52a0\u6570\u636e\u8868: \u6211\u4eec\u901a\u8fc7createSlidePresentation()\u628a\u5355\u5143\u683c\u6570\u636e\u4ecegoogle\u8868\u683c\u5bfc\u5165\u6211\u4eec\u7684\u65b0ppt\u4e2d\\n``` java\\n  // Data range to copy is from cell A1 to B11\\n  var START_CELL = \'A1\';  // include header row\\n  var END_CELL = \'B11\';\\n  // Add the table slide and insert an empty table on it of\\n  // the dimensions of the data range; fails if Sheet empty.\\n  var tableSlide = deck.appendSlide(SlidesApp.PredefinedLayout.BLANK);\\n  var sheetValues = spreadsheet.getSheets()[0].getRange(\\n      START_CELL + \':\' + END_CELL).getValues();\\n  var table = tableSlide.insertTable(sheetValues.length, sheetValues[0].length);\\n\\n  // Populate the table with spreadsheet data.\\n  for (var i = 0; i < sheetValues.length; i++) {\\n    for (var j = 0; j < sheetValues[0].length; j++) {\\n      table.getCell(i, j).getText().setText(String(sheetValues[i][j]));\\n    }\\n  }\\n```\\n\\n#### 3 \u5bfc\u5165\u56fe\u8868,\u5728createSlidePresentation()\u51fd\u6570\u4e2d\u518d\u521b\u5efa\u4e00\u5f20ppt,\u4ece\u7535\u5b50\u8868\u683c\u4e2d\u5bfc\u5165\u56fe\u8868,\u8fd4\u56dePresentation\u5bf9\u8c61deck\\n``` javascript\\n  // Add a chart slide and insert the chart on it.\\n  var chartSlide = deck.appendSlide(SlidesApp.PredefinedLayout.BLANK);\\n  chartSlide.insertSheetsChart(chart);\\n\\n  // Return the presentation object for later use.\\n  return deck;\\n}\\n```\\n#### 4 \u8fd4\u56de\u56fe: \u6211\u4eec\u9700\u8981\u8ba9createColumnChart()\u8fd4\u56de\u5bf9\u8c61,\u6240\u4ee5\u6211\u4eec\u5728\u5c3e\u7aef\u63a5\u6536createColumnChart():\\n```javascript\\n // Return chart object for later use\\n  return chart;\\n}\\n```\\n\\n#### \u66f4\u65b0createBigQueryPresentation(),\u56e0\u4e3acreateColumnChart()\u8fd4\u56de\u4e86\u56fe\u8868,\u6240\u4ee5\u6211\u4eec\u8981\u628a\u8fd9\u4e2a\u56fe\u8868\u4fdd\u5b58\u5230\u53d8\u91cf,\u7136\u540e\u628a\u7535\u5b50\u8868\u683c\u548c\u56fe\u8868\u90fd\u4f20\u9012\u7ed9createSlidePresentation()\u51fd\u6570\\n```javascript\\n/**\\n * Runs a BigQuery query, adds data and a chart in a Sheet,\\n * and adds the data and chart to a new slide presentation.\\n */\\nfunction createBigQueryPresentation() {\\n  var spreadsheet = runQuery();\\n  Logger.log(\'Results spreadsheet created: %s\', spreadsheet.getUrl());\\n  var chart = createColumnChart(spreadsheet);\\n  var deck = createSlidePresentation(spreadsheet, chart);\\n  Logger.log(\'Results slide deck created: %s\', deck.getUrl());\\n}\\n```\\n\\n\u6700\u540e\u7684\u7248\u672c\u5982\u4e0b:\\n``` javescript\\n// Filename for data results\\nvar QUERY_NAME = \\"Most common words in all of Shakespeare\'s works\\";\\n// Replace this value with your Google Cloud API project ID\\nvar PROJECT_ID = \'<YOUR_PROJECT_ID>\';\\nif (!PROJECT_ID) throw Error(\'Project ID is required in setup\');\\n\\n/**\\n * Runs a BigQuery query; puts results into Sheet. You must enable\\n * the BigQuery advanced service before you can run this code.\\n * @see http://developers.google.com/apps-script/advanced/bigquery#run_query\\n * @see http://github.com/gsuitedevs/apps-script-samples/blob/master/advanced/bigquery.gs\\n *\\n * @returns {Spreadsheet} Returns a spreadsheet with BigQuery results\\n * @see http://developers.google.com/apps-script/reference/spreadsheet/spreadsheet\\n */\\nfunction runQuery() {\\n  // Replace sample with your own BigQuery query.\\n  var request = {\\n    query:\\n        \'SELECT \' +\\n            \'LOWER(word) AS word, \' +\\n            \'SUM(word_count) AS count \' +\\n        \'FROM [bigquery-public-data:samples.shakespeare] \' +\\n        \'GROUP BY word \' +\\n        \'ORDER BY count \' +\\n        \'DESC LIMIT 10\'\\n  };\\n  var queryResults = BigQuery.Jobs.query(request, PROJECT_ID);\\n  var jobId = queryResults.jobReference.jobId;\\n\\n  // Wait for BQ job completion (with exponential backoff).\\n  var sleepTimeMs = 500;\\n  while (!queryResults.jobComplete) {\\n    Utilities.sleep(sleepTimeMs);\\n    sleepTimeMs *= 2;\\n    queryResults = BigQuery.Jobs.getQueryResults(PROJECT_ID, jobId);\\n  }\\n\\n  // Get all results from BigQuery.\\n  var rows = queryResults.rows;\\n  while (queryResults.pageToken) {\\n    queryResults = BigQuery.Jobs.getQueryResults(PROJECT_ID, jobId, {\\n      pageToken: queryResults.pageToken\\n    });\\n    rows = rows.concat(queryResults.rows);\\n  }\\n\\n  // Return null if no data returned.\\n  if (!rows) {\\n    return Logger.log(\'No rows returned.\');\\n  }\\n\\n  // Create the new results spreadsheet.\\n  var spreadsheet = SpreadsheetApp.create(QUERY_NAME);\\n  var sheet = spreadsheet.getActiveSheet();\\n\\n  // Add headers to Sheet.\\n  var headers = queryResults.schema.fields.map(function(field) {\\n    return field.name.toUpperCase();\\n  });\\n  sheet.appendRow(headers);\\n\\n  // Append the results.\\n  var data = new Array(rows.length);\\n  for (var i = 0; i < rows.length; i++) {\\n    var cols = rows[i].f;\\n    data[i] = new Array(cols.length);\\n    for (var j = 0; j < cols.length; j++) {\\n      data[i][j] = cols[j].v;\\n    }\\n  }\\n\\n  // Start storing data in row 2, col 1\\n  var START_ROW = 2;      // skip header row\\n  var START_COL = 1;\\n  sheet.getRange(START_ROW, START_COL, rows.length, headers.length).setValues(data);\\n\\n  // Return the spreadsheet object for later use.\\n  return spreadsheet;\\n}\\n\\n/**\\n * Uses spreadsheet data to create columnar chart.\\n * @param {Spreadsheet} Spreadsheet containing results data\\n * @returns {EmbeddedChart} visualizing the results\\n * @see http://developers.google.com/apps-script/reference/spreadsheet/embedded-chart\\n */\\nfunction createColumnChart(spreadsheet) {\\n  // Retrieve the populated (first and only) Sheet.\\n  var sheet = spreadsheet.getSheets()[0];\\n  // Data range in Sheet is from cell A2 to B11\\n  var START_CELL = \'A2\';  // skip header row\\n  var END_CELL = \'B11\';\\n  // Place chart on Sheet starting on cell E5.\\n  var START_ROW = 5;      // row 5\\n  var START_COL = 5;      // col E\\n  var OFFSET = 0;\\n\\n  // Create & place chart on the Sheet using above params.\\n  var chart = sheet.newChart()\\n     .setChartType(Charts.ChartType.COLUMN)\\n     .addRange(sheet.getRange(START_CELL + \':\' + END_CELL))\\n     .setPosition(START_ROW, START_COL, OFFSET, OFFSET)\\n     .build();\\n  sheet.insertChart(chart);\\n\\n  // Return the chart object for later use.\\n  return chart;\\n}\\n\\n/**\\n * Create presentation with spreadsheet data & chart\\n * @param {Spreadsheet} Spreadsheet with results data\\n * @param {EmbeddedChart} Sheets chart to embed on slide\\n * @returns {Presentation} Returns a slide deck with results\\n * @see http://developers.google.com/apps-script/reference/slides/presentation\\n */\\nfunction createSlidePresentation(spreadsheet, chart) {\\n  // Create the new presentation.\\n  var deck = SlidesApp.create(QUERY_NAME);\\n\\n  // Populate the title slide.\\n  var [title, subtitle] = deck.getSlides()[0].getPageElements();\\n  title.asShape().getText().setText(QUERY_NAME);\\n  subtitle.asShape().getText().setText(\'via GCP and G Suite APIs:\\\\n\' +\\n    \'Google Apps Script, BigQuery, Sheets, Slides\');\\n\\n  // Data range to copy is from cell A1 to B11\\n  var START_CELL = \'A1\';  // include header row\\n  var END_CELL = \'B11\';\\n  // Add the table slide and insert an empty table on it of\\n  // the dimensions of the data range; fails if Sheet empty.\\n  var tableSlide = deck.appendSlide(SlidesApp.PredefinedLayout.BLANK);\\n  var sheetValues = spreadsheet.getSheets()[0].getRange(\\n      START_CELL + \':\' + END_CELL).getValues();\\n  var table = tableSlide.insertTable(sheetValues.length, sheetValues[0].length);\\n\\n  // Populate the table with spreadsheet data.\\n  for (var i = 0; i < sheetValues.length; i++) {\\n    for (var j = 0; j < sheetValues[0].length; j++) {\\n      table.getCell(i, j).getText().setText(String(sheetValues[i][j]));\\n    }\\n  }\\n\\n  // Add a chart slide and insert the chart on it.\\n  var chartSlide = deck.appendSlide(SlidesApp.PredefinedLayout.BLANK);\\n  chartSlide.insertSheetsChart(chart);\\n\\n  // Return the presentation object for later use.\\n  return deck;\\n}\\n\\n/**\\n * Runs a BigQuery query, adds data and a chart in a Sheet,\\n * and adds the data and chart to a new slide presentation.\\n */\\nfunction createBigQueryPresentation() {\\n  var spreadsheet = runQuery();\\n  Logger.log(\'Results spreadsheet created: %s\', spreadsheet.getUrl());\\n  var chart = createColumnChart(spreadsheet);\\n  var deck = createSlidePresentation(spreadsheet, chart);\\n  Logger.log(\'Results slide deck created: %s\', deck.getUrl());\\n}\\n```\\n\\n## \u6267\u884c\u540e,\u6211\u4eec\u5c31\u4f1a\u770b\u5230\u4ee5\u4e0b\u6548\u679c:\\n\\n![png](../img/bigquery/bigquery_presentation/12.png)\\n![png](../img/bigquery/bigquery_presentation/13.png)\\n![png](../img/bigquery/bigquery_presentation/14.png)\\n![png](../img/bigquery/bigquery_presentation/15.png)\\n![png](../img/bigquery/bigquery_presentation/16.png)\\n\\n# \u662f\u4e0d\u662f\u8d85\u9177\u5462??"},{"id":"/2020/4/15/bq_sql\u5e38\u7528\u77ed\u8bed","metadata":{"permalink":"/blog/2020/4/15/bq_sql\u5e38\u7528\u77ed\u8bed","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-15-bq_sql\u5e38\u7528\u77ed\u8bed.md","source":"@site/blog/2020-4-15-bq_sql\u5e38\u7528\u77ed\u8bed.md","title":"Bigquery\u4e2dsql\u8bed\u53e5\u5e38\u7528\u547d\u4ee4","description":"\u8fde\u63a5\u6570\u636e\u5e93","date":"2020-04-15T00:00:00.000Z","formattedDate":"April 15, 2020","tags":[{"label":"gcp","permalink":"/blog/tags/gcp"},{"label":"command line","permalink":"/blog/tags/command-line"},{"label":"github","permalink":"/blog/tags/github"}],"readingTime":3.475,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"bq_sql","title":"Bigquery\u4e2dsql\u8bed\u53e5\u5e38\u7528\u547d\u4ee4","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["gcp","command line","github"]},"prevItem":{"title":"google script + excel+ google drive","permalink":"/blog/2020/4/16/bq_\u811a\u672c\u5236\u4f5cpresentation"},"nextItem":{"title":"\u8c37\u6b4c\u5e38\u7528\u547d\u4ee4","permalink":"/blog/2020/4/15/gcp_\u5e38\u7528\u547d\u4ee4"}},"content":"## \u8fde\u63a5\u6570\u636e\u5e93\\n```sql\\ngcloud sql connect  qwiklabs-demo --user=root\\n```\\n\\n## \u5408\u5e76\u4e24\u4e2a\u8868\u683cunion\\n\x3c!-- truncate --\x3e\\n```sql\\nSELECT start_station_name AS top_stations, num FROM london1 WHERE num>100000\\nUNION\\nSELECT end_station_name, num FROM london2 WHERE num>100000\\nORDER BY top_stations DESC;\\n```\\n\u53c2\u8003 [Uninon\u548cjoin\u7684\u533a\u522b](https://blog.csdn.net/qq_41359051/article/details/98469387#UNION_157)\\n\\n[UNION](https://www.cnblogs.com/CraryPrimitiveMan/p/3665154.html)\u4e2d\u95f4\u7684\u5173\u952e\u5b57\u901a\u8fc7\u5c06\u201c london2\u201d\u6570\u636e\u4e0e\u201c london1\u201d\u540c\u5316\u6765\u7ec4\u5408\u8fd9\u4e9b\u67e5\u8be2\u7684\u8f93\u51fa\u3002\u7531\u4e8e\u5c06\u201c london1\u201d\u4e0e\u201c london2\u201d\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u56e0\u6b64\u5217\u540d\u4f18\u5148\u4e3a\u201c top_stations\u201d\u548c\u201c num\u201d\u3002\\n\\nORDER BY \u5c06\u6309\u7167\u201c top_stations\u201d\u5217\u503c\u7684\u5b57\u6bcd\u987a\u5e8f\u548c\u964d\u5e8f\u5bf9\u6700\u7ec8\u7684\u8054\u5408\u8868\u8fdb\u884c\u6392\u5e8f\u3002\\n![png](../img/mysql/bq_mysql.png)\\n\\n## \u6dfb\u52a0\u6570\u636e  insert into \u8868 (\u5b57\u6bb5,\u5b57\u6bb5) values (\u503c,\u503c);\\n```sql\\nINSERT INTO london1 (start_station_name, num) VALUES (\\"test destination\\", 1);\\n```\\n## \u8fd0\u884c\u67e5\u8be2\u547d\u4ee4\\nbq query --use_legacy_sql=false \'select \u5b57\u6bb5 from \u8868\u683c where \u6761\u4ef6\'\\n\u6ce8\u610f\u7684\u5730\u65b9\u662f \\n### use_legacy_sql=false \u8868\u793a\u4f7f\u7528\u6807\u51c6sql\u8bed\u53e5\\n### \u6761\u4ef6\u7684\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528\u53cc\u5f15\u53f7\u505a\u533a\u5206\\"\\"\\n\\n``` sql\\n#standardSQL\\nSELECT  FROM `data-to-inghts.ecommerce.rev_transactions` LIMIT 1000\\n```\\n```\\nWhat\'s wrong with the previous query to view 1000 items? check\\nThere is a typo in the dataset name check\\nWe have not specified any columns in the SELECT\\nThere is a typo in the table name\\nWe are using legacy SQL\\n```\\n\\nwhat about this updated query?\\n```sql\\n#standardSQL\\nSELECT * FROM [data-to-insights:ecommerce.rev_transactions] LIMIT 1000\\n\'\'\'\\nwe are using legacy sql\\n\\nwhat about this query that uses standard SQL\\n```sql\\n#standardSQL\\nSELECT FROM `data-to-insights.ecommerce.rev_transactions`\\n```\\nno columns defined in select\\n\\nwhat about now?\\n```sql\\n#standardSQL\\nSELECT\\nfullVisitorId\\nFROM `data-to-insights.ecommerce.rev_transactions`\\n```\\nwithout aggregations,limits or sorting, this query is not insightful\\n\\nwhat about now?\\n```sql\\n#standardSQL\\nSELECT fullVisitorId hits_page_pageTitle\\nFROM `data-to-insights.ecommerce.rev_transactions` LIMIT 1000\\n```\\nit can be excuated.\\n\\nwhat about now?\\n```sql\\n#standardSQL\\nSELECT\\n  fullVisitorId\\n  , hits_page_pageTitle\\nFROM `data-to-insights.ecommerce.rev_transactions` LIMIT 1000\\n```\\nthis returns result, but visitors maybe counted twice.\\n\\nwhat about this? an aggregation function, count(), was added.\\n```sql\\n#standardSQL\\nSELECT\\nCOUNT(fullVisitorId) AS visitor_count\\n, hits_page_pageTitle\\nFROM `data-to-insights.ecommerce.rev_transactions`\\n```\\n\u6ca1\u53bb\u91cd,the count()function does not de-deduplicate the same fullvisitorid\\nit is missing a group by clause\\n\\nin this next query, group by and distinct statements were added\\n```sql\\n#standardSQL\\nSELECT\\nCOUNT(DISTINCT fullVisitorId) AS visitor_count\\n, hits_page_pageTitle\\nFROM `data-to-insights.ecommerce.rev_transactions`\\nGROUP BY hits_page_pageTitle\\n```\\n\\nwe can add filter \'where\' to filter results\\n```sql\\n#standardSQL\\nSELECT\\nCOUNT(DISTINCT fullVisitorId) AS visitor_count\\n, hits_page_pageTitle\\nFROM `data-to-insights.ecommerce.rev_transactions`\\nWHERE hits_page_pageTitle = \\"Checkout Confirmation\\"\\nGROUP BY hits_page_pageTitle\\n```\\n\\nList the cities with the most transactions with your ecommerce site\\n```sql\\nSELECT\\ngeoNetwork_city,\\nsum(totals_transactions) as totals_transactions,\\nCOUNT( DISTINCT fullVisitorId) AS distinct_visitors\\nFROM\\n`data-to-insights.ecommerce.rev_transactions`\\nGROUP BY geoNetwork_city\\nOrder by distinct_visitors Desc\\n```\\n\\nwhats wrong with the following query?\\n```sql\\n#standardSQL\\nSELECT\\ngeoNetwork_city,\\nSUM(totals_transactions) AS total_products_ordered,\\nCOUNT( DISTINCT fullVisitorId) AS distinct_visitors,\\nSUM(totals_transactions) / COUNT( DISTINCT fullVisitorId) AS avg_products_ordered\\nFROM\\n`data-to-insights.ecommerce.rev_transactions`\\nWHERE avg_products_ordered > 20\\nGROUP BY geoNetwork_city\\nORDER BY avg_products_ordered DESC\\n```\\nwe cannot filter aggregated fields in the \'where\' clause ( use \'Having\' instead) \u4e0d\u53ef\u4ee5\u7528where\u6765\u805a\u5408\u51fd\u6570\u7684\u5b57\u6bb5,\u8981\u7528having\\nwe cannot filter on aliased fields within the \'where\' clause\\nwhere\u8fc7\u6ee4\u53e5\u4e2d\u4e0d\u80fd\u4f7f\u7528\u522b\u540d\\n\\npossible solution\\n```sql\\nselect geoNetwork_city, SUM(totals_transactions) as total_products_ordered, count(distinct fullvisitorID) as distinct_visitors,\\nsum(totals_transactions) / count(distinct fullVisitorId) As avg_products_ordered\\nfrom\\n`data-to-insights.ecommerce.rev_transactions`\\nGroup by geoNetwork_city\\nHaving avg_products_ordered > 20\\norder by avg_products_ordered\\n```\\n\\n```sql\\n#standardSQL\\nSELECT\\nCOUNT(hits_product_v2ProductName) as number_of_products,\\nhits_product_v2ProductCategory\\nFROM `data-to-insights.ecommerce.rev_transactions`\\nWHERE hits_product_v2ProductName IS NOT NULL\\nGROUP BY hits_product_v2ProductCategory\\nORDER BY number_of_products DESC\\n```\\n\u8fd9\u91cc\u7684\u95ee\u9898\u662fcount()\u51fd\u6570\u91cc\u9762\u7684\u5b57\u6bb5\u6ca1\u6709\u505adistinct,\u6709\u53ef\u80fd\u5bfc\u81f4\u91cd\u590d\\nThe count() function is not the distinct number of products in each category\\n\\npossible solution\\n```sql\\n#standardSQL\\nSELECT\\nCOUNT(DISTINCT hits_product_v2ProductName) as number_of_products,\\nhits_product_v2ProductCategory\\nFROM `data-to-insights.ecommerce.rev_transactions`\\nWHERE hits_product_v2ProductName IS NOT NULL\\nGROUP BY hits_product_v2ProductCategory\\nORDER BY number_of_products DESC\\nLIMIT 5\\n```"},{"id":"/2020/4/15/gcp_\u5e38\u7528\u547d\u4ee4","metadata":{"permalink":"/blog/2020/4/15/gcp_\u5e38\u7528\u547d\u4ee4","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-15-gcp_\u5e38\u7528\u547d\u4ee4.md","source":"@site/blog/2020-4-15-gcp_\u5e38\u7528\u547d\u4ee4.md","title":"\u8c37\u6b4c\u5e38\u7528\u547d\u4ee4","description":"\u5217\u51fa\u6d3b\u52a8\u8d26\u53f7\u540d\u79f0","date":"2020-04-15T00:00:00.000Z","formattedDate":"April 15, 2020","tags":[{"label":"gcp","permalink":"/blog/tags/gcp"},{"label":"command line","permalink":"/blog/tags/command-line"},{"label":"github","permalink":"/blog/tags/github"}],"readingTime":0.355,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"gcp_command_line","title":"\u8c37\u6b4c\u5e38\u7528\u547d\u4ee4","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["gcp","command line","github"]},"prevItem":{"title":"Bigquery\u4e2dsql\u8bed\u53e5\u5e38\u7528\u547d\u4ee4","permalink":"/blog/2020/4/15/bq_sql\u5e38\u7528\u77ed\u8bed"},"nextItem":{"title":"dataflow\u7b80\u5355\u5165\u95e8-apache beam \u57fa\u672c\u6982\u5ff5","permalink":"/blog/2020/4/11/dataflow-apache beam\u57fa\u672c\u6982\u5ff5"}},"content":"\u5217\u51fa\u6d3b\u52a8\u8d26\u53f7\u540d\u79f0\\n```python\\ngcloud auth list\\n```\\n\x3c!--truncate--\x3e\\n\u5217\u51fa\u9879\u76eeid\\n```\\ngcloud config list project\\n```\\n\\n\u8bbe\u7f6e\u9879\u76eeid \\n```\\ngcloud config set project project ID\\n```\\n\\n\u5217\u4e3e\u6240\u6709\u9879\u76ee\\n```\\ngcloud projects list\\n```\\n\\n\u67e5\u8be2\u6709\u54ea\u4e9b\u53ef\u4ee5\u5f00\u542f\u7684api,\u5e76\u4e14\u5f00\u542f\\n```\\ngcloud services list\\ngcloud services enable bigquery.googleapis.com\\n```"},{"id":"/2020/4/11/dataflow-apache beam\u57fa\u672c\u6982\u5ff5","metadata":{"permalink":"/blog/2020/4/11/dataflow-apache beam\u57fa\u672c\u6982\u5ff5","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-11-dataflow-apache beam\u57fa\u672c\u6982\u5ff5.md","source":"@site/blog/2020-4-11-dataflow-apache beam\u57fa\u672c\u6982\u5ff5.md","title":"dataflow\u7b80\u5355\u5165\u95e8-apache beam \u57fa\u672c\u6982\u5ff5","description":"1 Pipeline \u7ba1\u9053","date":"2020-04-11T00:00:00.000Z","formattedDate":"April 11, 2020","tags":[{"label":"dataflow","permalink":"/blog/tags/dataflow"},{"label":"bigquery","permalink":"/blog/tags/bigquery"},{"label":"subpub","permalink":"/blog/tags/subpub"},{"label":"steaming","permalink":"/blog/tags/steaming"}],"readingTime":3.46,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"dataflow4","title":"dataflow\u7b80\u5355\u5165\u95e8-apache beam \u57fa\u672c\u6982\u5ff5","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["dataflow","bigquery","subpub","steaming"]},"prevItem":{"title":"\u8c37\u6b4c\u5e38\u7528\u547d\u4ee4","permalink":"/blog/2020/4/15/gcp_\u5e38\u7528\u547d\u4ee4"},"nextItem":{"title":"dataflow\u7b80\u5355\u5165\u95e8-\u4f7f\u7528apache_beam\u521b\u5efa,\u8fd0\u884c\u4f5c\u4e1a","permalink":"/blog/2020/4/11/dataflow\u521b\u5efa\u4f5c\u4e1a"}},"content":"## 1 Pipeline \u7ba1\u9053\\n\\n## 2 Pcollection\\n\\n## 3 Ptransform\\n\\n\x3c!--truncate--\x3e\\n\u603b\u4f53\u6d41\u7a0b\u5c31\u662f \u8bbe\u7f6epipeline >> read data >> pcollection >> ptransform >> pcollection \\n\\n\u5176\u4e2dptransform\u6709ParDo\u548c\u8026\u5408\u51fd\u6570\u529f\u80fd\\n\\nParDo()\u91cc\u9762\u53ea\u80fd\u63a5\u6536\u7684\u662fDoFn\u7c7b\u6216\u96c6\u6210DoFn\u7c7b\u7684\u5bf9\u8c61\u7684\u51fd\u6570,ParDo\u64cd\u4f5c\u7684\u662f\u6bcf\u4e00\u884c\u7684\u6570\u636e,\u5c31\u597d\u50cfdataframe\u91cc\u9762\u7684\u4e00\u884c\\n# \u6572\u9ed1\u677f\u65f6\u95f4!!\\n## \u8bfb\u53d6Csv\u548ctxt\u6587\u4ef6,Pipeline\u8bfb\u53d6\u5f97\u6bcf\u4e00\u884c\u4e3a\u5b57\u7b26\u4e32,\u4e5f\u5c31\u662f,\u5c5e\u4e8epandas\u91cc\u9762\u7684seris, \u4e5f\u5c31\u662f\u53ea\u6709\u4e00\u5217,\u5982\u679c\u8981\u5206\u5f00\u51e0\u5217,\u6211\u4eec\u5c31\u8981split\u5b57\u7b26\u4e32,\u7136\u540e\u505a\u6210key:value\u5b57\u5178\u683c\u5f0f.\\n## \u8bfb\u53d6avro\u6587\u4ef6\u65f6\u5019,Pipeline\u8bfb\u53d6\u7684\u6bcf\u4e00\u884c\u4e3a\u5b57\u5178{},\u4e5f\u5c31\u662fpandas\u91cc\u9762\u7684\u4e00\u884cdataframe,\u5982\u679c\u8981\u53d6\u503c,\u6211\u4eec\u9700\u8981element[\u5217\u540d]\u5c31\u53ef\u4ee5\u53d6\u5230\\n\\n\u805a\u5408\u51fd\u6570\u64cd\u4f5c\u540e,\u5c31\u4f1a\u8fd4\u56de\u4e00\u4e2a\u6574\u4f53\u7684\u65b0\u7684Pcollection\\n\u8bb0\u4f4f\u5b57\u5178\u683c\u5f0f\u8981\u505a\u805a\u5408\u51fd\u6570\u8981\u53d8\u6210\u5217\u8868\u6216\u8005\u5143\u7ec4\\n## Groupbykey--\u5bf9\u8c61\u662f\u4e00\u4e2aPcollection,\u9996\u5148\u9009\u62e9\u8981\u505a\u805a\u5408\u7684key\u548c\u503c,\u7136\u540etranform\u4e00\u4e2apcollection\u683c\u5f0f\u4e3aturple,\u91cc\u9762\u4e3a(key,value),\u6700\u540e\u901a\u8fc7\u7ba1\u9053 | beam.GroupByKey()\\n\u5c31\u4f1a\u751f\u6210\u6309key\u5206\u7c7b, \u4ee5\u4e0b\u8fd9\u6837\u7684\u6548\u679c,\u5177\u4f53\u8bf4\u660e[\u4f8b\u5b50](https://beam.apache.org/documentation/programming-guide/#core-beam-transforms)\\n```\\ncat, 1\\ndog, 5\\nand, 1\\njump, 3\\ntree, 2\\ncat, 5\\ndog, 2\\nand, 2\\ncat, 9\\nand, 6\\n...\\n```\\n\u53d8\u6210\\n```\\ncat, [1,5,9]\\n\\ndog, [5,2]\\n\\nand, [1,2,6]\\n\\njump, [3]\\n\\ntree, [2]               \\n...\\n```\\n\\n##CoGroupKey--\u64cd\u4f5c\u5bf9\u8c61Pcollection,\u628a\u4e24\u4e2aPcollection\u901a\u8fc7key\u8fde\u63a5\u8d77\u6765,\\n\u6bd4\u5982Pcollection1:  \u662f\u5ba0\u7269\u540d\u5b57\u548c\u5e74\u9f84\\n\'\'\'\\n\\"Amy\\", 9\\n\\n\\"Tom\\", 3\\n\\n\\"Shierly\\", 3\\n\\n\\"Miccle\\", 4\\n\\n\\"Dockey\\", 4\\n```\\nPcollection2: \u662f\u5ba0\u7269\u540d\u5b57\u548c\u4e3b\u4eba\u540d\u5b57\\n```\\n\\"Amy\\", \\"michael\\"\\n\\n\\"Tom\\", \\"Tommy\\"\\n\\n\\"Shierly\\", \\"Darren\\"\\n\\n\\"Miccle\\", \\"Cherry\\"\\n\\n\\"Dockey\\", \\"Dick\\"\\n```\\n```\\nage_list = [(\\"Amy\\", 9),\\n\\n       (\\"Tom\\", 3),\\n\\n      (\\"Shierly\\", 3)\\n\\n      (\\"Miccle\\", 4)\\n\\n      (\\"Dockey\\", 4])]\\n\\nOwner_list = [(\\"Amy\\", \\"michael\\"),\\n\\n(\\"Tom\\", \\"Tommy\\"),\\n\\n(\\"Shierly\\", \\"Darren\\"),\\n\\n(\\"Miccle\\", \\"Cherry\\"),\\n\\n(\\"Dockey\\", \\"Dick\\")]\\n\\n\u7136\u540e\u6211\u4eec\u5f00\u59cb\u521b\u5efa\u4e24\u4e2aPcollections\\n\\nage = P |\\"create age\\" >> beam.Create(age_list)\\nowner = P | \\"create owner\\" >> beam.Create(owner_list)\\n\\n\u6211\u4eec\u7528CoGroupbyKey\u7684\u65f6\u5019,\u662f\u4f7f\u7528key,value\u7684\u5b57\u5178\u683c\u5f0f\u4f5c\u4e3a\u8f93\u5165\\n\\n\u683c\u5f0f\u4e3a results = {\\"Pcollection1\u540d\u5b57\\":Pcollection1, \\"Pcollection2\u540d\u5b57\\":Pcollection2} | beam.CoGroupByKey()\\n\\n\u5f97\u5230\u7684\u6548\u679c\u662f [(Key1,{\\"Pcollection1\u540d\u5b57\\":Pcollection1, \\"Pcollection2\u540d\u5b57\\":Pcollection2}), (Key2,{\\"Pcollection1\u540d\u5b57\\":Pcollection1, \\"Pcollection2\u540d\u5b57\\":Pcollection2}),(Key3,{\\"Pcollection1\u540d\u5b57\\":Pcollection1, \\"Pcollection2\u540d\u5b57\\":Pcollection2})]\\n\\n\\n\u5448\u73b0\u6548\u679c\u662f:\\n[\\"Tom\\" , {\'age\':3, \\"owner\\":\\"Tommy\\"}\\n\\"Shierly\\" ,{\'age\':3,\\"owner\\":\\"Darren\\"}\\n\\"Amy\\",{\'age\':9,\\"owner\\":\\"michael\\"}\\n...\\n]\\n```\\n```\\n## \u603b\u7ed3CoGroupByKey\u5c31\u662f\u628a\u4e24\u4e2aPcollection\u901a\u8fc7\u5171\u540c\u7684Key\u8fde\u63a5\u8d77\u6765,\u7136\u540e\u7528\u5143\u7ec4(key,value)\u663e\u793a\u51fa\u6765,values\u662f\u4e00\u4e2a\u5b57\u5178\u683c\u5f0f,\u5305\u542bPcollection\u540d\u5b57:value_list\\n\\n# \u4e00\u53e5\u8bdd\u8868\u793a: \\n## COGroupByKey\u5c31\u662f\u5143\u7ec4key\u5305\u542b\u5b57\u5178pcollection\u4e0e\u5b9a\u4e49\u7684value\\n## GroubByKey\u5c31\u662f\u5143\u7ec4key\u5305\u542bvalue_list\\n\\n## CombinePerKey(beam.combiners.MeanCombineFn)\\n\u5c31\u662f\u628agroupbykey \u518d\u5bf9\u6bcf\u4e2akey\u7684value\u505a\u52a0\u6743\u5e73\u5747\\n\\n## Flatten \u628a\u591a\u4e2aPCollection \u53d8\u6210\u4e00\u4e2a PCollection, \\n## \u8bf4\u767d\u4e86\u5c31\u662f\u628a\u591a\u4e2a\u5217\u8868\u7684\u503c\u653e\u5230\u4e00\u4e2a\u5217\u8868\\n```\\n# Flatten takes a tuple of PCollection objects.\\n# Returns a single PCollection that contains all of the elements in the PCollection objects in that tuple.\\nmerged = (\\n    (pcoll1, pcoll2, pcoll3)\\n    # A list of tuples can be \\"piped\\" directly into a Flatten transform.\\n    | beam.Flatten())\\n```"},{"id":"/2020/4/11/dataflow\u521b\u5efa\u4f5c\u4e1a","metadata":{"permalink":"/blog/2020/4/11/dataflow\u521b\u5efa\u4f5c\u4e1a","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-11-dataflow\u521b\u5efa\u4f5c\u4e1a.md","source":"@site/blog/2020-4-11-dataflow\u521b\u5efa\u4f5c\u4e1a.md","title":"dataflow\u7b80\u5355\u5165\u95e8-\u4f7f\u7528apache_beam\u521b\u5efa,\u8fd0\u884c\u4f5c\u4e1a","description":"1. \u5728\u672c\u5730\u521b\u5efa\u6765\u6d4b\u8bd5\u8fd0\u884c","date":"2020-04-11T00:00:00.000Z","formattedDate":"April 11, 2020","tags":[{"label":"dataflow","permalink":"/blog/tags/dataflow"},{"label":"bigquery","permalink":"/blog/tags/bigquery"},{"label":"subpub","permalink":"/blog/tags/subpub"},{"label":"steaming","permalink":"/blog/tags/steaming"}],"readingTime":4.76,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"dataflow2","title":"dataflow\u7b80\u5355\u5165\u95e8-\u4f7f\u7528apache_beam\u521b\u5efa,\u8fd0\u884c\u4f5c\u4e1a","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["dataflow","bigquery","subpub","steaming"]},"prevItem":{"title":"dataflow\u7b80\u5355\u5165\u95e8-apache beam \u57fa\u672c\u6982\u5ff5","permalink":"/blog/2020/4/11/dataflow-apache beam\u57fa\u672c\u6982\u5ff5"},"nextItem":{"title":"dataflow\u7b80\u5355\u5165\u95e8-\u6d41\u6570\u636e\u8f93\u5165\u5230bigquery","permalink":"/blog/2020/4/11/dataflow\u6d41\u6570\u636e\u8f93\u5165\u5230bigquery"}},"content":"1. \u5728\u672c\u5730\u521b\u5efa\u6765\u6d4b\u8bd5\u8fd0\u884c\\n2. \u653e\u5230dataflow\u4e0a\u8fd0\u884c\\n\x3c!--truncate--\x3e\\n## \u672c\u5730\u521b\u5efajob\\n1 \u9996\u5148\u662f\u5b89\u88c5\u6211\u4eec\u9700\u8981\u6253\u5de5\u5177\u5305,\u56e0\u4e3a\u6211\u662f\u5c06\u6765\u662f\u8981\u8fd0\u884c\u5230GCP\u4e0a\u7684,\u6240\u4ee5\u6211\u4eec\u5b89\u88c5\u7684\u662f\\n```\\npip install apache_beam[gcp]\\n```\\n2 \u5bfc\u5165\u5404\u79cd\u5305\\n```\\nfrom apache_beam.options.pipeline_options import PipelineOptions\\nfrom apache_beam.options.pipeline_options import GoogleCloudOptions\\nfrom apache_beam.options.pipeline_options import StandardOptions\\nfrom apache_beam.io.textio import ReadFromText, WriteToText #\u7528\u6765\u8bfb\u5199\u6587\u4ef6\\n```\\n3 \u8bbe\u7f6e\u914d\u7f6e\\n```\\n# \u8f93\u5165\u8f93\u51fa\u8def\u5f84\\ninput_filename = \\"./input.txt\\"\\noutput_filename = \\"./output.txt\\"\\n\\n#\u6307\u5b9a\u6267\u884c\u9009\u9879,\u4ee5\u544a\u8bc9Pipeline\u8fd0\u884c\u4f4d\u7f6e\u548c\u8fd0\u884c\u65b9\u5f0f\\noptions = PipelineOptions()\\noptions.view_as(StandardOptions).runner = \\"direct\\" #\u8868\u793a\u672c\u5730\u8fd0\u884c\\n\\n# \u5199\u529f\u80fd\u7c7b\\n#DoFn\u5c31\u662f\u628a\u7c7b,\u8f6c\u6362,callable\u7684\u529f\u80fd\u96c6\u5408\u5728\u4e00\u8d77,\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7ee7\u627f,\u65b9\u4fbf\u540e\u9762\u7ba1\u9053\u4f7f\u7528\\n#\u6240\u6709ParDo\u7684\u64cd\u4f5c\u90fd\u5fc5\u987b\u8981\u8ddfDoFn\u7c7b\u7684\u51fd\u6570,\u6bd4\u5982ParDo(DoFn())\\n\\n\\nclass Split(beam.DoFn):\\n    def process(self, element):\\n        \\"\\"\\"\\n        Splits each row on commas and returns a dictionary representing the row\\n        \u6211\u4eec\u8fd9\u91cc\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u7c7b\u4f3cmapper, \u5c06\u6240\u6709\u5143\u7d20\u53d8\u6210\u5b57\u5178\\n        \\"\\"\\"\\n        country,duration,user = element.split(\\",\\")\\n        print(len(element))# element\u5c31\u662f\u6bcf\u884c\u7684\u6570\u636e,\u8ddfhdfs\u4e00\u6837,\u89c6\u529b\u6709\u95ee\u9898\\n        return [\\n            {\\n                \'country\':country,\\n                \'duration\':duration,\\n                \'user\':user\\n            }\\n        ]\\n    \\nclass CollectTimings(beam.DoFn):\\n    def process(self,element):\\n        result = [element(\'country\'),element(\'duration\')]\\n        return result\\n\\nclass CollectUsers(beam.DoFn):\\n    def process(self,element):\\n        \\"\\"\\"\\n        Returns a list of tuples containing country and user name\\n        \\"\\"\\"\\n        return [element(\'country\'),element(\'user\')]\\n\\nclass WriteToCSV(beam.DoFn):\\n    def process(self,element):\\n        \\"\\"\\"\\n        Prepares each row to be written in the csv\\n        \\"\\"\\"\\n        result = [\\"%s,%s,%s\\"%(element[0],element[1][\'user\'][0],element[1][\'timings\'][0])]\\n        return result\\n\\n#\u521b\u5efa\u7ba1\u9053\u5bf9\u8c61, \u521b\u5efa\u53d8\u91cf\u63a5\u6536Pcollection, \u4e00\u5b9a\u8981\u52a0\u4e0a(),\u9632\u6b62\u6b67\u4e49,\u5982\u679c\u53d8\u6210 rows = P \u7136\u540e \u518d\u7ba1 | ReadFromText(input_filename), \u5f88\u5bb9\u6613\u62a5\u9519\\nwith beam.Pipeline(options=options) as p:\\n    rows = (\\n        P | ReadFromText(input_filename) | beam.ParDo(SPlit())\\n    )\\n    timings = (\\n        rows |\\n        beam.ParDo(CollectTimings()) |\\n        \\"Grouping timings\\" >> beam.GroupByKey() | \\n        \\"Calculating average\\" >> beam.CombineValues(\\n            beam.combiners.MeanCombineFn()\\n        )\\n    )\\n    users = (\\n        rows |\\n        beam.ParDo(CollectUsers()) |\\n        \\"Grouping users\\" >> beam.GroupByKey() |\\n        \\"Counting users\\" >> beam.CombineValues(\\n            beam.combiners.CountCombineFn()\\n        )\\n    )\\n    to_be_joined = (\\n        {\\n            \'timings\': timings,\\n            \'users\': users\\n        } |\\n        beam.CoGroupByKey() |\\n        beam.ParDo(WriteToCSV()) |\\n        WriteToText(output_filename)\\n    )\\n\\n\\n#\u8fd9\u91cc\u7684\u683c\u5f0f\u4e3apvalue | \\"label\\" >> transform\\n\u4e3a\u4ec0\u4e48\u8981\u4e3a\u4ec0\u4e48\u8981\u7528\\"label\\" >>,\u5176\u5b9e\u5982\u679c\u4efb\u52a1\u4e0d\u91cd\u590d\u7684\u65f6\u5019,\u662f\u53ef\u4ee5\u4e0d\u7528\u7684,\u4f46\u662f\u6bd4\u5982\u8fd9\u91cc\u8026\u5408\u51fd\u6570groupbykey\u51fa\u73b0\u5df2\u7ecf\u5728pipeline\u4e86,\u5982\u679c\u6ca1\u6709label\u5c31\u4f1a\u62a5\u9519,\u6267\u884cusers\u65f6\u5019\u5c31\u4f1a\u62a5\u9519\\n\\nGroupByKey\u662f\u628akey\u76f8\u540c\u7684\u62fc\u4e3a\u4e3a\u4e00\u7ec4,CombineValues\u662f\u628a\u503c\u7d2f\u79ef\u76f8\u52a0\\nCoGroupByKey\u662f\u6839\u636ekey\u62fc\u63a5\u4e00\u8d77\\n```\\n\\n# \u597d\u7684,\u672c\u5730\u6d4b\u8bd5\u597d\u540e, \u6211\u4eec\u8981\u653e\u5230dataflow\u4e0a\u8dd1\u4e86\\n\\n1 \u6211\u4eec\u9700\u8981\u6539\u7684\u5c31\u662f input,ouput \u8def\u5f84,\u8bb0\u4f4fstorage bucket\u7684\u6743\u9650\\n```\\ninput_filename = \\"gs://dataflow_s/input.txt\\"\\noutput_filename = \\"gs://dataflow_s/output.txt\\"\\n```\\n\\n2 options\\n```\\ndataflow_options = [\'--project=query-11\',\'--job_name=test-job\',\'--temp_location=gs://dataflow_s/tmp\',\'--region=us-central1\']\\ndataflow_options.append(\'--staging_location=gs://dataflow_s/stage\')\\noptions = PipelineOptions(dataflow_options)\\ngcloud_options = options.view_as(GoogleCloudOptions)\\noptions.view_as(StandardOptions).runner = \\"dataflow\\" # \u6307\u5b9a\u540e\u7aef\u8dd1\u5728dataflow\\n```\\n\u8fd9\u91cc\u6709\u4e2a\u5751,\u5982\u679c\u4f60\u7684apache beam\u662f2.15\u7248\u672c\u4ee5\u4e0a\u7684\u8bdd,\u662f\u9700\u8981\u5199region\u8fd9\u4e2a\u53c2\u6570\u7684\\n\u7136\u540e\u5176\u4ed6\u7684\u90fd\u5f88\u672c\u5730\u4e00\u6837,\u6574\u4f53\u4ee3\u7801\u5982\u4e0b:\\n```\\nimport logging\\nimport apache_beam as beam\\nfrom apache_beam.options.pipeline_options import PipelineOptions\\nfrom apache_beam.options.pipeline_options import SetupOptions\\nfrom apache_beam.options.pipeline_options import GoogleCloudOptions\\nfrom apache_beam.options.pipeline_options import StandardOptions\\nfrom apache_beam.io.textio import ReadFromText, WriteToText\\n\\n\\nlogging.basicConfig(level=logging.INFO)\\nlogger = logging.getLogger(__name__)\\n\\n\\ninput_filename = \\"gs://dataflow_s/input.txt\\"\\noutput_filename = \\"gs://dataflow_s/output.txt\\"\\n\\n\\ndataflow_options = [\'--project=query-11\',\'--job_name=test-job\',\'--temp_location=gs://dataflow_s/tmp\']\\ndataflow_options.append(\'--staging_location=gs://dataflow_s/stage\')\\noptions = PipelineOptions(dataflow_options)\\ngcloud_options = options.view_as(GoogleCloudOptions)\\n\\n# gcloud_options.job_name = \\"test-job\\"\\n\\n\\noptions.view_as(StandardOptions).runner = \\"dataflow\\"\\n\\n\\nclass Split(beam.DoFn):\\n\\n    def process(self, element):\\n        \\"\\"\\"\\n        Splits each row on commas and returns a dictionary representing the\\n        row\\n        \\"\\"\\"\\n        country, duration, user = element.split(\\",\\")\\n\\n        return [{\\n            \'country\': country,\\n            \'duration\': float(duration),\\n            \'user\': user\\n        }]\\n\\n\\nclass CollectTimings(beam.DoFn):\\n\\n    def process(self, element):\\n        \\"\\"\\"\\n        Returns a list of tuples containing country and duration\\n        \\"\\"\\"\\n\\n        result = [\\n            (element[\'country\'], element[\'duration\'])\\n        ]\\n        return result\\n\\n\\nclass CollectUsers(beam.DoFn):\\n\\n    def process(self, element):\\n        \\"\\"\\"\\n        Returns a list of tuples containing country and user name\\n        \\"\\"\\"\\n        result = [\\n            (element[\'country\'], element[\'user\'])\\n        ]\\n        return result\\n\\n\\nclass WriteToCSV(beam.DoFn):\\n\\n    def process(self, element):\\n        \\"\\"\\"\\n        Prepares each row to be written in the csv\\n        \\"\\"\\"\\n        result = [\\n            \\"{},{},{}\\".format(\\n                element[0],\\n                element[1][\'users\'][0],\\n                element[1][\'timings\'][0]\\n            )\\n        ]\\n        return result\\n\\n\\n\\n\\nwith beam.Pipeline(options=options) as p:\\n    rows = (\\n        p |\\n        ReadFromText(input_filename) |\\n        beam.ParDo(Split())\\n    )\\n\\n    timings = (\\n        rows |\\n        beam.ParDo(CollectTimings()) |\\n        \\"Grouping timings\\" >> beam.GroupByKey() |\\n        \\"Calculating average\\" >> beam.CombineValues(\\n            beam.combiners.MeanCombineFn()\\n        )\\n    )\\n\\n    users = (\\n        rows |\\n        beam.ParDo(CollectUsers()) |\\n        \\"Grouping users\\" >> beam.GroupByKey() |\\n        \\"Counting users\\" >> beam.CombineValues(\\n            beam.combiners.CountCombineFn()\\n        )\\n    )\\n\\n    to_be_joined = (\\n        {\\n            \'timings\': timings,\\n            \'users\': users\\n        } |\\n        beam.CoGroupByKey() |\\n        beam.ParDo(WriteToCSV()) |\\n        WriteToText(output_filename)\\n    )\\n```\\n\\n# \u7136\u540e\u628a\u8fd9\u6bb5\u4ee3\u7801\u653e\u5230gcloud\u4e0a\\n\u4f7f\u7528\u547d\u4ee4\u542f\u52a8,\u5177\u4f53\u662f\u5b89\u88c5\u865a\u62df\u73af\u5883,\u8fdb\u5165\u865a\u62df\u73af\u5883,\u5b89\u88c5apache beam\u5305,\u8fd0\u884cpython\u6587\u4ef6\\n```\\npip3 install --upgrade virtualenv --user\\npython3 -m virtualenv env\\nsource env/bin/activate\\npip3 install --quiet apache-beam[gcp]\\npython dataflow.py\\n```\\n\\n# \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u53bbjob\u4e0a\u770b\u5230\u8fd0\u884c\u60c5\u51b5"},{"id":"/2020/4/11/dataflow\u6d41\u6570\u636e\u8f93\u5165\u5230bigquery","metadata":{"permalink":"/blog/2020/4/11/dataflow\u6d41\u6570\u636e\u8f93\u5165\u5230bigquery","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-11-dataflow\u6d41\u6570\u636e\u8f93\u5165\u5230bigquery.md","source":"@site/blog/2020-4-11-dataflow\u6d41\u6570\u636e\u8f93\u5165\u5230bigquery.md","title":"dataflow\u7b80\u5355\u5165\u95e8-\u6d41\u6570\u636e\u8f93\u5165\u5230bigquery","description":"\u6982\u5ff5: streaming \u5c31\u662f \u52a8\u6001\u7684\u610f\u601d, streaming data\u5c31\u662f\u52a8\u6001\u6570\u636e, job status is streaming \u5c31\u662f\u8fd9\u4e2a\u4f5c\u4e1a\u662f\u4e00\u76f4\u6301\u7eed\u7684","date":"2020-04-11T00:00:00.000Z","formattedDate":"April 11, 2020","tags":[{"label":"dataflow","permalink":"/blog/tags/dataflow"},{"label":"bigquery","permalink":"/blog/tags/bigquery"},{"label":"subpub","permalink":"/blog/tags/subpub"},{"label":"steaming","permalink":"/blog/tags/steaming"}],"readingTime":1.89,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"dataflow1","title":"dataflow\u7b80\u5355\u5165\u95e8-\u6d41\u6570\u636e\u8f93\u5165\u5230bigquery","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["dataflow","bigquery","subpub","steaming"]},"prevItem":{"title":"dataflow\u7b80\u5355\u5165\u95e8-\u4f7f\u7528apache_beam\u521b\u5efa,\u8fd0\u884c\u4f5c\u4e1a","permalink":"/blog/2020/4/11/dataflow\u521b\u5efa\u4f5c\u4e1a"},"nextItem":{"title":"5\u5206\u949f\u5728\u8c37\u6b4c\u4e91\u4e0a\u4f7f\u7528dataflow\u6765\u8fd0\u884cjob","permalink":"/blog/2020/4/11/dataflow\u7528Apache Beam python\u8fd0\u884c Apache Beam copy 2"}},"content":"\u6982\u5ff5: streaming \u5c31\u662f \u52a8\u6001\u7684\u610f\u601d, streaming data\u5c31\u662f\u52a8\u6001\u6570\u636e, job status is streaming \u5c31\u662f\u8fd9\u4e2a\u4f5c\u4e1a\u662f\u4e00\u76f4\u6301\u7eed\u7684\\n\x3c!--truncate--\x3e\\n## \u5927\u4f53\u6d41\u7a0b\u662f\\n\\ncreate dataset,table in Bigquery >> create topic in SubPub \\n\\n| >> create job and run >> public message in topic \\n\\n| >> go to your job to check wrte SucessfulRecords \\n\\n| >> go to your bigquery to check your data\\n\\n\x3c!--truncate--\x3e\\n\\n## \u5177\u4f53\u6d41\u7a0b\u662f\\n\\n1. \u9996\u5148\u53bbproject \u521b\u5efadataset\u548ctable\\n\\n![png](../img/dataflow/dataflow_1/1.png)\\n\\n2. \u7136\u540e\u6211\u4eec\u53bb\u5230Dataflow, create job from template\\n\\n![png](../img/dataflow/dataflow_1/2.png)\\n\\n3. \u8fd9\u91cc\u6709\u51e0\u70b9\u6211\u4eec\u8981\u586b:\\n  \\njob name: \u4f5c\u4e1a\u540d\u5b57\\n\\ncloud pub/sub input topic: \u8f93\u5165\u8bdd\u9898,dataflow\u8f93\u5165\u6570\u636e\u5230bigquery\u521b\u5efa\u4e00\u4e2atopic\\n\\n\u6240\u4ee5,\u6211\u4eec\u8fd9\u91cc\u53bb\u5230Pub/Sub,\u521b\u5efatopic,\u628atopic name \u653e\u5230 cloud pub/sub input topic\\n![png](../img/dataflow/dataflow_1/3.png)\\n\\nBigquery output: Bigquery\u63a5\u6536\u6570\u636e\u7684table\u8868,\u8fd9\u91cc\u6211\u4eec\u53bb\u5230\u6211\u4eec\u7b2c\u4e00\u6b65\u521b\u5efa\u7684\u9875\u9762,\u590d\u5236\u8868\u683c\u6574\u4f53\u8def\u5f84\\n\\nTemporary location: \u8fd9\u91cc\u662f\u521b\u5efa\u6570\u636e\u4e34\u65f6\u653e\u7684\u5730\u65b9,\u8fd9\u4e2a\u6587\u4ef6\u53ef\u4ee5\u653e\u5728gs://my_bucket/tmp\u4e2d, \u6ce8\u610f,\u8fd9\u4e2atmp\u6587\u4ef6\u5939\u4e00\u5b9a\u8981\u5b58\u5728, \u8fd9\u4e2atmp\u6587\u4ef6\u5939\u53ef\u4ee5\u7ed9\u591a\u4e2ajob\u5b58\u653e\\n\\n4. \u7136\u540erun job\\n   \\n5. run job\u6210\u529f\u540e,\u6211\u4eec\u5148\u53bb\u5230\u6211\u4eec\u7684topic\u4e2d,\u7136\u540e\u9009\u62e9PUBLISH MESSAGE,\\n\\n![png](../img/dataflow/dataflow_1/4.png)\\n\\n\u7136\u540e\u6211\u4eec\u5728Message body\u4e0a\u8f93\u5165\u6211\u4eec\u9700\u8981\u8f93\u5165\u7684\u6570\u636e,\u6570\u636e\u683c\u5f0f\u662fjson\u683c\u5f0f{\\"key\\":\\"value\\",\\"k\\",\\"v\\"},\u7136\u540epublish\\n\\n![png](../img/dataflow/dataflow_1/5.png)\\n\\n6. \u7136\u540e\u6211\u4eec\u56de\u5230job,\u67e5\u770bjob detail, \u6211\u4eec\u70b9\u51fbwritesuccessfulRecords,\u53ef\u4ee5\u770b\u5230\u53f3\u8fb9Elements added \u51fa\u73b0\u4e86\u4f60\u6dfb\u52a0\u4e86\u591a\u5c11\u6761,\u6bd4\u5982\u6211\u6dfb\u52a0\u4e86\u4e24\u6761,\u4ed6\u5c31\u663e\u793a2\u6761\\n\\n![png](../img/dataflow/dataflow_1/6.png)\\n\\n7. \u6700\u540e\u6211\u4eec\u53ef\u4ee5\u53bbbigquery\u67e5\u770b\\n   \\n![png](../img/dataflow/dataflow_1/7.png)"},{"id":"/2020/4/11/dataflow\u7528Apache Beam python\u8fd0\u884c Apache Beam copy 2","metadata":{"permalink":"/blog/2020/4/11/dataflow\u7528Apache Beam python\u8fd0\u884c Apache Beam copy 2","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-11-dataflow\u7528Apache Beam python\u8fd0\u884c Apache Beam copy 2.md","source":"@site/blog/2020-4-11-dataflow\u7528Apache Beam python\u8fd0\u884c Apache Beam copy 2.md","title":"5\u5206\u949f\u5728\u8c37\u6b4c\u4e91\u4e0a\u4f7f\u7528dataflow\u6765\u8fd0\u884cjob","description":"png","date":"2020-04-11T00:00:00.000Z","formattedDate":"April 11, 2020","tags":[{"label":"dataproc","permalink":"/blog/tags/dataproc"},{"label":"GCP","permalink":"/blog/tags/gcp"},{"label":"Spark","permalink":"/blog/tags/spark"},{"label":"Hadoop","permalink":"/blog/tags/hadoop"}],"readingTime":0.5,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"dataflow","title":"5\u5206\u949f\u5728\u8c37\u6b4c\u4e91\u4e0a\u4f7f\u7528dataflow\u6765\u8fd0\u884cjob","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["dataproc","GCP","Spark","Hadoop"]},"prevItem":{"title":"dataflow\u7b80\u5355\u5165\u95e8-\u6d41\u6570\u636e\u8f93\u5165\u5230bigquery","permalink":"/blog/2020/4/11/dataflow\u6d41\u6570\u636e\u8f93\u5165\u5230bigquery"},"nextItem":{"title":"5\u5206\u949f\u5728\u8c37\u6b4c\u4e91\u4e0a\u521b\u5efajupyterhub","permalink":"/blog/2020/4/11/jupyterhub_GCP"}},"content":"```\\ngcloud config set project query-11\\n```\\n# \u521b\u5efa\u865a\u62df\u73af\u5883,\u5e76\u4e14\u6fc0\u6d3b\\n```python\\npip3 install --upgrade virtualenv --user\\npython3 -m virtualenv env\\nsource env/bin/activate\\n```\\n\x3c!--truncate--\x3e\\n# \u5b89\u88c5samples\u548capache Beam SDK\\n```python\\npip3 install --quiet apache-beam[gcp]\\n```\\n# \u5efa\u7acb\u4e00\u4e2acloud storage bucket\\n```python\\ngustil mb gs://query-11\\n```\\n\\n# \u5728dataflow\u5f00\u542fpipeline\\n```python\\npython3 -m \\\\\\n    apache_beam.examples.wordcount \\\\\\n    --project query-11 --runner \\\\\\n    DataflowRunner --temp_location \\\\\\n    gs://query-11/temp --output \\\\\\n    gs://query-11/results/output \\\\\\n    --job_name dataflow-intro\\n```\\n\\n# \u6211\u4eec\u53ef\u4ee5\u53bb\u5230dataflow,\u70b9\u51fbflow\\n![png](../img/dataflow/1.png)\\n![png](../img/dataflow/2.png)\\n![png](../img/dataflow/3.png)"},{"id":"/2020/4/11/jupyterhub_GCP","metadata":{"permalink":"/blog/2020/4/11/jupyterhub_GCP","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-11-jupyterhub_GCP.md","source":"@site/blog/2020-4-11-jupyterhub_GCP.md","title":"5\u5206\u949f\u5728\u8c37\u6b4c\u4e91\u4e0a\u521b\u5efajupyterhub","description":"\u8fd9\u4e2a\u662f\u5e38\u89c4\u64cd\u4f5c,\u6240\u4ee5\u5c31\u4e0d\u89e3\u91ca\u4e86","date":"2020-04-11T00:00:00.000Z","formattedDate":"April 11, 2020","tags":[{"label":"git","permalink":"/blog/tags/git"},{"label":"lfs","permalink":"/blog/tags/lfs"},{"label":"github","permalink":"/blog/tags/github"}],"readingTime":2.645,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"jupyterhub_GCP","title":"5\u5206\u949f\u5728\u8c37\u6b4c\u4e91\u4e0a\u521b\u5efajupyterhub","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["git","lfs","github"]},"prevItem":{"title":"5\u5206\u949f\u5728\u8c37\u6b4c\u4e91\u4e0a\u4f7f\u7528dataflow\u6765\u8fd0\u884cjob","permalink":"/blog/2020/4/11/dataflow\u7528Apache Beam python\u8fd0\u884c Apache Beam copy 2"},"nextItem":{"title":"dataflow sql","permalink":"/blog/2020/4/11/\u4f7f\u7528Dataflow SQL\u754c\u9762\u8fd0\u884cDataflow\u4f5c\u4e1a"}},"content":"\u8fd9\u4e2a\u662f\u5e38\u89c4\u64cd\u4f5c,\u6240\u4ee5\u5c31\u4e0d\u89e3\u91ca\u4e86\\n![png](../img/jupyterhub/left-menu-button.png)\\n![png](../img/jupyterhub/vm-instances-menu.png)\\n![png](../img/jupyterhub/enable-billing.png)\\n![png](../img/jupyterhub/create-vm-first.png)\\n## \u9009\u62e9region,\\n## cpu\u8981\u8d85\u8fc71GB,\\n## Boot disk\u542f\u52a8\u78c1\u76d8\u9009\u62e9ubuntu 18.04LTS\\n\x3c!--truncate--\x3e\\n![png](../img/jupyterhub/machine-type-basic.png)\\n![png](../img/jupyterhub/boot-disk-button.png)\\n![png](../img/jupyterhub/boot-disk-ubuntu.png)\\n\\n## \u5728identity and API access \u9009\u62e9No service account\\n\u8fd9\u6837\u505a\u53ef\u4ee5\u9632\u6b62\u4f60\u7684jupyter hub users \u8fdb\u5165\u5176\u4ed6\u4e91\u670d\u52a1,\u63d0\u5347\u5b89\u5168\\n![png](../img/jupyterhub/no-service-account.png)\\n\\n## \u9632\u706b\u5899\u7684\u9009\u62e9,\u5141\u8bb8http\u548chttps\\n![png](../img/jupyterhub/firewall.png)\\n\\n## copy \u4ee5\u4e0b\u94fe\u63a5\u5230startup script\u4e0a\u6765\u5b89\u88c5jupyterhub\\n\u8fd9\u91ccadmin-user-name\u8981\u66ff\u6362\u6210\u4f60\u7684\u7528\u6237\u540d,\u7528\u6765\u7b49\u4e0b\u7684\u767b\u5f55,\u5982\\"flybird\\"\\n```python\\n#!/bin/bash\\ncurl https://raw.githubusercontent.com/jupyterhub/the-littlest-jupyterhub/master/bootstrap/bootstrap.py \\\\\\n  | sudo python3 - \\\\\\n    --admin <admin-user-name>\\n```\\n## \u521b\u5efavm\u5b9e\u4f8b\\n![png](../img/jupyterhub/create-vm-button.png)\\n![png](../img/jupyterhub/vm-created.png)\\n\\n## \u5927\u698220\u5206\u949f\u540e,jupyterhub\u5c31\u521b\u5efa\u6210\u529f,\u6211\u4eec\u53ef\u4ee5\u590d\u5236external ip\u5230\u6d4f\u89c8\u5668\u67e5\u770b\\n!! \u6ce8\u610f, \u6ca1\u521b\u5efa\u6210\u529f\u6210, \u6d4f\u89c8\u5668\u4f1a\u63d0\u793adiaed tcp, conection refused, \u6240\u4ee5\u4e0d\u7528\u7740\u6025\\n![png](../img/jupyterhub/first-login.png)\\n\\n## \u7528\u4e4b\u524dstartup script\u5199\u7684\u7528\u6237\u540d\u767b\u5f55\\n![png](../img/jupyterhub/1.png)\\n\\n## \u9009\u62e9admin,\u53ef\u4ee5\u521b\u5efa\u7528\u6237\\n![png](../img/jupyterhub/2.png)\\n![png](../img/jupyterhub/3.png)\\n![png](../img/jupyterhub/4.png)\\n## \u5f00\u542fserver,\u5f00\u542f\u540e,\u7528\u6237\u5c31\u53ef\u4ee5\u767b\u5f55\u4e86\\n![png](../img/jupyterhub/5.png)\\n\\n## \u8fdb\u5165\u7ec8\u7aef,\u5206\u522b\u5b89\u88c5conda/pip\u5b89\u88c5\u5305\u7ed9\u6240\u6709\u7528\u6237\\n\u7ba1\u7406\u5458admin\u80fd\u591f\u4f7f\u7528\u547d\u4ee4 sudo -E \u5bf9\u6574\u4e2a\u73af\u5883\u5b89\u88c5\u5de5\u5177\u5305\\n```python\\nsudo -E conda install -c conda-forge gdal\\n```\\n![png](../img/jupyterhub/6.png)\\n![png](../img/jupyterhub/7.png)\\n![png](../img/jupyterhub/8.png)\\n![png](../img/jupyterhub/9.png)\\n```python\\nsudo -E pip install there\\n```\\n![png](../img/jupyterhub/10.png)\\n\\n## \u6d4b\u8bd5\u521b\u5efa\u6587\u4ef6\\n![png](../img/jupyterhub/11.png)\\n\\n## \u6d4b\u8bd5\u65b0\u7528\u6237\u767b\u5f55\\n![png](../img/jupyterhub/12.png)\\n![png](../img/jupyterhub/13.png)\\n\\n# \u6210\u529f\u5566!!!\\n\\n## \u597d\u5566,\u73b0\u5728\u8981\u4f60\u6709\u4e86\u786c\u6838\u4e86,\u4f46\u662f\u8981\u6709\u8f6f\u4e1c\u897f\u5566,package\u8981\u5b89\u88c5,\u5bf9\u4e0d\u5bf9\u554a\\n\u6bd4\u5982\u5b89\u88c5 [conda, pip \u6216\u8005apt package](http://tljh.jupyter.org/en/latest/install/google.html)\u561b\\n\\n## \u53bb\u5230jupyter terminal,\u6240\u6709package\u90fd\u5728jupyter terminal\u5b89\u88c5\u54e6\\n```\\nsudo -E conda install -c conda-forge gdal\\nsudo -E pip install there\\npip install jupyter_contrib_nbextensions --user #\u7528\u505ajupyter\u81ea\u52a8\u63d0\u793a\\njupyter contrib nbextension install --user\\npip install --user jupyter_nbextensions_configurator\\njupyter nbextensions_configurator enable --user\\n```\\n[jupyter \u4ee3\u7801\u63d0\u793a\u81ea\u52a8\u8865\u5168\u53c2\u8003\u94fe\u63a5](https://blog.csdn.net/mengfei2656/article/details/89287140)\\n\u8fd9\u91cc\u8981\u6572\u9ed1\u677f\u5566,\u60f3\u5b89\u88c5\u66f4\u591apip , apt packages\u548c\u6743\u9650\u8fdb\u5165\u4e0d\u518djupyter Hub\u7528\u6237\u73af\u5883\u7684\u8bbe\u7f6e\u7b49,\u8bf7\u770b[\u5b98\u7f51\u6587\u6863](http://tljh.jupyter.org/en/latest/howto/env/user-environment.html#howto-env-user-environment)\\n\\n\u5f15\u7528\u5b98\u7f51\u4e00\u6bb5\u6587\u5b57:\\nAccessing user environment outside JupyterHub\\nWe add /opt/tljh/user/bin to the $PATH environment variable for all JupyterHub users, so everything installed in the user environment is available to them automatically. If you are using ssh to access your server instead, you can get access to the same environment with:\\n```\\nexport PATH=/opt/tljh/user/bin:${PATH}\\n```"},{"id":"/2020/4/11/\u4f7f\u7528Dataflow SQL\u754c\u9762\u8fd0\u884cDataflow\u4f5c\u4e1a","metadata":{"permalink":"/blog/2020/4/11/\u4f7f\u7528Dataflow SQL\u754c\u9762\u8fd0\u884cDataflow\u4f5c\u4e1a","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-11-\u4f7f\u7528Dataflow SQL\u754c\u9762\u8fd0\u884cDataflow\u4f5c\u4e1a.md","source":"@site/blog/2020-4-11-\u4f7f\u7528Dataflow SQL\u754c\u9762\u8fd0\u884cDataflow\u4f5c\u4e1a.md","title":"dataflow sql","description":"\u603b\u4f53\u6d41\u7a0b","date":"2020-04-11T00:00:00.000Z","formattedDate":"April 11, 2020","tags":[{"label":"dataflow","permalink":"/blog/tags/dataflow"},{"label":"GCP","permalink":"/blog/tags/gcp"},{"label":"apache beam","permalink":"/blog/tags/apache-beam"},{"label":"sql","permalink":"/blog/tags/sql"}],"readingTime":4.06,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"dataflow3","title":"dataflow sql","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["dataflow","GCP","apache beam","sql"]},"prevItem":{"title":"5\u5206\u949f\u5728\u8c37\u6b4c\u4e91\u4e0a\u521b\u5efajupyterhub","permalink":"/blog/2020/4/11/jupyterhub_GCP"},"nextItem":{"title":"mac\u5b89\u88c5spark+jupyter+annocade+pycharm\u914d\u7f6e","permalink":"/blog/2020/4/11/\u5b89\u88c5spark"}},"content":"[\u603b\u4f53\u6d41\u7a0b](https://www.youtube.com/watch?v=GBNBnobxsiI)\\n# \u9009\u62e9\u9879\u76ee \\n```\\ngcloud config set project query-11\\n```\\n# \u542f\u7528API\\n\u542f\u7528 Cloud Dataflow, Compute Engine, Stackdriver Logging, Cloud Storage, Cloud Storage JSON, BigQuery, Cloud Pub/Sub, and Cloud Resource Manager API\u3002\\n\\n\u5177\u4f53\u6d41\u7a0b\u53ef\u67e5\u770b[Dataflow SQL \u754c\u9762](https://cloud.google.com/dataflow/docs/guides/sql/dataflow-sql-ui-walkthrough)\\n\\n\x3c!--truncate--\x3e\\n# \u521b\u5efaPub/Sub\u4e3b\u9898\u548c\u53d1\u5e03\u811a\u6b65\\n\\n(1)\\n```\\ngcloud pubsub topics create transactions\\n```\\n\\n(2)\\n\u521b\u5efapython\u6587\u4ef6, transactions_injector.py,\u5185\u5bb9\u4e3a\u4e00\u4e0b\\n```\\n#!/usr/bin/env python\\n\\nimport datetime, json, os, random, time\\n\\n# Set the `project` variable to a Google Cloud project ID.\\nproject = \'query-11\'\\n\\nFIRST_NAMES = [\'Monet\', \'Julia\', \'Angelique\', \'Stephane\', \'Allan\', \'Ulrike\', \'Vella\', \'Melia\',\\n\'Noel\', \'Terrence\', \'Leigh\', \'Rubin\', \'Tanja\', \'Shirlene\', \'Deidre\', \'Dorthy\', \'Leighann\',\\n\'Mamie\', \'Gabriella\', \'Tanika\', \'Kennith\', \'Merilyn\', \'Tonda\', \'Adolfo\', \'Von\', \'Agnus\',\\n\'Kieth\', \'Lisette\', \'Hui\', \'Lilliana\',]\\nCITIES = [\'Washington\', \'Springfield\', \'Franklin\', \'Greenville\', \'Bristol\', \'Fairview\', \'Salem\',\\n\'Madison\', \'Georgetown\', \'Arlington\', \'Ashland\',]\\nSTATES = [\'MO\',\'SC\',\'IN\',\'CA\',\'IA\',\'DE\',\'ID\',\'AK\',\'NE\',\'VA\',\'PR\',\'IL\',\'ND\',\'OK\',\'VT\',\'DC\',\'CO\',\'MS\',\\n\'CT\',\'ME\',\'MN\',\'NV\',\'HI\',\'MT\',\'PA\',\'SD\',\'WA\',\'NJ\',\'NC\',\'WV\',\'AL\',\'AR\',\'FL\',\'NM\',\'KY\',\'GA\',\'MA\',\\n\'KS\',\'VI\',\'MI\',\'UT\',\'AZ\',\'WI\',\'RI\',\'NY\',\'TN\',\'OH\',\'TX\',\'AS\',\'MD\',\'OR\',\'MP\',\'LA\',\'WY\',\'GU\',\'NH\']\\nPRODUCTS = [\'Product 2\', \'Product 2 XL\', \'Product 3\', \'Product 3 XL\', \'Product 4\', \'Product 4 XL\', \'Product 5\',\\n\'Product 5 XL\',]\\n\\nwhile True:\\n    first_name, last_name = random.sample(FIRST_NAMES, 2)\\n    data = {\\n    \'tr_time_str\': datetime.datetime.now().strftime(\\"%Y-%m-%d %H:%M:%S\\"),\\n    \'first_name\': first_name,\\n    \'last_name\': last_name,\\n    \'city\': random.choice(CITIES),\\n    \'state\':random.choice(STATES),\\n    \'product\': random.choice(PRODUCTS),\\n    \'amount\': float(random.randrange(50000, 70000)) / 100,\\n    }\\n    message = json.dumps(data)\\n    command = \\"gcloud --project={} pubsub topics publish transactions --message=\'{}\'\\".format(project, message)\\n    print(command)\\n    os.system(command)\\n    time.sleep(random.randrange(1, 5))\\n```\\n## python\u811a\u672c\u4e0b\u7684PubSub\u7684\u4e3b\u8981\u547d\u4ee4\u6709:\\n```\\ngcloud pubsub topics create transactions \u521b\u5efa topics\\ngcloud --project=project_id pubsub topics publish transactions(topic\u540d\u5b57) --message=(json\u683c\u5f0f\u7684data,\u6700\u540e\u7528json.dump(data))\\ncommand = \\"gcloud --project={} pubsub topics publish transactions --message=\'{}\'\\".format(project, message)\\nos.system(command)\\n```\\n\\n\\n\\n# \u521b\u5efa\u6570\u636e\u96c6\u548c\u8868\\n```\\nbq mk dataflow_sql_dataset\\n```\\n# \u521b\u5efa\u4e00\u4e2aus_state_salesregions.csv\u6587\u4ef6,\u628a\u4ee5\u4e0b\u6570\u636e\u590d\u5236\u5230csv\u6587\u4ef6\\n```\\nstate_id,state_code,state_name,sales_region\\n1,MO,Missouri,Region_1\\n2,SC,South Carolina,Region_1\\n3,IN,Indiana,Region_1\\n6,DE,Delaware,Region_2\\n15,VT,Vermont,Region_2\\n16,DC,District of Columbia,Region_2\\n19,CT,Connecticut,Region_2\\n20,ME,Maine,Region_2\\n35,PA,Pennsylvania,Region_2\\n38,NJ,New Jersey,Region_2\\n47,MA,Massachusetts,Region_2\\n54,RI,Rhode Island,Region_2\\n55,NY,New York,Region_2\\n60,MD,Maryland,Region_2\\n66,NH,New Hampshire,Region_2\\n4,CA,California,Region_3\\n8,AK,Alaska,Region_3\\n37,WA,Washington,Region_3\\n61,OR,Oregon,Region_3\\n33,HI,Hawaii,Region_4\\n59,AS,American Samoa,Region_4\\n65,GU,Guam,Region_4\\n5,IA,Iowa,Region_5\\n32,NV,Nevada,Region_5\\n11,PR,Puerto Rico,Region_6\\n17,CO,Colorado,Region_6\\n18,MS,Mississippi,Region_6\\n41,AL,Alabama,Region_6\\n42,AR,Arkansas,Region_6\\n43,FL,Florida,Region_6\\n44,NM,New Mexico,Region_6\\n46,GA,Georgia,Region_6\\n48,KS,Kansas,Region_6\\n52,AZ,Arizona,Region_6\\n56,TN,Tennessee,Region_6\\n58,TX,Texas,Region_6\\n63,LA,Louisiana,Region_6\\n7,ID,Idaho,Region_7\\n12,IL,Illinois,Region_7\\n13,ND,North Dakota,Region_7\\n31,MN,Minnesota,Region_7\\n34,MT,Montana,Region_7\\n36,SD,South Dakota,Region_7\\n50,MI,Michigan,Region_7\\n51,UT,Utah,Region_7\\n64,WY,Wyoming,Region_7\\n9,NE,Nebraska,Region_8\\n10,VA,Virginia,Region_8\\n14,OK,Oklahoma,Region_8\\n39,NC,North Carolina,Region_8\\n40,WV,West Virginia,Region_8\\n45,KY,Kentucky,Region_8\\n53,WI,Wisconsin,Region_8\\n57,OH,Ohio,Region_8\\n49,VI,United States Virgin Islands,Region_9\\n62,MP,Commonwealth of the Northern Mariana Islands,Region_9\\n```\\n\u521b\u5efa\u8868\\n```\\nbq load --autodetect --source_format=CSV dataflow_sql_dataset.us_state_salesregions us_state_salesregions.csv\\n```\\n\\n# \u67e5\u627e Pub/Sub \u6765\u6e90\\n\u9996\u5148\u628adataset\u8bbe\u7f6e\u6210Gloud dataflow engine\\n\\n\u7136\u540e\u518d\u70b9\u51fb\u6dfb\u52a0\u6570\u636e\u4e0b\u62c9\u5217\u8868\uff0c\u7136\u540e\u9009\u62e9 Cloud Dataflow \u6765\u6e90\\n\\n\u5728\u53f3\u4fa7\u6253\u5f00\u7684\u6dfb\u52a0 Cloud Dataflow \u6765\u6e90\u9762\u677f\u4e2d\uff0c\u9009\u62e9 Pub/Sub \u4e3b\u9898\u3002\u5728\u641c\u7d22\u6846\u4e2d\uff0c\u641c\u7d22 transactions\u3002 \u9009\u62e9\u76f8\u5e94\u4e3b\u9898\uff0c\u7136\u540e\u70b9\u51fb\u6dfb\u52a0\u3002\\n\\n\u5728Cloud dataflow sources\u7684 cloud pub/sub topics\u4e0b\u9009\u62e9transactions >> \u53bb\u5230Schema >> edit schema,\\n\u7136\u540e\u8f93\u5165\u4e00\u4e0bschema\u683c\u5f0f\\n```\\n[\\n  {\\n      \\"description\\": \\"Pub/Sub event timestamp\\",\\n      \\"name\\": \\"event_timestamp\\",\\n      \\"mode\\": \\"REQUIRED\\",\\n      \\"type\\": \\"TIMESTAMP\\"\\n  },\\n  {\\n      \\"description\\": \\"Transaction time string\\",\\n      \\"name\\": \\"tr_time_str\\",\\n      \\"type\\": \\"STRING\\"\\n  },\\n  {\\n      \\"description\\": \\"First name\\",\\n      \\"name\\": \\"first_name\\",\\n      \\"type\\": \\"STRING\\"\\n  },\\n  {\\n      \\"description\\": \\"Last name\\",\\n      \\"name\\": \\"last_name\\",\\n      \\"type\\": \\"STRING\\"\\n  },\\n  {\\n      \\"description\\": \\"City\\",\\n      \\"name\\": \\"city\\",\\n      \\"type\\": \\"STRING\\"\\n  },\\n  {\\n      \\"description\\": \\"State\\",\\n      \\"name\\": \\"state\\",\\n      \\"type\\": \\"STRING\\"\\n  },\\n  {\\n      \\"description\\": \\"Product\\",\\n      \\"name\\": \\"product\\",\\n      \\"type\\": \\"STRING\\"\\n  },\\n  {\\n      \\"description\\": \\"Amount of transaction\\",\\n      \\"name\\": \\"amount\\",\\n      \\"type\\": \\"FLOAT64\\"\\n  }\\n]\\n```\\n# \u8fd0\u884cpython\u811a\u672c,\u8fd9\u6837\u6211\u4eec\u5c31\u5f00\u59cb\u4e0d\u505c\u53d1\u9001\u6570\u636e\\n```\\npython transactions_injector.py\\n```\\n\\n# \u521b\u5efaSQL\u67e5\u8be2\\n\u521b\u5efaSQL\u67e5\u8be2\u6765\u8fd0\u884cDataflow jobs\\n\u6211\u4eec\u8fd9\u91cc\u4f8b\u5b50\u662f\u6dfb\u52a0\u4e00\u4e2a\u5904\u7406PubSub\u53d1\u9001\u7684\u5b57\u6bb5\u518d\u6dfb\u52a0\u4e00\u4e2a\u5b57\u6bb5\\n```\\nSELECT tr.*, sr.sales_region\\nFROM pubsub.topic.`project-id`.transactions as tr\\n  INNER JOIN bigquery.table.`project-id`.dataflow_sql_dataset.us_state_salesregions AS sr\\n  ON tr.state = sr.state_code\\n```\\n\\n# \u6211\u4eec\u8bbe\u7f6e\u597d\u67e5\u8be2\u540e\u5c31\u53ef\u4ee5\u5f00\u59cb\u521b\u5efajob\u4e86\\n\\n1 \u5728Query editor\u4e0b\u9762,\u9009\u62e9Create Dataflow job (\u8fd9\u4e2a\u6309\u94ae\u53ea\u6709\u5728\u8bbe\u7f6e\u597dquery\u540e\u624d\u80fd\u751f\u6548)\\n\\n2 \u70b9\u51fb\u8fdb\u53bb\u540e,\u6211\u4eec\u586b\u5199job name, Primary ouput(\u9009\u62e9Bigquery), Project, Dataset id\u548c\u586b\u5199table name (\u81ea\u5df1\u547d\u540d)\\n\\n3 write disposition\u4e2d \u9009\u62e9write if empty\\n\\n4 \u70b9\u51fbcreate\\n\\n# \u8fd9\u6837job\u5c31\u5f00\u542f\u4e86\\n\u5927\u69825\u5206\u949fjob\u5e94\u8be5\u5dee\u4e0d\u591a\u5f00\u542f\u4e86,\u6211\u4eec\u53ef\u4ee5\u53bbdataflow\u67e5\u770bjob\u7684\u8fd0\u884c\u60c5\u51b5,\u540c\u65f6\u6211\u4eec\u4e5f\u53ef\u4ee5\u53bbbigquery\u67e5\u770b\u6211\u4eec\u7684table\u662f\u5426\u521b\u7acb\u6210\u529f\u548c\u6570\u636e\u6709\u6ca1\u6709\u66f4\u65b0"},{"id":"/2020/4/11/\u5b89\u88c5spark","metadata":{"permalink":"/blog/2020/4/11/\u5b89\u88c5spark","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-11-\u5b89\u88c5spark.md","source":"@site/blog/2020-4-11-\u5b89\u88c5spark.md","title":"mac\u5b89\u88c5spark+jupyter+annocade+pycharm\u914d\u7f6e","description":"Spark\u7684\u5b89\u88c5\u5927\u591a\u6bd4\u8f83\u9ebb\u70e6\uff0c\u800cMac\u5b89\u88c5Spark\u975e\u5e38\u7b80\u5355\uff0c\u672c\u6587\u5206\u4e09\u90e8\u5206\u5185\u5bb9\u3002","date":"2020-04-11T00:00:00.000Z","formattedDate":"April 11, 2020","tags":[{"label":"spark","permalink":"/blog/tags/spark"},{"label":"jupyter","permalink":"/blog/tags/jupyter"},{"label":"pycharm","permalink":"/blog/tags/pycharm"},{"label":"java","permalink":"/blog/tags/java"}],"readingTime":4.925,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"spark1","title":"mac\u5b89\u88c5spark+jupyter+annocade+pycharm\u914d\u7f6e","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["spark","jupyter","pycharm","java"]},"prevItem":{"title":"dataflow sql","permalink":"/blog/2020/4/11/\u4f7f\u7528Dataflow SQL\u754c\u9762\u8fd0\u884cDataflow\u4f5c\u4e1a"},"nextItem":{"title":"tf_serving\u90e8\u7f72+\u9047\u5230\u7684\u95ee\u9898","permalink":"/blog/2020/4/05/tf_serving"}},"content":"Spark\u7684\u5b89\u88c5\u5927\u591a\u6bd4\u8f83\u9ebb\u70e6\uff0c\u800cMac\u5b89\u88c5Spark\u975e\u5e38\u7b80\u5355\uff0c\u672c\u6587\u5206\u4e09\u90e8\u5206\u5185\u5bb9\u3002\\n1. \u5b89\u88c5JDK\\n2. \u5b89\u88c5Spark\\n3. \u7b80\u5355\u6d4b\u8bd5\\n\x3c!--truncate--\x3e\\n\u8fd9\u91cc\u5177\u4f53\u53ef\u4ee5\u53c2\u8003\u94fe\u63a5\\n\\n[\u5b89\u88c5JDK](https://blog.csdn.net/a595130080/article/details/53350076?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase)\\n\\n\u6211\u7684u\u76d8\u6709 JDK + annocada + spark,\u6240\u4ee5\u76f4\u63a5pass\u4e0b\u8f7d\u5b89\u88c5\u6b65\u9aa4\u5566(\u5982\u56fe\u663e\u793a),\u53cc\u51fb\u70b9\u51fbJDK,Anaconda3\u5b89\u88c5\u5c31\u53ef\u4ee5\u4e86,spark-3.0.0-preview2-bin-hadoop2.7\u5c31\u662fspark,\u76f4\u63a5\u8df3\u5230\u6d4b\u8bd5\u9636\u6bb5\\n\\n![png](../img/spark/1.png)\\n\\n\u6253\u5f00\u7ec8\u7aef,\u5207\u6362\u5230spark\u7684\u8def\u5f84(spark-3.0.0-preview2-bin-hadoop2.7):\\n\u7136\u540e\u8f93\u5165\\n```\\n./sbin/start-master.sh\\n```\\n\u7136\u540e\u518d(http://localhost:8080),\u5c31\u53ef\u4ee5\u770b\u5230\u6548\u679c:\\n![png](../img/spark/2.png)\\n\\n\u8868\u793a\u5b89\u88c5\u6210\u529f\u4e86\\n\\n\u7136\u540e\u5728\u4e00\u4e2a\u65b0\u7684\u7ec8\u7aef,\u8fdb\u5165\u540c\u6837\u7684spark\u8def\u5f84,\u7136\u540e\u8f93\u5165\\n```\\n./bin/spark-class org.apache.spark.deploy.worker.Worker spark://IP:PORT\\n```\\n\u8fd9\u91cc\u7684spark://IP:PORT\u4fee\u6539\u6210\u56fe\u7247\u4e0a\u7684URL,\u5982: ./bin/spark-class org.apache.spark.deploy.worker.Worker\\nspark://chenbindeMacBook-Pro.local:7077\\n\\n\u8fd9\u6837\u6211\u4eec\u5c31\u5f00\u542f\u4e86\u4e00\u4e2a\u65b0\u7684worker\\n\\n\u7136\u540e\u6211\u4eec\u5728\u7ec8\u7aefcommand+c\u5c31\u53ef\u4ee5\u5173\u6389worker\\n\\n\u6700\u540e\u662f\u5173\u6389\u4e3b\u673a,\u5728\u7ec8\u7aef\u8f93\u5165\\n```\\n./sbin/stop-master.sh\\n```\\n\u8fd9\u4e2a\u662f\u7b80\u5355\u7248\u7684\\n\\n# \u4e8c Anocada+jupyter+spark\\n\\n\u6211\u4eec\u5b89\u88c5\u597dspark,jdk\u540e,\u6211\u4eec\u8fd8\u8981\u5b89\u88c5Anocada,\u6211\u7684\u6587\u4ef6\u91cc\u9762\u4e5f\u6709,\u76f4\u63a5\u53cc\u51fb\u5b89\u88c5\u5c31\u53ef\u4ee5\u4e86\\n\\n1 \u6211\u4eec\u5207\u6362\u5230\u4e3b\u76ee\u5f55\\n\\n2 #\u6253\u5f00bash_profile\\n\\n3 \u8bbe\u7f6eanaconda\u548cspark\u8def\u5f84, \u6ce8\u610f!!!\u8fd9\u91ccspark_path\u8def\u5f84\u662fspark\u7684\u5177\u4f53\u8def\u5f84\\n\\n4 \u4f7f\u547d\u4ee4\u7acb\u523b\u751f\u6548\\n\\n```\\ncd ~\\nopen .bash_profile  \\nexport PATH=\\"/Applications/anaconda3/bin:$PATH\\"\\nexport SPARK_PATH=\\"/Users/flybird/Desktop/spark/spark-3.0.0-preview2-bin-hadoop2.7\\"\\nexport PATH=$SPARK_PATH/bin:$PATH\\nsource .bash_profile\\n```\\n\\n## \u5b89\u88c5pyspark,\u8fd9\u4e00\u6b65\u5f88\u91cd\u8981\u54e6\\n```\\nsudo pip install pyspark -i https://pypi.douban.com/simple/\\n```\\n\\n## \u5728Jupyter Notebook\u91cc\u8fd0\u884cPySpark, \u914d\u7f6ePySpark driver\\n\u8be6\u7ec6\u6559\u7a0b\u53ef\u4ee5\u770b[\u8fd9\u91ccurl\u94fe\u63a5](https://blog.csdn.net/a1272899331/article/details/90081945?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase)\\n\u914d\u7f6ePySpark driver\uff0c\u5f53\u8fd0\u884cpyspark\u547d\u4ee4\u5c31\u76f4\u63a5\u81ea\u52a8\u6253\u5f00\u4e00\u4e2aJupyter Notebook\uff0c\u6b64\u65f6shell\u7aef\u4e0d\u4f1a\u6253\u5f00,\u5177\u4f53\u914d\u7f6e\u6b65\u9aa4:\\n```\\nsudo vim ~/.bashrc \u5728\u8fd9\u4e2a\u6587\u4ef6\u6dfb\u52a0\u914d\u7f6ePySpark driver\u7684\u73af\u5883\u53d8\u91cf\\nexport PYSPARK_DRIVER_PYTHON=jupyter\\nexport PYSPARK_DRIVER_PYTHON_OPTS=\'notebook\'\\nsource ~/.bashrc\\n```\\n\u7136\u540e\u91cd\u542fterminal\\n\\n## \u542f\u52a8jupyter notebook3\\n\\n\u542f\u52a8\u540e,\u6211\u4eec\u5728jupyter notebook\u4e0a\u521b\u5efapython\u6587\u4ef6\\n\u7136\u540e\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\\n![png](../img/spark/3.png)\\n```\\nimport os\\nimport sys\\nspark_path = os.environ.get(\'SPARK_PATH\', None)\\nsys.path.insert(0, os.path.join(spark_path, \'python/lib/py4j-0.10.8.1-src.zip\'))\\nexec(open(os.path.join(spark_path, \'python/pyspark/shell.py\')).read())\\n```\\n![png](../img/spark/4.png)\\n\\npy4j-0.10.8.1-src.zip\u9700\u8981\u6839\u636e\u5b9e\u9645\u540d\u79f0\u4fee\u6539,\u5982\u679c\u662f\u7528\u6211\u7684\u5305,\u5c31\u4e0d\u7528\u6539,\u5982\u679c\u662f\u7528spark\u5b98\u7f51\u4e0b\u8f7d\u7684,\u5c31\u9700\u8981\u5bf9\u5e94\u7684zip\u6587\u4ef6\u540d\u5b57\\n\\n\u8f93\u5165\u547d\u4ee4\u540e\u7684\u6548\u679c\u5982\u4e0b, \u7136\u540e\u8f93\u5165sc,\u67e5\u770b\u76f8\u5e94\u7684\u8f93\u51fa:\\n![png](../img/spark/7.png)\\n\\n\u53ef\u4ee5\u7528command\u6765\u8bd5\u8bd5\u4e00\u4e0b\u547d\u4ee4\\n```\\nimport pyspark\\n \\nimport random\\nsc = pyspark.SparkContext(appName=\\"Pi\\")\\nnum_samples = 100000000\\ndef inside(p):     \\n  x, y = random.random(), random.random()\\n  return x*x + y*y < 1\\ncount = sc.parallelize(range(0, num_samples)).filter(inside).count()\\npi = 4 * count / num_samples\\nprint(pi)\\nsc.stop()\\n```\\n\\n\u5982\u679c\u53d1\u73b0\u51fa\u73b0\\n```\\nUnsupported class file major version 57\\n```\\n\u5c31\u662fjdk\u7248\u672c\u95ee\u9898,\u53bb\u5230\u7ec8\u7aef\\n```\\njava -version #\u67e5\u770b\u7248\u672c java version \\"13.0.2\\" 2020-01-14\\ncd /Library/Java/JavaVirtualMachines\\nls\\nsudo rm -rf jdk-13.0.2.jdk #\u5220\u9664java version\\n```\\n\u5b89\u88c5JDK\uff08jdk-8u251\uff09\uff0c[\u4e0b\u8f7djdk-8u251-macosx-x64.dmg](https://www.oracle.com/java/technologies/javase-jdk8-downloads.html)\\n\\n\u7136\u540e\u518d\u56de\u5230jupyter notebook,\u91cd\u65b0\u8f93\u5165\u547d\u4ee4,\u67e5\u770b\u662f\u5426\u6210\u529f\\n![png](../img/spark/8.png)\\n\\n\\n# Pycharm\u8bbe\u7f6e\u5566\\nPycharm\u8fd9\u91cc\u5177\u4f53\u53ef\u4ee5[\u53c2\u8003\u4e00\u4e0b\u6587\u7ae0](https://www.jianshu.com/p/22426c490066)\\n\u914d\u7f6e\u539f\u56e0\uff1a\u5728pyspark\u547d\u4ee4\u884c \u7ec3\u4e60\u6bd4\u8f83\u9ebb\u70e6\uff0c\u4e0d\u80fd\u81ea\u52a8\u8865\u5168\uff0c\u6d6a\u8d39\u65f6\u95f4\u3002Jupyter notebook \u662f\u6700\u7406\u60f3\u7684\uff0c\u4f46\u662f\u8fd8\u6ca1\u914d\u7f6e\u6210\u529f\u3002\\n\\n1.\u6253\u5f00pycharm\uff0c\u65b0\u5efa\u4e00\u4e2a\u5de5\u7a0b\\n\\n2.\u70b9\u51fb run --Edit Configuration..\\n![png](../img/spark/9.png)\\n\\n3.\u914d\u7f6e\\n\\n3.1 \u65b0\u5efa Python \uff0c\u8d77\u4e2a\u540d\\n\\n3.2 \u914d\u7f6escript\uff0c\u6307\u5411\u4f60\u8981\u5f15\u7528 spark \u7684\u90a3\u4e2a\u6587\u4ef6\\n\\n3.3 Enviroment variables\uff1a\\n![png](../img/spark/10.png)\\n\u53ef\u4ee5\u76f4\u63a5\u5728Enviroment variables\u4e0a\u8f93\u5165:\\nPYTHONUNBUFFERED=1;SPARK_HOME=/Users/flybird/Desktop/spark/spark-3.0.0-preview2-bin-hadoop2.7;PYTHONPATH=/Users/flybird/Desktop/spark/spark-3.0.0-preview2-bin-hadoop2.7/python;PYSPARK_PYTHON=/Users/flybird/opt/anaconda3/bin/python3\\n\\nPYSPARK_PYTHON; \u6307\u5411 \u4f60\u672c\u673a \u7684 python \u8def\u5f84, (\u53ef\u4ee5\u53bb\u7ec8\u7aef\u8f93\u5165which python \u6765\u627e\u5230\u8def\u5f84)\\n\\n\\nSPARK_HOME \uff1a\u6307\u5411 spark \u5b89\u88c5\u76ee\u5f55(\u5c31\u662fspark-3.0.0-preview2-bin-hadoop2.7\u7684\u7edd\u5bf9\u8def\u5f84)\\n\\nPYTHONPATH\uff1a\u6307\u5411 spark \u5b89\u88c5\u76ee\u5f55\u7684 Python \u6587\u4ef6\u5939(\u5c31\u662fspark-3.0.0-preview2-bin-hadoop2.7\u7684python\u6587\u4ef6\u5939\u7684\u7edd\u5bf9\u8def\u5f84)\\n\\n4 \u5b89\u88c5 py4j\\nsudo pip3 install py4j\\n\\n5.\u770b\u5230\u7f51\u4e0a\u5f88\u591a\u6559\u7a0b\uff0c\u4e00\u822c\u90fd\u53ea\u6267\u884c\u5230\u7b2c\u56db\u6b65\u5373\u53ef\uff0c\u4f46\u662f\u6211\u4ecd\u7136\u65e0\u6cd5\u5bfc\u5165 pyspark \u5305\uff0c\u8fd8\u9700\u8981\u4e0b\u9762\u7684\u6b65\u9aa4\uff1a\\n\\n\u9009\u62e9 File---\x3esetting---\x3e\u4f60\u7684project---\x3eproject structure\\n\u53f3\u4e0a\u89d2Add content root\u6dfb\u52a0\uff1apy4j-some-version.zip\u548cpyspark.zip\u7684\u8def\u5f84\uff08\u8fd9\u4e24\u4e2a\u6587\u4ef6\u90fd\u5728Spark\u4e2d\u7684python\u6587\u4ef6\u5939\u4e0b\uff09\\n![png](../img/spark/10.png)\\n\\n\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u53bb\u5230spark\u4e2d\u7684python\u6587\u4ef6\u5939(spark-3.0.0-preview2-bin-hadoop2.7/python),\u7136\u540e\u67e5\u627ezip!,\u7136\u540e\u770b\u5230\u9009\u62e9\u6dfb\u52a0\u5c31\u53ef\u4ee5\u4e86\\n\\n6 \u6d4b\u8bd5\u7a0b\u5e8f\\n\u7528\u4e4b\u524d\u7684\u4ee3\u7801\u518d\u6b21\u6d4b\u8bd5,\u4e00\u6837\u53ef\u4ee5\u4e86"},{"id":"/2020/4/05/tf_serving","metadata":{"permalink":"/blog/2020/4/05/tf_serving","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-05-tf_serving.md","source":"@site/blog/2020-4-05-tf_serving.md","title":"tf_serving\u90e8\u7f72+\u9047\u5230\u7684\u95ee\u9898","description":"\u53c2\u8003\u8fc7\u7684\u535a\u5ba2","date":"2020-04-05T00:00:00.000Z","formattedDate":"April 5, 2020","tags":[{"label":"docker","permalink":"/blog/tags/docker"},{"label":"tf_serving","permalink":"/blog/tags/tf-serving"},{"label":"model","permalink":"/blog/tags/model"}],"readingTime":11.09,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"tf_serving","title":"tf_serving\u90e8\u7f72+\u9047\u5230\u7684\u95ee\u9898","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["docker","tf_serving","model"]},"prevItem":{"title":"mac\u5b89\u88c5spark+jupyter+annocade+pycharm\u914d\u7f6e","permalink":"/blog/2020/4/11/\u5b89\u88c5spark"},"nextItem":{"title":"\u4f7f\u7528webscrapper\u722c\u53d6\u4fe1\u606f","permalink":"/blog/2020/4/04/webscrapper"}},"content":"[\u53c2\u8003\u8fc7\u7684\u535a\u5ba2](https://blog.csdn.net/u011734144/article/details/82107610?depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1&utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1)\\n\\n[Mac\u4e0bdocker\u4fdd\u5b58\u8def\u5f84](https://www.cnblogs.com/zhzhlong/p/9465571.html)\\n\\n\x3c!--truncate--\x3e\\n# tf_serving \u90e8\u7f72\\n## Step1: \u6a21\u578b\u6784\u5efa\u4e0e\u8bad\u7ec3\\n\u6211\u4eec\u901a\u8fc7\u6a21\u578b\u6784\u5efa\u4e0e\u8bad\u7ec3\u540e,\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u6a21\u578b(cnn_model.h5)\\n\\n### \u6a21\u578b\u7ed3\u6784\u6253\u5370\\n\\n```python\\nfrom tensorflow.keras.utils import plot_model\\nplot_model(model, show_shapes=True, show_layer_names=True)\\n```\\n\\n![png](../img/tf_serving/output_11_0.png)\\n\\n\\n\\n## Step2: \u6a21\u578b\u7684\u5bfc\u51fa\u4e0e\u68c0\u67e5\\n\\n### \u6a21\u578b\u5bfc\u51fa\\n\\n\\n```python\\nimport tensorflow as tf\\nimport shutil \\n\\nmodel = tf.keras.models.load_model(\'./cnn_model.h5\')\\n\\n#  \u6307\u5b9a\u8def\u5f84\\nif os.path.exists(\'./Models/CNN/1\'):\\n     shutil.rmtree(\'./Models/CNN/1\')\\nexport_path = \'./Models/CNN/1\'\\n\\n# \u5bfc\u51fatensorflow\u6a21\u578b\u4ee5\u4fbf\u90e8\u7f72\\ntf.saved_model.save(model,export_path)\\n```\\n\\n![png](../img/tf_serving/5.png) \\n\\n\\n\\n### \u6a21\u578b\u7684\u90e8\u7f72\u524d\u68c0\u67e5\u4e0e\u6d4b\u8bd5\\ntensorflow\u5b98\u65b9\u63d0\u4f9b\u4e86\u975e\u5e38\u597d\u7684\u4e00\u4e9b\u5de5\u5177\u7ed9\u5927\u5bb6\uff0c\u6bd4\u5982\u5728\u5b9e\u9645\u90e8\u7f72\u670d\u52a1\u4e4b\u524d\uff0c\u6211\u60f3\u5f3a\u8c03\u4e00\u4e0bTensorFlow\u7684SavedModel\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u8fd9\u5bf9\u4e8e\u5feb\u901f\u68c0\u67e5\u6211\u4eec\u6a21\u578b\u7684\u8f93\u5165\u548c\u8f93\u51fa\u89c4\u8303\u5f88\u6709\u7528\uff0c\u6211\u4eec\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u68c0\u67e5\u4e00\u4e0b\u6211\u4eec\u7684CNN\u6a21\u578b\uff1a\\n```shell\\n$ saved_model_cli show --dir ./Models/CNN/1 --all\\n```\\n\x3c!--truncate--\x3e\\n\u6211\u4eec\u4f1a\u770b\u5230\u4ee5\u4e0b\u8f93\u51fa\u4fe1\u606f:\\n```shell\\nMetaGraphDef with tag-set: \'serve\' contains the following SignatureDefs:\\n\\nsignature_def[\'__saved_model_init_op\']:\\n  The given SavedModel SignatureDef contains the following input(s):\\n  The given SavedModel SignatureDef contains the following output(s):\\n    outputs[\'__saved_model_init_op\'] tensor_info:\\n        dtype: DT_INVALID\\n        shape: unknown_rank\\n        name: NoOp\\n  Method name is: \\n\\nsignature_def[\'serving_default\']:\\n  The given SavedModel SignatureDef contains the following input(s):\\n    inputs[\'input_1\'] tensor_info:\\n        dtype: DT_FLOAT\\n        shape: (-1, 100)\\n        name: serving_default_input_1:0\\n  The given SavedModel SignatureDef contains the following output(s):\\n    outputs[\'dense\'] tensor_info:\\n        dtype: DT_FLOAT\\n        shape: (-1, 5)\\n        name: StatefulPartitionedCall:0\\n  Method name is: tensorflow/serving/predict\\n```\\n\\n\u6211\u4eec\u8fd8\u53ef\u4ee5\u968f\u673a\u9001\u4e00\u4e9b\u7b26\u5408\u8f93\u5165\u7ef4\u5ea6\u8981\u6c42\u7684\u6570\u636e\u7ed9\u6a21\u578b\uff0c\u770b\u770b\u8f93\u51fa\u7ed3\u679c\u7684\u5f62\u6001\u3002\\n```shell\\n$ saved_model_cli run --dir ./Models/CNN/1 --tag_set serve --signature_def serving_default --input_exp \'input_1=np.random.rand(1,100)\'\\n```\\n\x3c!--truncate--\x3e\\n\u5927\u5bb6\u5c06\u770b\u5230\u4ee5\u4e0b\u8f93\u51fa\uff1a\\n```shell\\nserve --signature_def serving_default --input_exp \'input_1=np.random.rand(1,100)\'\\n2019-06-13 16:33:46.095550: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\\nWARNING: Logging before flag parsing goes to stderr.\\nW0613 16:33:46.095993 140736529130432 deprecation.py:323] From /usr/local/lib/python3.6/site-packages/tensorflow/python/tools/saved_model_cli.py:339: load (from tensorflow.python.saved_model.loader_impl) is deprecated and will be removed in a future version.\\nInstructions for updating:\\nThis function will only be available through the v1 compatibility library as tf.compat.v1.saved_model.loader.load or tf.compat.v1.saved_model.load. There will be a new function for importing SavedModels in Tensorflow 2.0.\\nW0613 16:33:46.141968 140736529130432 deprecation.py:323] From /usr/local/lib/python3.6/site-packages/tensorflow/python/training/saver.py:1276: checkpoint_exists (from tensorflow.python.training.checkpoint_management) is deprecated and will be removed in a future version.\\nInstructions for updating:\\nUse standard file APIs to check for files with this prefix.\\nResult for output key dense:\\n[[0.14112209 0.22561029 0.2605021  0.22022876 0.15253687]]\\n```\\n\\n\u8fd9\u8868\u660e\u6211\u4eec\u968f\u673a\u8f93\u5165\u957f\u5ea6\u4e3a100\u7684\u6587\u672c\u5e8f\u5217(\u8bcdid)\u7ed9\u6a21\u578b\uff0c\u5f97\u5230\u4e86\u957f\u5ea6\u4e3a5\u7684\u6982\u7387\u5411\u91cf\uff0c\u5206\u522b\u8868\u793a5\u4e2a\u7c7b\u522b\u7684\u6982\u7387\u3002\u5230\u6b64\u4e3a\u6b62\uff0c\u6211\u4eec\u7684\u6a21\u578b\u4e00\u5207\u6b63\u5e38\u3002\\n\\n# \u6a21\u578b\u90e8\u7f72\u4e0e\u670d\u52a1\u6784\u5efa\u4ecb\u7ecd\\n\u6a21\u578b\u90e8\u7f72\u90e8\u5206\uff0c\u5f3a\u5927\u7684google\u751f\u6001\u4e0b\uff0c\u5df2\u7ecf\u6709\u5b8c\u6574\u7684\u90e8\u7f72\u65b9\u6848\uff0c\u90e8\u7f72\u5de5\u5177\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528google\u7684tensorflow-model-server\u3002\\n\\n### tensorflow-model-server\u5b89\u88c5(\u6700\u7b80\u5355\u5c31\u662f\u7528docker\u6765\u7528tf serving)\\n\u6211\u662f\u4f7f\u7528docker\u6765\u5b89\u88c5,\u65b9\u4fbf\u7b80\u5355\uff0c\\n\\n\u5982\u679c\u662fUbuntu\u73af\u5883\u53ef\u4ee5\u4f7f\u7528apt-get install\u5b89\u88c5\uff0c\u5176\u4ed6\u73af\u5883\u53ef\u4ee5\u4ece\u6e90\u7801\u7f16\u8bd1\uff0c\u5177\u4f53\u7684\u5185\u5bb9\u5927\u5bb6\u53ef\u4ee5\u53c2\u8003\uff1a\\n- [tensorflow\u5b98\u7f51\u5b89\u88c5\u6307\u5357](https://www.tensorflow.org/tfx/serving/setup)\\n- [Ubuntu\u5b89\u88c5\u6307\u5357](https://blog.51cto.com/aaronsa/2284396)\\n  \\n### \u5173\u4e8etensorflow serving\u4ecb\u7ecd\\n\u5927\u5bb6\u4e60\u60ef\u4f7f\u7528TensorFlow\u8fdb\u884c\u6a21\u578b\u7684\u8bad\u7ec3\u3001\u9a8c\u8bc1\u548c\u9884\u6d4b\uff0c\u4f46\u6a21\u578b\u5b8c\u5584\u4e4b\u540e\u7684\u751f\u4ea7\u4e0a\u7ebf\u6d41\u7a0b\uff0c\u5c31\u53d8\u5f97\u4e94\u82b1\u516b\u95e8\u4e86\u3002\u9488\u5bf9\u8fd9\u79cd\u60c5\u51b5Google\u63d0\u4f9b\u4e86TensorFlow Servering\uff0c\u53ef\u4ee5\u5c06\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u76f4\u63a5\u4e0a\u7ebf\u5e76\u63d0\u4f9b\u670d\u52a1\u3002\u65e9\u57282017\u5e74\u7684TensorFlow\u5f00\u53d1\u8005Summit\u4e0a\u5c31\u63d0\u51fa\u4e86TensorFlow Serving\u3002\\n \u4f46\u90a3\u65f6\u5019\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7684\u901a\u4fe1\u53ea\u652f\u6301gRPC\u3002\u5728\u5b9e\u9645\u7684\u751f\u4ea7\u73af\u5883\u4e2d\u6bd4\u8f83\u5e7f\u6cdb\u4f7f\u7528\u7684C/S\u901a\u4fe1\u624b\u6bb5\u662f\u57fa\u4e8eRESTfull API\u7684\uff0c\u5e78\u8fd0\u7684\u662f\u4eceTF1.8\u4ee5\u540e\uff0cTF Serving\u4e5f\u6b63\u5f0f\u652f\u6301RESTfull API\u901a\u4fe1\u65b9\u5f0f\u4e86\u3002\\n\\n#### \u670d\u52a1\u6846\u67b6\\n![img](../img/tf_serving/tf1.png)\\n\\nTF Serving\u670d\u52a1\u6846\u67b6\\n\\n\u57fa\u4e8eTF Serving\u7684\u6301\u7eed\u96c6\u6210\u6846\u67b6\u8fd8\u662f\u633a\u7b80\u660e\u7684\uff0c\u57fa\u672c\u5206\u4e09\u4e2a\u6b65\u9aa4\uff1a\\n\\n- \u6a21\u578b\u8bad\u7ec3\\n   \u8fd9\u662f\u5927\u5bb6\u6700\u719f\u6089\u7684\u90e8\u5206\uff0c\u4e3b\u8981\u5305\u62ec\u6570\u636e\u7684\u6536\u96c6\u548c\u6e05\u6d17\u3001\u6a21\u578b\u7684\u8bad\u7ec3\u3001\u8bc4\u6d4b\u548c\u4f18\u5316\uff1b\\n- \u6a21\u578b\u4e0a\u7ebf\\n   \u524d\u4e00\u4e2a\u6b65\u9aa4\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u5728TF Server\u4e2d\u4e0a\u7ebf\uff1b\\n- \u670d\u52a1\u4f7f\u7528\\n   \u5ba2\u6237\u7aef\u901a\u8fc7gRPC\u548cRESTfull API\u4e24\u79cd\u65b9\u5f0f\u540cTF Servering\u7aef\u8fdb\u884c\u901a\u4fe1\uff0c\u5e76\u83b7\u53d6\u670d\u52a1\uff1b\\n\\n#### TF Serving\u5de5\u4f5c\u6d41\u7a0b\\n![img](../img/tf_serving/tf2.png)\\n\\nTF Serving\u5de5\u4f5c\u6d41\u7a0b\\n\\nTF Serving\u7684\u5de5\u4f5c\u6d41\u7a0b\u4e3b\u8981\u5206\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a\\n\\n- Source\u4f1a\u9488\u5bf9\u9700\u8981\u8fdb\u884c\u52a0\u8f7d\u7684\u6a21\u578b\u521b\u5efa\u4e00\u4e2aLoader\uff0cLoader\u4e2d\u4f1a\u5305\u542b\u8981\u52a0\u8f7d\u6a21\u578b\u7684\u5168\u90e8\u4fe1\u606f\uff1b\\n- Source\u901a\u77e5Manager\u6709\u65b0\u7684\u6a21\u578b\u9700\u8981\u8fdb\u884c\u52a0\u8f7d\uff1b\\n- Manager\u901a\u8fc7\u7248\u672c\u7ba1\u7406\u7b56\u7565\uff08Version Policy\uff09\u6765\u786e\u5b9a\u54ea\u4e9b\u6a21\u578b\u9700\u8981\u88ab\u4e0b\u67b6\uff0c\u54ea\u4e9b\u6a21\u578b\u9700\u8981\u88ab\u52a0\u8f7d\uff1b\\n- Manger\u5728\u786e\u8ba4\u9700\u8981\u52a0\u8f7d\u7684\u6a21\u578b\u7b26\u5408\u52a0\u8f7d\u7b56\u7565\uff0c\u4fbf\u901a\u77e5Loader\u6765\u52a0\u8f7d\u6700\u65b0\u7684\u6a21\u578b\uff1b\\n- \u5ba2\u6237\u7aef\u50cf\u670d\u52a1\u7aef\u8bf7\u6c42\u6a21\u578b\u7ed3\u679c\u65f6\uff0c\u53ef\u4ee5\u6307\u5b9a\u6a21\u578b\u7684\u7248\u672c\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6700\u65b0\u6a21\u578b\u7684\u7ed3\u679c\uff1b\\n\\n#### \u7b80\u5355\u793a\u4f8b\\n\\nTF Serving\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7684\u901a\u4fe1\u65b9\u5f0f\u6709\u4e24\u79cd\uff08gRPC\u548cRESTfull API\uff09\\n\\n##### \u793a\u4f8b\uff08\u4e00\uff09\uff1aRESTfull API\u5f62\u5f0f\\n\\n- **1. \u51c6\u5907TF Serving\u7684Docker\u73af\u5883**\\n\\n\u76ee\u524dTF Serving\u6709Docker\u3001APT\uff08\u4e8c\u7ea7\u5236\u5b89\u88c5\uff09\u548c\u6e90\u7801\u7f16\u8bd1\u4e09\u79cd\u65b9\u5f0f\uff0c\u4f46\u8003\u8651\u5b9e\u9645\u7684\u751f\u4ea7\u73af\u5883\u9879\u76ee\u90e8\u7f72\u548c\u7b80\u5355\u6027\uff0c\u63a8\u8350\u4f7f\u7528Docker\u65b9\u5f0f\u3002\\n\\n```shell\\ndocker pull tensorflow/serving\\n```\\n\\n- **2. \u4e0b\u8f7d\u5b98\u65b9\u793a\u4f8b\u4ee3\u7801**\\n\\n\u793a\u4f8b\u4ee3\u7801\u4e2d\u5305\u542b\u5df2\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u548c\u4e0e\u670d\u52a1\u7aef\u8fdb\u884c\u901a\u4fe1\u7684\u5ba2\u6237\u7aef\uff08RESTfull API\u5f62\u5f0f\u4e0d\u9700\u8981\u4e13\u95e8\u7684\u5ba2\u6237\u7aef\uff09\\n\\n```shell\\nmkdir -p /tmp/tfserving\\ncd /tmp/tfserving\\ngit clone https://github.com/tensorflow/serving\\n```\\n\\n- **3. \u8fd0\u884cTF Serving**\\n\\n```shell\\ndocker run -p 8501:8501 \\\\\\n  --mount type=bind,\\\\\\n   source=/tmp/tfserving/serving/tensorflow_serving/servables/tensorflow/testdata/saved_model_half_plus_two_cpu,\\\\\\ntarget=/models/half_plus_two \\\\\\n-e MODEL_NAME=half_plus_two -t tensorflow/serving &\\n```\\n\\n\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8f83\u65e9\u7684docker\u7248\u672c\u6ca1\u6709\u201c--mount\u201d\u9009\u9879\uff0c\u6bd4\u5982Ubuntu16.04\u9ed8\u8ba4\u5b89\u88c5\u7684docker\u5c31\u6ca1\u6709\uff08\u6211\u7684\u73af\u5883\u662fUbuntu 18.04\uff09\u3002\\n\\n- **4.\u5ba2\u6237\u7aef\u9a8c\u8bc1**\\n\\n```shell\\ncurl -d \'{\\"instances\\": [1.0, 2.0, 5.0]}\' \\\\\\n  -X POST http://localhost:8501/v1/models/half_plus_two:predict \\n```\\n\\n\u8fd4\u56de\u7ed3\u679c\uff0c\\n\\n```shell\\n{ \\"predictions\\": [2.5, 3.0, 4.5] }\\n```\\n\\n##### \u793a\u4f8b\uff08\u4e8c\uff09\uff1agRPC\u5f62\u5f0f\\n\\n- **1. \u51c6\u5907TF Serving\u7684Docker\u73af\u5883**\\n\\n\u76ee\u524dTF Serving\u6709Docker\u3001APT\uff08\u4e8c\u7ea7\u5236\u5b89\u88c5\uff09\u548c\u6e90\u7801\u7f16\u8bd1\u4e09\u79cd\u65b9\u5f0f\uff0c\u4f46\u8003\u8651\u5b9e\u9645\u7684\u751f\u4ea7\u73af\u5883\u9879\u76ee\u90e8\u7f72\u548c\u7b80\u5355\u6027\uff0c\u63a8\u8350\u4f7f\u7528Docker\u65b9\u5f0f\u3002\\n\\n```shell\\ndocker pull tensorflow/serving\\n```\\n\\n- **2. \u4e0b\u8f7d\u5b98\u65b9\u793a\u4f8b\u4ee3\u7801**\\n\\n```shell\\nmkdir -p /tmp/tfserving\\ncd /tmp/tfserving\\ngit clone https://github.com/tensorflow/serving\\n```\\n\\n- **3. \u6a21\u578b\u7f16\u8bd1**\\n\\n```shell\\npython tensorflow_serving/example/mnist_saved_model.py models/mnist\\n```\\n\\n- **4. \u8fd0\u884cTF Serving**\\n\\n```shell\\ndocker run -p 8500:8500 \\\\\\n--mount type=bind,source=$(pwd)/models/mnist,target=/models/mnist \\\\\\n-e MODEL_NAME=mnist -t tensorflow/serving\\n```\\n\\n\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8f83\u65e9\u7684docker\u7248\u672c\u6ca1\u6709\u201c--mount\u201d\u9009\u9879\uff0c\u6bd4\u5982Ubuntu16.04\u9ed8\u8ba4\u5b89\u88c5\u7684docker\u5c31\u6ca1\u6709\uff08\u8fd9\u91cc\u7684\u73af\u5883\u662fUbuntu 18.04\uff09\u3002\\n\\n- **5.\u5ba2\u6237\u7aef\u9a8c\u8bc1**\\n\\n```shell\\npython tensorflow_serving/example/mnist_client.py --num_tests=1000 --server=127.0.0.1:8500\\n```\\n\\n\u8fd4\u56de\u7ed3\u679c\uff0c\\n\\n```shell\\nInference error rate: 11.13%\\n```\\n\\n\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u76f4\u63a5\u8fd0\u884cmnist_client.py\u4f1a\u51fa\u73b0\u627e\u4e0d\u5230\u201ctensorflow_serving\u201d\u7684\u95ee\u9898\uff0c\u9700\u8981\u624b\u52a8\u5b89\u88c5\uff0c\\n\\n```shell\\npip install tensorflow-serving-api\\n```\\n\\n#### \u8d44\u6599\u53c2\u8003\\nTF Serving\u5b98\u65b9\u6587\u6863\uff1ahttps://www.tensorflow.org/tfx/guide/serving\\n\u4e2a\u4eba\u7684\u9879\u76ee\u662f\u4f7f\u7528RESTfull API\u5f62\u5f0f,\u611f\u89c9\u7b80\u5355\u5f88\u591a,\u4e0d\u9700\u8981gRpc\u5f62\u5f0f\u90a3\u6837\u521b\u5efa\u5ba2\u6237\u7aef\u548c\u6a21\u578b\u7f16\u8bd1\\n\\n## Step3: \u5177\u4f53\u5b9e\u64cd, \u5b89\u88c5Docker\u7248\u7684tensorflow/serving\\n\u76ee\u524dTF Serving\u6709Docker\u3001APT\uff08\u4e8c\u7ea7\u5236\u5b89\u88c5\uff09\u548c\u6e90\u7801\u7f16\u8bd1\u4e09\u79cd\u65b9\u5f0f\uff0c\u6211\u4f7f\u7528Docker\u65b9\u5f0f\u3002\\n```python\\ndocker pull tensorflow/serving\\n```\\n\\n## Step4:\u6a21\u578b\u90e8\u7f72\\n### \u83b7\u53d6\u5f53\u524d\u7edd\u5bf9\u8def\u5f84\\n\\n```python\\nimport os\\n# \u83b7\u53d6\u5f53\u524d\u7edd\u5bf9\u8def\u5f84\\nMODEL_DIR = os.getcwd()+\\"/Models/RNN\\" #\u6307\u5b9a\u7edd\u5bf9\u8def\u5f84\\nos.environ[\\"MODEL_DIR\\"] = MODEL_DIR #\u8bbe\u7f6e\u5168\u5c40\u53d8\u91cf\\nprint(MODEL_DIR)  \u6253\u5370\u7edd\u5bf9\u8def\u5f84\\n\\n```\\n\\n\\n    /Volumes/Untitled/NLP\u9879\u76ee/docker\u90e8\u7f72/flask_news_classifier/Models/RNN\\n\\n\\n## Step5: \u7528Docker\u542f\u52a8tf serving\\n\\n### source\u8fd9\u91cc\u4e00\u5b9a\u8981\u5199\u7edd\u5bf9\u8def\u5f84\\n\\n###  target\u8fd9\u91cc\u8981\u5199/models/\u81ea\u5b9a\u4e49\u540d\u5b57(\u6bd4\u5982rnn_serving)\\n\\n### MODEL_NAME \u548ctarget\u7684\u81ea\u5b9a\u4e49\u540d\u5b57\u4e00\u6837\\n\\n\\n```bash\\n%%bash --bg ##\u540e\u53f0\u7ec8\u7aef\u8fd0\u884c\\ndocker run -p 8501:8501 --mount type=bind,source=\\"${MODEL_DIR}\\",target=/models/rnn_serving -e MODEL_NAME=rnn_serving -t tensorflow/serving & >server.log 2>&1\\n\\n# \u5199\u65e5\u8bb0\\n! tail server.log\\n\\n# \u5b89\u88c5 requests\u5305,\u7528\u6765\u63a5\u6536\u8bf7\u6c42\\n\\n! pip install -q requests\\n\\n```\\n\\n## Step6: \u68c0\u6d4b\u6a21\u578b\u662f\u5426\u90e8\u7f72\u5230docker\u4e0a,\u8fdb\u5165\u7ec8\u7aef\\n### \u9996\u5148\u8f93\u5165\u4e00\u4e0b\u547d\u4ee4,\u67e5\u770b\u8fd0\u884c\u7684\u5bb9\u5668\u540d\u5b57\u6216\u8005id\\n```\\ndocker ps\\n```\\n![png](../img/tf_serving/2.png)\\n\\n### \u7136\u540e\u8fdb\u5165\u8fd0\u884c\u7684\u5bb9\u5668,\u67e5\u770b\u5bb9\u5668\u7684models\\n```\\ndocker exec -it \u5bb9\u5668\u540d\u5b57\u6216\u8005\u5bb9\u5668id /bin/bash\\ndocker exec -it wonderful_meitner /bin/bash\\n```\\n```\\ncd models\\nls\\n```\\n![png](../img/tf_serving/3.png)\\n\\n## \u6211\u4eec\u770b\u5230\u6211\u4eec\u91cc\u9762\u6709\u6587\u4ef6\u5939rnn_serving,\u8fd9\u5c31\u662f\u6211\u4eec\u4e4b\u524dstep2tensorflow\u6a21\u578b\u5bfc\u51fa\u7684\u6587\u4ef6\\n\\n![png](../img/tf_serving/4.png)\\n\\n\\n## \u6d4b\u8bd5\u6570\u636e\u9884\u5904\u7406\\n\\n```python\\nfrom tensorflow.keras.preprocessing import sequence\\nimport random\\nfrom sklearn.model_selection import train_test_split\\nfrom tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\\nfrom tensorflow.keras.utils import to_categorical\\nfrom utils import *\\nimport json\\nimport numpy\\nimport requests\\nimport jieba\\n\\n# \u8def\u5f84\u7b49\u914d\u7f6e\\ndata_dir = \\"./processed_data\\"\\nvocab_file = \\"./vocab/vocab.txt\\"\\nvocab_size = 40000\\n\\n# \u795e\u7ecf\u7f51\u7edc\u914d\u7f6e\\nmax_features = 40001\\nmaxlen = 100\\nbatch_size = 256\\nembedding_dims = 50\\nepochs = 8\\n\\nprint(\'\u6570\u636e\u9884\u5904\u7406\u4e0e\u52a0\u8f7d\u6570\u636e...\')\\n# \u5982\u679c\u4e0d\u5b58\u5728\u8bcd\u6c47\u8868\uff0c\u91cd\u5efa\\nif not os.path.exists(vocab_file):  \\n    build_vocab(data_dir, vocab_file, vocab_size)\\n# \u83b7\u5f97 \u8bcd\u6c47/\u7c7b\u522b \u4e0eid\u6620\u5c04\u5b57\u5178\\ncategories, cat_to_id = read_category()\\nwords, word_to_id = read_vocab(vocab_file)\\n```\\n\\n    \u6570\u636e\u9884\u5904\u7406\u4e0e\u52a0\u8f7d\u6570\u636e...\\n\\n\\n###  \u5b57\u5178\u6570\u636e\u8f6c\u6362\u6210json\u683c\u5f0f,\u4f7f\u7528request\u8bf7\u6c42\\n\\n\\n```python\\ntext = \\"\u6768\u5e42\u597d\u6f02\u4eae,\u53d1\u751f\u539f\u5b50\u5f39\\"\\nprint(jieba.lcut(text))\\ntext_seg = encode_sentences([jieba.lcut(text)], word_to_id)\\ntext_input = sequence.pad_sequences(text_seg, maxlen=maxlen)\\n\\ndata = json.dumps({\\"signature_name\\": \\"serving_default\\",\\n                   \\"instances\\": text_input.reshape(1,100).tolist()})\\nheaders = {\\"content-type\\": \\"application/json\\"}\\njson_response = requests.post(\'http://localhost:8501/v1/models/rnn_serving:predict\',\\n                              data=data, headers=headers)\\n```\\n\\n    [\'\u6768\u5e42\', \'\u597d\', \'\u6f02\u4eae\', \',\', \'\u53d1\u751f\', \'\u539f\u5b50\u5f39\']\\n\\n\\n### \u5448\u73b0\u51fa\u6d4b\u8bd5\u6570\u636e\u7684\u7c7b\u522b\\n\\n\\n```python\\nprint(json.loads(json_response.text))\\n# print(json_response.text.split(\':\')[1].strip()[2:-9])\\n# print(json_response.text.split(\':\')[1].strip()[2:-9].split(\',\'))\\nproba = json_response.text.split(\':\')[1].strip()[2:-9].split(\',\')\\nproba\\nproba = [float(i) for i in proba]\\nprint(proba)\\n\\nimport numpy as np\\n#\\nnews_dict = {\'0\': \'car\', \'1\':\'entertainment\', \'2\':\'military\', \'3\':\'sports\', \'4\':\'technology\'}\\nprint(\'News Type:\',news_dict[str(np.argmax(proba))])\\n```\\n\\n    {\'predictions\': [[0.00735603366, 0.974295, 0.00240160106, 0.00155786274, 0.0143894823]]}\\n    [0.00735603366, 0.974295, 0.00240160106, 0.00155786274, 0.0143894823]\\n    News Type: entertainment\\n\\n# \u6210\u529f\u90e8\u7f72\u81ea\u5df1\u7684\u6a21\u578b\u5230tf_serving\u5566\\n## \u6700\u91cd\u8981\u662fstep5!!!step5!!!step5!!!"},{"id":"/2020/4/04/webscrapper","metadata":{"permalink":"/blog/2020/4/04/webscrapper","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-04-webscrapper.md","source":"@site/blog/2020-4-04-webscrapper.md","title":"\u4f7f\u7528webscrapper\u722c\u53d6\u4fe1\u606f","description":"step 1: \u6bd4\u5982\u5728\u4e00\u4e2a\u7f51\u7ad9\u641c\u7d22\u7eb8\u5c3f\u88e4, \u6211\u4eec\u5728google chrome\u7684\u66f4\u591a\u5de5\u5177\u4e2d\u70b9\u51fb\u5f00\u53d1\u8005\u5de5\u5177","date":"2020-04-04T00:00:00.000Z","formattedDate":"April 4, 2020","tags":[{"label":"web","permalink":"/blog/tags/web"},{"label":"scrapper","permalink":"/blog/tags/scrapper"},{"label":"shopping","permalink":"/blog/tags/shopping"}],"readingTime":1.3,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"webscrapper","title":"\u4f7f\u7528webscrapper\u722c\u53d6\u4fe1\u606f","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["web","scrapper","shopping"]},"prevItem":{"title":"tf_serving\u90e8\u7f72+\u9047\u5230\u7684\u95ee\u9898","permalink":"/blog/2020/4/05/tf_serving"},"nextItem":{"title":"\u7528faker\u6a21\u62df\u6570\u636e+\u968f\u673a\u79cd\u5b50","permalink":"/blog/2020/4/02/faker"}},"content":"\x3c!--truncate--\x3e\\n## step 1: \u6bd4\u5982\u5728\u4e00\u4e2a\u7f51\u7ad9\u641c\u7d22\u7eb8\u5c3f\u88e4, \u6211\u4eec\u5728google chrome\u7684\u66f4\u591a\u5de5\u5177\u4e2d\u70b9\u51fb\u5f00\u53d1\u8005\u5de5\u5177\\n\\n![png](../img/scrapper/1.png)\\n\\n## step 2: \\n### 1 .\u9009\u62e9web scrapper\\n### 2 .\u9009\u62e9create new sitemap\\n### 3 .\u9009\u62e9select, \u7136\u540e\u5728\u5546\u54c1\u9875\u9762\u9009\u62e9\u80fd\u591f\u8986\u76d6\u5546\u54c1\u6240\u6709\u4fe1\u606f\u7684\u4f4d\u7f6e,\u7136\u540e\u70b9\u51fbdone selecting, \u9009\u62e9mulitple\\n\\n## step3: \\ndone selecting\u540e,\u4f60\u53d1\u73b0selector\u7b2c\u56db\u4e2a\u5b57\u6bb5\u662flink_54224078139(\u8fd9\u4e2a\u662f\u7279\u70b9\u5546\u54c1\u7684\u7f16\u53f7),\u6211\u4eec\u53bb\u9664\u5b83,\u4f7f\u4ed6\u6cdb\u5316,\u53d8\u6210div.search_prolist_info\\n\\n\\n![png](../img/scrapper/2.png)\\n\\n## step4: \u70b9\u51fbsave selector,\u7528element preview\u67e5\u770b\u6548\u679c\u662f\u5426\u6240\u6709\u9875\u9762\u90fd\u5305\u542b\\n![png](../img/scrapper/3.png)\\n\\n\\n## step5: \u70b9\u51fbitem,\u7136\u540e\u521b\u5efa\u65b0\u7684selector\\n\u6d41\u7a0b\u57fa\u672c\u4e00\u6837,\u4f46\u662f\u4e0d\u9009\u62e9multiple,\u7136\u540e\u8bc4\u8bba\u5b57\u6bb5\u7684regex\u5199[0-9]+\\n\\n## step6: \u4fdd\u5b58selector\\n\\n### \u5982\u679c\u8981\u6015\u6240\u6709\u9875,\u53ef\u4ee5\u53bbSitemap\u4e0b\u9009\u62e9edit metadata\u6765\u8bbe\u7f6e\\n\\n![png](../img/scrapper/4.png)\\n\\n## step7: \u56de\u5230root,\u7136\u540e\u9009\u62e9sitemap\u7684\u4e0b\u62c9\u83dc\u5355\u7684Scrape\\n![png](../img/scrapper/5.png)\\n\\n## step8: \u70b9\u51fbstart scraping\\n![png](../img/scrapper/6.png)\\n\\n## step9: Sitemap\u9009\u62e9browse,\u53ef\u4ee5\u67e5\u770b\u6240\u6709data\\n![png](../img/scrapper/7.png)\\n\\n## \u9009\u62e9Sitemap,\u5bfc\u51facsv\u6587\u4ef6"},{"id":"/2020/4/02/faker","metadata":{"permalink":"/blog/2020/4/02/faker","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-02-faker.md","source":"@site/blog/2020-4-02-faker.md","title":"\u7528faker\u6a21\u62df\u6570\u636e+\u968f\u673a\u79cd\u5b50","description":"Pretty printing has been turned OFF","date":"2020-04-02T00:00:00.000Z","formattedDate":"April 2, 2020","tags":[{"label":"faker","permalink":"/blog/tags/faker"},{"label":"\u6c47\u4e30","permalink":"/blog/tags/\u6c47\u4e30"},{"label":"random seed","permalink":"/blog/tags/random-seed"}],"readingTime":0.895,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"faker","title":"\u7528faker\u6a21\u62df\u6570\u636e+\u968f\u673a\u79cd\u5b50","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["faker","\u6c47\u4e30","random seed"]},"prevItem":{"title":"\u4f7f\u7528webscrapper\u722c\u53d6\u4fe1\u606f","permalink":"/blog/2020/4/04/webscrapper"},"nextItem":{"title":"\u8f7b\u677e\u4e0a\u4f20\u8d85\u8fc7100M\u7684\u6587\u4ef6\u81f3GitHub","permalink":"/blog/2020/4/02/git_big_file copy"}},"content":"\x3c!--truncate--\x3e\\n\\n```python\\n%config ZMQInteractiveShell.ast_node_interactivity=\'all\' \\n%pprint\\n```\\n\\n    Pretty printing has been turned OFF\\n\\n\\n## \u5bfc\u5165\u5de5\u5177\u5305\\n\\n\\n```python\\nimport pandas as pd\\nfrom faker import Faker\\n```\\n\\n## \u521b\u5efa\u5b9e\u4f8b,\u8bbe\u7f6e\u672c\u5730\u5316\\n\\n```python\\nfake = Faker(\'zh_CN\')\\n```\\n\\n## \u521b\u5efa\u6a21\u62df\u4e2a\u4eba\u6570\u636e\u51fd\u6570,\u8bbe\u5b9a\u968f\u673a\u79cd\u5b50\\n\\n\\n```python\\ndef generate_user(i):\\n    fake.random.seed(i)\\n    return dict(name=fake.name(),password=fake.password(length=10),company=fake.company(),job=fake.job(),birthday=fake.date_of_birth(minimum_age=0, maximum_age=120),\\n                telephone=fake.phone_number(),\\n                address=fake.address())\\n```\\n\\n## \u751f\u6210\u5ba2\u6237\u6a21\u62df\u6570\u636e\u5217\u8868, \u7528dataframe\u5448\u73b0\\n\\n```python\\nusers = []\\nfor i in range(5):\\n    users.append(generate_user(i))\\ndf = pd.DataFrame(users)\\ndf\\n```\\n![png](../img/faker/1.png)\\n\\n### \u9a8c\u8bc1\u968f\u673a\u79cd\u5b50\u8bbe\u5b9a\u662f\u5426\u6210\u529f\\n```python\\nusers = []\\nfor i in range(8):\\n    users.append(generate_user(i))\\ndf = pd.DataFrame(users)\\ndf\\n```\\n![png](../img/faker/2.png)\\n\\n## \u5bfc\u51fa\u6570\u636e,\u751f\u6210csv\u6587\u4ef6\\n\\n```python\\ndf.to_csv(\'./fakedata.csv\')\\n```\\n# \u67e5\u770b\u535a\u5ba2\u8d44\u6599\\n\\n## \u8d44\u6599\u7d22\u5f15\\n\\n1.  [\u7528faker\u6a21\u62df\u6570\u636e](https://blog.csdn.net/u011054333/article/details/84203878)\\n\\n2.  [faker\u5b98\u7f51](https://faker.readthedocs.io/en/master/locales/zh_CN.html)\\n\\n3.  [\u6807\u51c6provides](https://faker.readthedocs.io/en/master/providers.html)\\n\\n4.  [\u7b2c\u4e09\u65b9provides](https://faker.readthedocs.io/en/master/communityproviders.html)\\n\\n\\n```python\\n\\n```"},{"id":"/2020/4/02/git_big_file copy","metadata":{"permalink":"/blog/2020/4/02/git_big_file copy","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-4-02-git_big_file copy.md","source":"@site/blog/2020-4-02-git_big_file copy.md","title":"\u8f7b\u677e\u4e0a\u4f20\u8d85\u8fc7100M\u7684\u6587\u4ef6\u81f3GitHub","description":"GitHub\u6709\u4e00\u4e2a\u9650\u5236\uff0c\u4e0d\u80fd\u4e0a\u4f20\u8d85\u8fc7100M\u7684\u6587\u4ef6\u3002\u60f3\u8981\u4e0a\u4f20\u8d85\u8fc7100M\u7684\u6587\u4ef6\uff0c\u5c31\u9700\u8981\u501f\u52a9Git LFS","date":"2020-04-02T00:00:00.000Z","formattedDate":"April 2, 2020","tags":[{"label":"git","permalink":"/blog/tags/git"},{"label":"lfs","permalink":"/blog/tags/lfs"},{"label":"github","permalink":"/blog/tags/github"}],"readingTime":1.195,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"git_big_file","title":"\u8f7b\u677e\u4e0a\u4f20\u8d85\u8fc7100M\u7684\u6587\u4ef6\u81f3GitHub","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["git","lfs","github"]},"prevItem":{"title":"\u7528faker\u6a21\u62df\u6570\u636e+\u968f\u673a\u79cd\u5b50","permalink":"/blog/2020/4/02/faker"},"nextItem":{"title":"\u5feb\u901f\u6309\u7167\u5de5\u5177\u5305","permalink":"/blog/2020/3/31/douban"}},"content":"GitHub\u6709\u4e00\u4e2a\u9650\u5236\uff0c\u4e0d\u80fd\u4e0a\u4f20\u8d85\u8fc7100M\u7684\u6587\u4ef6\u3002\u60f3\u8981\u4e0a\u4f20\u8d85\u8fc7100M\u7684\u6587\u4ef6\uff0c\u5c31\u9700\u8981\u501f\u52a9Git LFS\\n\x3c!--truncate--\x3e\\n\\n## step1: \u5b89\u88c5LFS,\u6267\u884c\u547d\u4ee4\\n```python\\nbrew install git-lfs\\n```\\n\\n## step2: \u8fdb\u5165\u4ed3\u5e93\u76ee\u5f55,\u6267\u884c\u547d\u4ee4\\n\\n```python\\ngit lfs track \\"file\\"\\ngit add .gitattributes\\ngit commit -m \\"submit file\\"\\ngit push -u origin master \\n```\\nfile\u662f\u8981\u4e0a\u4f20\u7684\u6587\u4ef6,\u4e00\u822c\u6267\u884c\u5b8cstep2\u540e,\u4f1a\u751f\u6210\\".gitattributes\\"\u6587\u4ef6\uff0c\u6587\u4ef6\u5185\u8bb0\u5f55\u4e86\u6211\u4eec\u8981\u4e0a\u4f20\u6587\u4ef6\u7684\u4fe1\u606f\u3002\u53ea\u6709\u5148\u628a\\".gitattributes\\"\u4f20\u4e0a\u53bb\uff0c\u624d\u53ef\u4ee5\u4e0a\u4f20\u5927\u6587\u4ef6\u3002\\n\\n## step3: \u4e0a\u4f20\u5927\u6587\u4ef6\\n\\n```python\\ngit add file\\ngit commit -m \\"add file\\"\\ngit push -u origin master\\n```\\n## \u5b9e\u6218demo\u5982\u4e0b:\\n### \u5207\u6362\u5230\u4ed3\u5e93\u76ee\u5f55,\u662fgit status\u67e5\u770b\u72b6\u6001\\n![png](../img/git/1.png)\\n### \u6267\u884c\u521a\u624d\u7684\u6240\u6709\u547d\u4ee4\\n![png](../img/git/2.png)\\n\u6211\u4eec\u53d1\u73b0\u4e0a\u4f20\u5931\u8d25,\u662f\u56e0\u4e3aconnection\u5931\u8d25\u4e86\\n\\n### \u6211\u4eec\u5c1d\u8bd5\u8bbe\u7f6e\u5168\u7403\u53d8\u91cf\\n```python\\ngit config --global user.name\\"name\\"\\n```\\n![png](../img/git/3.png)\\n\\n### \u91cd\u65b0\u6267\u884cpush\u547d\u4ee4,\u6700\u540e\u4e0a\u4f20\u6210\u529f\u5566\\n```python\\ngit push -u origin master\\n```"},{"id":"/2020/3/31/douban","metadata":{"permalink":"/blog/2020/3/31/douban","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-3-31-douban.md","source":"@site/blog/2020-3-31-douban.md","title":"\u5feb\u901f\u6309\u7167\u5de5\u5177\u5305","description":"\u5b89\u88c5google-cloud-bigquery and google-cloud-bigquery-storage packages.","date":"2020-03-31T00:00:00.000Z","formattedDate":"March 31, 2020","tags":[{"label":"python","permalink":"/blog/tags/python"},{"label":"hello","permalink":"/blog/tags/hello"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"},{"label":"google cloud","permalink":"/blog/tags/google-cloud"},{"label":"docker","permalink":"/blog/tags/docker"}],"readingTime":0.29,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI engine @ Facebook","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"douban","title":"\u5feb\u901f\u6309\u7167\u5de5\u5177\u5305","author":"\u62db\u6653\u8d24","author_title":"AI engine @ Facebook","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["python","hello","docusaurus","google cloud","docker"]},"prevItem":{"title":"\u8f7b\u677e\u4e0a\u4f20\u8d85\u8fc7100M\u7684\u6587\u4ef6\u81f3GitHub","permalink":"/blog/2020/4/02/git_big_file copy"},"nextItem":{"title":"Install the BigQuery Python client library version 1.9.0 or higher and the BigQuery Storage API Python client library.","permalink":"/blog/2020/3/30/BigQuery Storage API"}},"content":"\u5b89\u88c5google-cloud-bigquery and google-cloud-bigquery-storage packages.\\n\u9700\u8981\u8ba4\u8bc1\\n\x3c!--truncate--\x3e\\n## step1 \u5b89\u88c5\u5305\u5f88\u591a\u65f6\u5019\u5f88\u6162\u6bd4\u5982\u6267\u884c\u4e00\u4e0b\u547d\u4ee4\\n``` \\npip install --upgrade google-cloud-bigquery[bqstorage,pandas] \\n```\\n## step2 \u5728\u547d\u4ee4\u540e\u9762\u52a0\u4e0a\\n``` \\npip install --upgrade google-cloud-bigquery[bqstorage,pandas] -i https://pypi.douban.com/simple\\n```\\n\\n\u4e0b\u8f7d\u77ac\u95f4\u5feb\u5f88\u591a"},{"id":"/2020/3/30/BigQuery Storage API","metadata":{"permalink":"/blog/2020/3/30/BigQuery Storage API","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-3-30-BigQuery Storage API.md","source":"@site/blog/2020-3-30-BigQuery Storage API.md","title":"Install the BigQuery Python client library version 1.9.0 or higher and the BigQuery Storage API Python client library.","description":"\u5b89\u88c5google-cloud-bigquery and google-cloud-bigquery-storage packages.","date":"2020-03-30T00:00:00.000Z","formattedDate":"March 30, 2020","tags":[{"label":"python","permalink":"/blog/tags/python"},{"label":"hello","permalink":"/blog/tags/hello"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"},{"label":"google cloud","permalink":"/blog/tags/google-cloud"},{"label":"docker","permalink":"/blog/tags/docker"}],"readingTime":0.42,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI engine @ Facebook","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"BigQueryStorageAPI","title":"Install the BigQuery Python client library version 1.9.0 or higher and the BigQuery Storage API Python client library.","author":"\u62db\u6653\u8d24","author_title":"AI engine @ Facebook","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["python","hello","docusaurus","google cloud","docker"]},"prevItem":{"title":"\u5feb\u901f\u6309\u7167\u5de5\u5177\u5305","permalink":"/blog/2020/3/31/douban"},"nextItem":{"title":"\u672c\u5730\u8fde\u63a5google cloud shell","permalink":"/blog/2020/3/29/ssh_gcs"}},"content":"\u5b89\u88c5google-cloud-bigquery and google-cloud-bigquery-storage packages.\\n\u9700\u8981\u8ba4\u8bc1\\n\x3c!--truncate--\x3e\\n## step1 \u4e00\u822c\u65b9\u6cd5\u662f\u590d\u5236\u4ee5\u4e0b\u547d\u4ee4\u5728mac os\u7ec8\u7aef\u6267\u884c\\n``` \\npip install --upgrade google-cloud-bigquery[bqstorage,pandas]\\n```\\n## step2 \u6211\u4eec\u53cd\u5411step1\u64cd\u4f5c,\u5f80\u5f80\u4e0d\u6210\u529f\u4f1a\u51fa\u73b02\\n![png](../img/BQ_API/2.png)\\n\\n## step3 \u6211\u4eec\u5728\u547d\u4ee4\u884c\u540e\u9762\u52a0\u4e0a--user\\n``` \\npip install --upgrade google-cloud-bigquery[bqstorage,pandas] --user\\n```\\n![png](../img/BQ_API/1.png)\\n\\n\u901a\u8fc7\u64cd\u4f5c\u5c31\u6210\u529f\u4e86"},{"id":"/2020/3/29/ssh_gcs","metadata":{"permalink":"/blog/2020/3/29/ssh_gcs","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-3-29-ssh_gcs.md","source":"@site/blog/2020-3-29-ssh_gcs.md","title":"\u672c\u5730\u8fde\u63a5google cloud shell","description":"google cloud shell \u7ecf\u5e38\u65ad\u7ebf,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u7528\u672c\u5730ssh\u8fde\u63a5google cloud shell","date":"2020-03-29T00:00:00.000Z","formattedDate":"March 29, 2020","tags":[{"label":"python","permalink":"/blog/tags/python"},{"label":"hello","permalink":"/blog/tags/hello"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"},{"label":"google cloud","permalink":"/blog/tags/google-cloud"},{"label":"docker","permalink":"/blog/tags/docker"}],"readingTime":1.025,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI engine @ Facebook","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"ssh_gcs","title":"\u672c\u5730\u8fde\u63a5google cloud shell","author":"\u62db\u6653\u8d24","author_title":"AI engine @ Facebook","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["python","hello","docusaurus","google cloud","docker"]},"prevItem":{"title":"Install the BigQuery Python client library version 1.9.0 or higher and the BigQuery Storage API Python client library.","permalink":"/blog/2020/3/30/BigQuery Storage API"},"nextItem":{"title":"App Engine \u4f7f\u7528\u5feb\u901f\u5165\u95e8","permalink":"/blog/2020/3/28/App Engine"}},"content":"google cloud shell \u7ecf\u5e38\u65ad\u7ebf,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u7528\u672c\u5730ssh\u8fde\u63a5google cloud shell\\n## step1 \\n``` \\ngcloud alpha cloud-shell ssh\\n```\\n\x3c!--truncate--\x3e\\n![png](../img/ssh/1.png)\\n\\n## step2 \u6309\u7167\u7cfb\u7edf\u8981\u6c42\u6309\u7167\u5bc6\u94a5\\n![png](../img/ssh/2.png)\\n\\n## step3 \u8fde\u63a5\u6210\u529f\\n![png](../img/ssh/3.png)\\n\\n## step4 \u5982\u679c\u8fde\u63a5\u5931\u8d25,\u53ef\u80fd\u7684\u539f\u56e0\u662fgcloud\u7684\u8bbe\u7f6e\\n1 \u6211\u4eec\u53ef\u4ee5\u91cd\u65b0\u5b89\u88c5SDK\\n2 \u5bf9gcloud \u521d\u59cb\u5316, \u91cd\u65b0\u8bbe\u7f6eproject, account\\n3 \u91cd\u65b0\u8d70step1\\n\\n\u5177\u4f53:\\n```\\n./google-cloud-sdk/install.sh #\u91cd\u65b0\u5b89\u88c5SKD\u540e,\u91cd\u65b0\u5f00\u542f\u7ec8\u7aef\\n```\\n\\n```\\ngcloud init \u521d\u59cb\u5316 SDK\\n```\\n```\\nTo continue, you must log in. Would you like to log in (Y/n)? Y\\n\\nPick cloud project to use:\\n     [1] [my-project-1]\\n     [2] [my-project-2]\\n     ...\\n     Please enter your numeric choice:\\n\\nWhich compute zone would you like to use as project default?\\n     [1] [asia-east1-a]\\n     [2] [asia-east1-b]\\n     ...\\n     [14] Do not use default zone\\n     Please enter your numeric choice:\\n\\ngcloud has now been configured!\\n    You can use [gcloud config] to change more gcloud settings.\\n\\n    Your active configuration is: [default]\\n\\ngcloud config set accessibility/screen_reader true\\n```"},{"id":"/2020/3/28/App Engine","metadata":{"permalink":"/blog/2020/3/28/App Engine","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-3-28-App Engine.md","source":"@site/blog/2020-3-28-App Engine.md","title":"App Engine \u4f7f\u7528\u5feb\u901f\u5165\u95e8","description":"step1: \u521b\u5efa\u81ea\u5df1\u7684\u72ec\u7acb\u9879\u76ee","date":"2020-03-28T00:00:00.000Z","formattedDate":"March 28, 2020","tags":[{"label":"python","permalink":"/blog/tags/python"},{"label":"hello","permalink":"/blog/tags/hello"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"},{"label":"google cloud","permalink":"/blog/tags/google-cloud"},{"label":"docker","permalink":"/blog/tags/docker"}],"readingTime":0.74,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI engine @ Facebook","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"App","title":"App Engine \u4f7f\u7528\u5feb\u901f\u5165\u95e8","author":"\u62db\u6653\u8d24","author_title":"AI engine @ Facebook","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["python","hello","docusaurus","google cloud","docker"]},"prevItem":{"title":"\u672c\u5730\u8fde\u63a5google cloud shell","permalink":"/blog/2020/3/29/ssh_gcs"},"nextItem":{"title":"mysql\u57fa\u672c\u547d\u4ee4","permalink":"/blog/2020/3/28/mysql"}},"content":"## step1: \u521b\u5efa\u81ea\u5df1\u7684\u72ec\u7acb\u9879\u76ee\\n\\n![png](../img/appengine/1.png)\\n\x3c!--truncate--\x3e\\n## step2: \u4f7f\u7528App Engine\\n![png](../img/appengine/2.png)\\n\\n## step3: \u4f7f\u7528App Engine\u7684\u4e24\u4e2a\u91cd\u8981\u547d\u4ee4\\n```\\ngcloud init \u521d\u59cb\u5316SDK\\ngcloud app deploy \u90e8\u7f72\u5230App Engine\\n```\\n![png](../img/appengine/3.png)\\n\\n## step4: \u6309\u7167\u9700\u8981, \u5f00\u542fAPI \\n![png](../img/appengine/4.png)\\n\\n## step5:\u672c\u5730\u7ec8\u7aef\u64cd\u4f5c\u767b\u5f55\u8d26\u53f7,\u8bbe\u7f6e\u9ed8\u8ba4\u9879\u76ee\\n![png](../img/appengine/5.png)\\n\\n![png](../img/appengine/6.png)\\n\\n![png](../img/appengine/7.png)\\n\\n## step6: \u4e0b\u8f7d\u9879\u76ee/\u6216\u8005\u672c\u5730\u9879\u76ee\\n![png](../img/appengine/8.png)\\n\\n## step7: \u4f7f\u7528step3\u7684\u547d\u4ee4\u90e8\u7f72, \u70b9\u51fb\u5f97\u5230\u7684\u94fe\u63a5\\n```\\ngcloud app deploy \u90e8\u7f72\\ngcloud app browse \u67e5\u770b\u6548\u679c\\n```\\n![png](../img/appengine/13.png)\\n\\n![png](../img/appengine/9.png)\\n\\n## \u5907\u6ce8: \u90e8\u7f72\u5230app engine\u7684\u51e0\u4e2a\u91cd\u8981\u6587\u4ef6\\n1 app.yaml\\n\\n2 requirements.text\\n\\n3 main.py\\n\\n\\n![png](../img/appengine/10.png)\\n![png](../img/appengine/11.png)\\n![png](../img/appengine/12.png)"},{"id":"/2020/3/28/mysql","metadata":{"permalink":"/blog/2020/3/28/mysql","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-3-28-mysql.md","source":"@site/blog/2020-3-28-mysql.md","title":"mysql\u57fa\u672c\u547d\u4ee4","description":"\u6570\u636e\u5e93\u64cd\u4f5c","date":"2020-03-28T00:00:00.000Z","formattedDate":"March 28, 2020","tags":[{"label":"facebook","permalink":"/blog/tags/facebook"},{"label":"hello","permalink":"/blog/tags/hello"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"},{"label":"google cloud","permalink":"/blog/tags/google-cloud"},{"label":"docker","permalink":"/blog/tags/docker"}],"readingTime":6.61,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI engine @ Facebook","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"mysql","title":"mysql\u57fa\u672c\u547d\u4ee4","author":"\u62db\u6653\u8d24","author_title":"AI engine @ Facebook","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["facebook","hello","docusaurus","google cloud","docker"]},"prevItem":{"title":"App Engine \u4f7f\u7528\u5feb\u901f\u5165\u95e8","permalink":"/blog/2020/3/28/App Engine"},"nextItem":{"title":"python\u811a\u672c\u57fa\u7840(1)-python\u4e2dos\u7684\u5e38\u7528\u65b9\u6cd5","permalink":"/blog/2020/3/28/python"}},"content":"\u6570\u636e\u5e93\u64cd\u4f5c\\n\u8fdb\u5165\u6570\u636e\u5e93 \\n\\n\u65b9\u5f0f1 mysql -u\u7528\u6237\u540d -p \u5bc6\u7801 --------\u76f4\u63a5\u8f93\u5165\u5bc6\u7801\uff0c\u7f3a\u70b9\uff0c\u4f1a\u66b4\u9732\u81ea\u5df1\u7684\u5bc6\u7801\u54e6\ud83d\ude1d\\n\\n\u65b9\u5f0f2 mysql -u\u7528\u6237\u540d -p \u56de\u8f66\u540e\u8f93\u5165\u5bc6\u7801\\n\\n![png](../img/mysql/1.png)\u3000\u3000\\n\x3c!--truncate--\x3e\\n\u3000\u3000\u3000\u3000\\n\u4e3b\u8981\u5185\u5bb9\uff1a\u67e5\u8be2\\n1\u3001\u67e5\u8be2\u5f53\u524d\u6240\u6709\u7684\u6570\u636e\u5e93 show databases;\\n\\n![png](../img/mysql/2.png)\\n\\n2\u3001\u4f7f\u7528\u6570\u636e\u5e93 use \u6570\u636e\u5e93\u540d\u5b57;\\n\\n3\u3001\u67e5\u770b\u5f53\u524d\u6570\u636e\u5e93\u7248\u672c select version();\\n\\n![png](../img/mysql/3.png)\\n\\n4\u3001 \u521b\u5efa\u6570\u636e\u5e93 create database \u6570\u636e\u5e93\u540d\uff1b\\n\u3000create database \u6570\u636e\u5e93\u540d charset = utf8\uff1b\\n![png](../img/mysql/4.png)\\n\\n5\u3001\u67e5\u770b\u5f53\u524d\u4f7f\u7528\u6570\u636e\u5e93 select database();\\n\\n![png](../img/mysql/5.png)\\n\\n6 \u67e5\u770b\u521b\u5efa\u6570\u636e\u5e93 show create database \u6570\u636e\u5e93\u540d\u79f0;\\n\\n![png](../img/mysql/6.png)\\n\\n7\u3001\u5220\u9664\u6570\u636e\u5e93 drop database \u6570\u636e\u5e93\u540d\u79f0;\\n\\n![png](../img/mysql/7.png)\\n \\n\u6570\u636e\u8868\u7684\u64cd\u4f5c\\n\\n1\u3001\u67e5\u770b\u5f53\u524d\u6570\u636e\u5e93\u6240\u6709\u8868 show tables;\\n2\u3001\u521b\u5efa\u8868 creat table \u8868\u540d\uff08\u5b57\u6bb5 \u7c7b\u578b \u7ea6\u675f[\u5b57\u6bb5 \u7c7b\u578b \u7ea6\u675f]);\\n3\u3001\u67e5\u770b\u8868\u7ed3\u6784 desc \u8868\u540d\uff1b\\n4\u3001\u67e5\u770b\u521b\u5efa\u8868\u7684\u8bed\u53e5 show create table \u8868\u540d\uff1b\\n5\u3001\u67e5\u770b\u8868\u6570\u636e select * from \u8868\u540d\uff1b\\n6\u3001\u6dfb\u52a0\u8868\u7684\u5b57\u6bb5 alter table \u8868\u540d add \u5b57\u6bb5\u540d \u7c7b\u578b;\\n7\u3001\u4fee\u6539\u8868\u7ed3\u6784\u5b57\u6bb5\u7c7b\u578b alter table \u8868\u540d modify \u5b57\u6bb5 \u76ee\u6807\u7c7b\u578b\\n8\u3001\u4fee\u6539\u8868\u7684\u5b57\u6bb5\u91cd\u547d\u540d\u7248 alter table \u8868\u540d chang \u5b57\u6bb5\u539f\u540d \u5b57\u6bb5\u65b0\u540d \u76ee\u6807\u7c7b\u578b \u7ea6\u675f;\\n9\u3001\u5220\u9664\u8868\u5b57\u6bb5 alter table \u8868\u540d drop \u5b57\u6bb5;\\n10\u3001\u5220\u9664\u8868 drop table \u8868\u540d;\\n\\n \\n \\n\u8868\u5185\u6570\u636e\u64cd\u4f5c\\n\\n\u589e\uff1a\\n\\n1\u3001\u6dfb\u52a0\u6570\u636e ---\u63d2\u5165\u6570\u636e insert into \u8868\u540d values(\u9700\u8981\u63d2\u5165\u7684\u5185\u5bb9)\uff1b\\n\u53ef\u4ee5\u5206\u6761\u63d2\u5165\uff0c\u53ef\u4ee5\u4e00\u6b21\u63d2\u5165\u591a\u6761\uff0c\u6bcf\u4e00\u6761\u90fd\u662f\u5b8c\u6574()\\n2\u3001\u6dfb\u52a0\u6570\u636e ----\u90e8\u5206\u63d2\u5165 insert into \u8868\u540d(\u5b57\u6bb51\uff0c\u5b57\u6bb52...) values (\u503c1\uff0c\u503c2,...)\\n\u53ef\u4ee5\u5206\u6761\u63d2\u5165\uff0c\u53ef\u4ee5\u4e00\u6b21\u63d2\u5165\u591a\u6761\uff0c\u6bcf\u4e00\u6761\u90fd\u662f\u5b8c\u6574()\\n\u6539\uff1a\\n1\u3001\u6539\u8868\u91cc\u67d0\u5b57\u6bb5\u91cc\u7684\u503c update \u8868\u540d set \u5b57\u6bb5(\u5217) = \u503c (\u6709\u65f6\u5019\u62a5\u9519\u8981\u52a0\\"\\") \u9ed8\u8ba4\u6539\u6240\u6709\u4eba\u672c\u5b57\u6bb5\u7684\u5185\u5bb9\\nupdate \u8868\u540d set \u5b57\u6bb5 = \u503c where \u6761\u4ef6 \u6539\u7b26\u5408\u6761\u4ef6\u7684\u5b57\u6bb5\u5185\u5bb9\\n2\u3001update \u548c alter \u7684\u533a\u522b alter \u662f\u4fee\u6539\u8868\u7ed3\u6784(\u6dfb\u52a0\u5b57\u6bb5\uff0c\u5220\u5b57\u6bb5\uff0c\u4fee\u6539\u5b57\u6bb5\u540d\u5b57) update \u4fee\u6539\u8868\u91cc\u7684\u6570\u636e\\n \\n\u67e5\uff1a\\n\\n1\u3001\u67e5\u770b\u8868\u6570\u636e select * from \u8868\u540d\uff1b\\n2\u3001\u7ed9\u5b9a\u6761\u4ef6\u7684\u67e5\u8be2 select * from \u8868\u540d where \u6761\u4ef6;\\n3\u3001\u67e5\u8be2\u6307\u5b9a\u5b57\u6bb5 select \u5b57\u6bb5\u540d1,\u5b57\u6bb5\u540d2 from \u8868\u540d\uff1b\\n\u5b57\u6bb5\u987a\u5e8f\u5f71\u54cd\u663e\u793a\u987a\u5e8f\\nselect \u5b57\u6bb51 as \u522b\u540d1,\u5b57\u6bb52 as \u522b\u540d2 from \u8868\u540d;\\nselect \u8868\u540d.\u5b57\u6bb51,\u8868\u540d.\u5b57\u6bb52 from \u8868\u540d;\\nselcect \u522b\u540d.\u5b57\u6bb51,\u522b\u540d.\u5b57\u6bb5 from \u8868\u540d as \u522b\u540d;\\n4\u3001\u53ef\u4ee5\u4f7f\u7528as\u6307\u5b9a\u8868or\u5217\u540d select \u5b57\u6bb51 as\u6307\u5b9a\u540d1,\u5b57\u6bb52 as \u6307\u5b9a\u540d2 from \u8868\u540d as \u6307\u5b9a\u8868\u540d;\\n5\u3001\u6d88\u9664\u91cd\u590d\u884c select distinct \u5b57\u6bb5\u540d from \u8868\u540d;\\n6\u3001\u6761\u4ef6\u67e5\u8be2\\n6.1 \u6bd4\u8f83\u8fd0\u7b97\u7b26 select * from \u8868\u540d where \u6761\u4ef6\u8bed\u53e5\\n\u3000\u3000<\\n\u3000\u3000>\\n\u3000\u3000=\\n\u3000\u3000<=\\n>=\\n!= -----\u4e0d\u7b49\u4e8e\\n6.2 \u903b\u8f91\u8fd0\u7b97\u7b26 select * from \u8868\u540d where \u6761\u4ef61 and \u6761\u4ef62;\\nselect * from \u8868\u540d where \u6761\u4ef61 or \u6761\u4ef62\uff1b\\nselect * from \u8868\u540d where not \u6761\u4ef6\uff1b------ \u6761\u4ef6\u53ef\u4ee5\u662f\u4e00\u4e2a\u6216\u591a\u4e2a\\n6.3 \u6a21\u7cca\u67e5\u8be2\\n6.3.1like select * from \u8868\u540d where \u5b57\u6bb5 like \u201c\u201d -----\u4e00\u822c\u67e5\u8be2\u5b57\u7b26\u4e32\\n%\u66ff\u6362\u4efb\u610f\u591a\u4e2a\u5b57\u7b26\\n_\u66ff\u6362\u4e00\u4e2a\u5b57\u7b26_\\n6.3.2 rlike select * from \u8868\u540d where \u5b57\u6bb5 rlike \\"^ .* $\\" ^\u5b57 ---\u4ee5\u8be5\u5b57\u5f00\u59cb,.* --- \u591a\u4e2a\u5b57\u7b26 \u5b57$----\u4ee5\u5b57\u7ed3\u5c3e\\n6.4 \u8303\u56f4\u67e5\u8be2 select * from \u8868\u540d where \u5b57\u6bb5 in () -------\u975e\u8fde\u7eed\u8303\u56f4\\nselect * from \u8868\u540d where \u5b57\u6bb5 not in () -------\u975e\u8fde\u7eed\u8303\u56f4\\nselect * from \u8868\u540d where \u5b57\u6bb5 between \u503c1 and \u503c2\uff1b ------\u8fde\u7eed\u8303\u56f4\\nselect * from \u8868\u540d where \u5b57\u6bb5 not between \u503c1 and \u503c2;\\n6.5 \u7a7a\u5224\u65ad select * from \u8868\u540d where \u5b57\u6bb5 is null; -----null \u53ef\u4ee5\u662fNULL\u4e5f\u53ef\u4ee5\u662fNuLL\\nselect * from \u8868\u540d where \u5b57\u6bb5 is not null;\\n7\u3001\u6392\u5e8f select * from \u8868\u540d where \u5b57\u6bb5 \u6761\u4ef6(\u5173\u7cfb) order by \u5b57\u6bb5 asc (\u5347\u5e8f) desc (\u964d\u5e8f) \u591a\u4e2a\u6392\u5e8f\u5b57\u6bb5\uff0c\u53ea\u9700\\n\u8981\u5199\u4e00\u4e2aorder by \u4e4b\u95f4\u7528, \u9694\u5f00\uff0c\u4f18\u5148\u6309\u7167\u5199\u5728\u524d\u9762\u7684\u5b57\u6bb5\u6392\u5e8f\u3002\\n8\u3001\u805a\u5408\u51fd\u6570 select * from \u8868\u540d \u6761\u4ef6\\n\u4f8b\uff1aselect count(*) as \u7537\u751f\u4eba\u6570 from students where gender = 1;\\n\u5728select \u4e4b\u540e from\u4e4b\u524d\u4f7f\u7528\u51fd\u6570 \uff0c\u7528\u62ec\u53f7\u62ec\u4f4f\u5b57\u6bb5\u6216\u8005*\uff0ccount---\u8ba1\u7b97\u6570\u91cf max----\u8ba1\u7b97\u6700\u5927\u503c\\nmin--- \u8ba1\u7b97\u6700\u5c0f\u503c sum ---\u6c42\u548c avg--- \u6c42\u5e73\u5747\u503c round(\u7b97\u6570\u503c\uff0c\u4fdd\u7559\u5c0f\u6570\u4f4d\u6570)\\n\u4f8b\uff1aselect round(avg(height), 2) from students where gender =1;\\n \\n9\u3001\u5206\u7ec4 group by\\n \\n6\u3001\u8868\u5173\u8054\\n6.1 \u5916\u94fe\u63a5 \u57fa\u672c\u683c\u5f0f\uff1a select * from \u8868\u540d1\uff0c\u8868\u540d2 where \u8868\u540d1.\u5b57\u6bb51 = \u8868\u540d2.\u5b57\u6bb52 ;\\n6.2 \u5185\u5173\u8054 \u57fa\u672c\u683c\u5f0f\uff1a select * from \u8868\u540d1 inner join \u8868\u540d2 on \u8868\u540d1.\u5b57\u6bb51 = \u8868\u540d2.\u5b57\u6bb52\\n \\n\u5220\uff1a\\n\\n\u7269\u7406\u5220\u9664 -------\u4e0d\u63a8\u8350\\n\\n1\u3001\u5220\u9664\u8868 drop table \u8868\u540d; -----\u8868\u7ed3\u6784\u4e00\u8d77\u5220\u9664\\n2\u3001 delete from \u8868\u540d; -----\u5220\u9664\u8868\u5185\u5bb9\uff0c\u4e0d\u5220\u9664\u8868\u7ed3\u6784,\u8bb0\u5f55\u4e3b\u952e\u7684\u4f4d\u7f6e\\ndelete from \u8868\u540d where ;\u4f8b\u5b50\uff1adelect from students where name = \'\u5f20\u4e09\'\\n3\u3001\u5220\u9664\u8868 truncate \u8868\u540d ------\u6e05\u7a7a\u8868\uff0c\u4e0d\u5220\u8868\u7ed3\u6784\uff0c\u4e3b\u952e\u4f4d\u7f6e\u4ece\u65b0\u5f00\u59cb\\n \\n \\n\u903b\u8f91\u5220\u9664\\n\\n\u7528\u4e00\u4e2a\u5b57\u6bb5\u6765\u8bb0\u5f55\u662f\u5426\u8fd9\u6761\u4fe1\u606f\u662f\u5426\u4ee5\u53ca\u4e0d\u518d\u4f7f\u7528\u4e86\\n\u6dfb\u52a0\u4e00\u4e2a\u5b57\u6bb5 ,\u9ed8\u8ba4\u503c\u4e3a0 \u8868\u793a\u6ca1\u6709\u5220\u9664 \u4f7f\u75281 \u8868\u793a\u5df2\u5220\u9664 alter table \u8868\u540d add is_delete bit default 0,\\n\u6539\u8bb0\u5f55\u4e2d\u5b57\u6bb5is_delete \u7684\u503c\u4e3a1\uff0c\u8868\u793a\u903b\u8f91\u5220\u9664 update \u8868\u540d set is_delete =1 where name = \\"\\""},{"id":"/2020/3/28/python","metadata":{"permalink":"/blog/2020/3/28/python","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-3-28-python.md","source":"@site/blog/2020-3-28-python.md","title":"python\u811a\u672c\u57fa\u7840(1)-python\u4e2dos\u7684\u5e38\u7528\u65b9\u6cd5","description":"1.os\u6a21\u5757\uff1aos\u6a21\u5757\u5728python\u4e2d\u5305\u542b\u666e\u904d\u7684\u64cd\u4f5c\u7cfb\u7edf\u529f\u80fd\uff0c\u4e0b\u9762\u5217\u51fa\u4e86\u4e00\u4e9b\u5728os\u6a21\u5757\u4e2d\u6bd4\u8f83\u6709\u7528\u7684\u90e8\u5206\u3002","date":"2020-03-28T00:00:00.000Z","formattedDate":"March 28, 2020","tags":[{"label":"python","permalink":"/blog/tags/python"},{"label":"hello","permalink":"/blog/tags/hello"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"},{"label":"google cloud","permalink":"/blog/tags/google-cloud"},{"label":"docker","permalink":"/blog/tags/docker"}],"readingTime":3.88,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI engine @ Facebook","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"python","title":"python\u811a\u672c\u57fa\u7840(1)-python\u4e2dos\u7684\u5e38\u7528\u65b9\u6cd5","author":"\u62db\u6653\u8d24","author_title":"AI engine @ Facebook","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["python","hello","docusaurus","google cloud","docker"]},"prevItem":{"title":"mysql\u57fa\u672c\u547d\u4ee4","permalink":"/blog/2020/3/28/mysql"},"nextItem":{"title":"\u4eceDockerhub\u62c9\u53d6\u955c\u50cf\u5e76\u4e14\u4f7f\u7528\u547d\u4ee4\u8fd0\u884c","permalink":"/blog/2020/3/27/dockerhub_2"}},"content":"1.os\u6a21\u5757\uff1aos\u6a21\u5757\u5728python\u4e2d\u5305\u542b\u666e\u904d\u7684\u64cd\u4f5c\u7cfb\u7edf\u529f\u80fd\uff0c\u4e0b\u9762\u5217\u51fa\u4e86\u4e00\u4e9b\u5728os\u6a21\u5757\u4e2d\u6bd4\u8f83\u6709\u7528\u7684\u90e8\u5206\u3002\\n\\nos.sep\u53ef\u4ee5\u53d6\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u7279\u5b9a\u7684\u8def\u5f84\u5206\u9694\u7b26\u3002windows\u4e0b\u4e3a \u201c\\\\\\\\\u201d\\n\\nos.name\u5b57\u7b26\u4e32\u6307\u793a\u4f60\u6b63\u5728\u4f7f\u7528\u7684\u5e73\u53f0\u3002\u6bd4\u5982\u5bf9\u4e8eWindows\uff0c\u5b83\u662f\'nt\'\uff0c\u800c\u5bf9\u4e8eLinux/Unix\u7528\u6237\uff0c\u5b83\u662f\'posix\'\u3002\\n\\nos.getcwd()\u51fd\u6570\u5f97\u5230\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff0c\u5373\u5f53\u524dPython\u811a\u672c\u5de5\u4f5c\u7684\u76ee\u5f55\u8def\u5f84\u3002\\n\\n\x3c!--truncate--\x3e\\nos.getenv()\u83b7\u53d6\u4e00\u4e2a\u73af\u5883\u53d8\u91cf\uff0c\u5982\u679c\u6ca1\u6709\u8fd4\u56denone\\n\\nos.putenv(key, value)\u8bbe\u7f6e\u4e00\u4e2a\u73af\u5883\u53d8\u91cf\u503c\\n\\nos.listdir(path)\u8fd4\u56de\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u548c\u76ee\u5f55\u540d\u3002\\n\\nos.remove(path)\u51fd\u6570\u7528\u6765\u5220\u9664\u4e00\u4e2a\u6587\u4ef6\u3002\\n\\nos.system(command)\u51fd\u6570\u7528\u6765\u8fd0\u884cshell\u547d\u4ee4\u3002\\n\\nos.linesep\u5b57\u7b26\u4e32\u7ed9\u51fa\u5f53\u524d\u5e73\u53f0\u4f7f\u7528\u7684\u884c\u7ec8\u6b62\u7b26\u3002\u4f8b\u5982\uff0cWindows\u4f7f\u7528\'\\\\r\\\\n\'\uff0cLinux\u4f7f\u7528\'\\\\n\'\u800cMac\u4f7f\u7528\'\\\\r\'\u3002\\n\\nos.curdir:\u8fd4\u56de\u5f53\u524d\u76ee\u5f55\uff08\'.\')\\nos.chdir(dirname):\u6539\u53d8\u5de5\u4f5c\u76ee\u5f55\u5230dirname\\n\\n========================================================================================\\n\\nos.path\u5e38\u7528\u65b9\u6cd5\uff1a\\n\\nos.getcwd() \u83b7\u53d6\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff0c\u5373\u5f53\u524dpython\u811a\u672c\u5de5\u4f5c\u7684\u76ee\u5f55\u8def\u5f84\\n\\nos.chdir(\\"dirname\\")  \u6539\u53d8\u5f53\u524d\u811a\u672c\u5de5\u4f5c\u76ee\u5f55\uff1b\u76f8\u5f53\u4e8eshell\u4e0bcd\\n\\nos.curdir  \u8fd4\u56de\u5f53\u524d\u76ee\u5f55: (\'.\')\\n\\nos.pardir  \u83b7\u53d6\u5f53\u524d\u76ee\u5f55\u7684\u7236\u76ee\u5f55\u5b57\u7b26\u4e32\u540d\uff1a(\'..\')\\n\\nos.makedirs(\'dirname1/dirname2\')    \u53ef\u751f\u6210\u591a\u5c42\u9012\u5f52\u76ee\u5f55\\n\\nos.removedirs(\'dirname1\')    \u82e5\u76ee\u5f55\u4e3a\u7a7a\uff0c\u5219\u5220\u9664\uff0c\u5e76\u9012\u5f52\u5230\u4e0a\u4e00\u7ea7\u76ee\u5f55\uff0c\u5982\u82e5\u4e5f\u4e3a\u7a7a\uff0c\u5219\u5220\u9664\uff0c\u4f9d\u6b64\u7c7b\u63a8\\n\\nos.mkdir(\'dirname\')    \u751f\u6210\u5355\u7ea7\u76ee\u5f55\uff1b\u76f8\u5f53\u4e8eshell\u4e2dmkdir dirname\\n\\nos.rmdir(\'dirname\')    \u5220\u9664\u5355\u7ea7\u7a7a\u76ee\u5f55\uff0c\u82e5\u76ee\u5f55\u4e0d\u4e3a\u7a7a\u5219\u65e0\u6cd5\u5220\u9664\uff0c\u62a5\u9519\uff1b\u76f8\u5f53\u4e8eshell\u4e2drmdir dirname\\n\\nos.listdir(\'dirname\')    \u5217\u51fa\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u548c\u5b50\u76ee\u5f55\uff0c\u5305\u62ec\u9690\u85cf\u6587\u4ef6\uff0c\u5e76\u4ee5\u5217\u8868\u65b9\u5f0f\u6253\u5370\\n\\nos.remove()  \u5220\u9664\u4e00\u4e2a\u6587\u4ef6\\n\\nos.rename(\\"oldname\\",\\"newname\\")  \u91cd\u547d\u540d\u6587\u4ef6/\u76ee\u5f55\\n\\nos.stat(\'path/filename\')  \u83b7\u53d6\u6587\u4ef6/\u76ee\u5f55\u4fe1\u606f\\n\\nos.sep    \u8f93\u51fa\u64cd\u4f5c\u7cfb\u7edf\u7279\u5b9a\u7684\u8def\u5f84\u5206\u9694\u7b26\uff0cwin\u4e0b\u4e3a\\"\\\\\\\\\\",Linux\u4e0b\u4e3a\\"/\\"\\n\\nos.linesep    \u8f93\u51fa\u5f53\u524d\u5e73\u53f0\u4f7f\u7528\u7684\u884c\u7ec8\u6b62\u7b26\uff0cwin\u4e0b\u4e3a\\"\\\\t\\\\n\\",Linux\u4e0b\u4e3a\\"\\\\n\\"\\n\\nos.pathsep    \u8f93\u51fa\u7528\u4e8e\u5206\u5272\u6587\u4ef6\u8def\u5f84\u7684\u5b57\u7b26\u4e32 win\u4e0b\u4e3a;,Linux\u4e0b\u4e3a:\\n\\nos.name    \u8f93\u51fa\u5b57\u7b26\u4e32\u6307\u793a\u5f53\u524d\u4f7f\u7528\u5e73\u53f0\u3002win->\'nt\'; Linux->\'posix\'\\n\\nos.system(\\"bash command\\")  \u8fd0\u884cshell\u547d\u4ee4\uff0c\u76f4\u63a5\u663e\u793a\\n\\nos.environ  \u83b7\u53d6\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\\n\\nos.path.abspath(path)  \u8fd4\u56depath\u89c4\u8303\u5316\u7684\u7edd\u5bf9\u8def\u5f84\\n\\nos.path.split(path)  \u5c06path\u5206\u5272\u6210\u76ee\u5f55\u548c\u6587\u4ef6\u540d\u4e8c\u5143\u7ec4\u8fd4\u56de\\n\\nos.path.dirname(path)  \u8fd4\u56depath\u7684\u76ee\u5f55\u3002\u5176\u5b9e\u5c31\u662fos.path.split(path)\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\\n\\nos.path.basename(path)  \u8fd4\u56depath\u6700\u540e\u7684\u6587\u4ef6\u540d\u3002\u5982\u4f55path\u4ee5\uff0f\u6216\\\\\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u4f1a\u8fd4\u56de\u7a7a\u503c\u3002\u5373os.path.split(path)\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20\\n\\nos.path.exists(path)  \u5982\u679cpath\u5b58\u5728\uff0c\u8fd4\u56deTrue\uff1b\u5982\u679cpath\u4e0d\u5b58\u5728\uff0c\u8fd4\u56deFalse\\n\\nos.path.isabs(path)  \u5982\u679cpath\u662f\u7edd\u5bf9\u8def\u5f84\uff0c\u8fd4\u56deTrue\\n\\nos.path.isfile(path)  \u5982\u679cpath\u662f\u4e00\u4e2a\u5b58\u5728\u7684\u6587\u4ef6\uff0c\u8fd4\u56deTrue\u3002\u5426\u5219\u8fd4\u56deFalse\\n\\nos.path.isdir(path)  \u5982\u679cpath\u662f\u4e00\u4e2a\u5b58\u5728\u7684\u76ee\u5f55\uff0c\u5219\u8fd4\u56deTrue\u3002\u5426\u5219\u8fd4\u56deFalse\\n\\nos.path.join(path1[, path2[, ...]])  \u5c06\u591a\u4e2a\u8def\u5f84\u7ec4\u5408\u540e\u8fd4\u56de\uff0c\u7b2c\u4e00\u4e2a\u7edd\u5bf9\u8def\u5f84\u4e4b\u524d\u7684\u53c2\u6570\u5c06\u88ab\u5ffd\u7565\\n\\nos.path.getatime(path)  \u8fd4\u56depath\u6240\u6307\u5411\u7684\u6587\u4ef6\u6216\u8005\u76ee\u5f55\u7684\u6700\u540e\u5b58\u53d6\u65f6\u95f4\\n\\nos.path.getmtime(path)  \u8fd4\u56depath\u6240\u6307\u5411\u7684\u6587\u4ef6\u6216\u8005\u76ee\u5f55\u7684\u6700\u540e\u4fee\u6539\u65f6\u95f4\\n\\nos.path.getsize(path) \u8fd4\u56depath\u7684\u5927\u5c0f\\n\\nos.path.normpath(os.path.join(os.path.abspath(__file__),\'..\',\'..\',\'..\'))\u8868\u793a\u8fd4\u56de\u5f53\u524d\u6587\u4ef6\u7684\u4e0a\u4e0a\u4e0a\u5c42\u76ee\u5f55"},{"id":"/2020/3/27/dockerhub_2","metadata":{"permalink":"/blog/2020/3/27/dockerhub_2","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-3-27-dockerhub_2.md","source":"@site/blog/2020-3-27-dockerhub_2.md","title":"\u4eceDockerhub\u62c9\u53d6\u955c\u50cf\u5e76\u4e14\u4f7f\u7528\u547d\u4ee4\u8fd0\u884c","description":"step1: \u767b\u5f55\u81ea\u5df1\u7684dockerhub,\u9009\u62e9\u9700\u8981\u62c9\u4e0b\u7684\u955c\u50cf","date":"2020-03-27T00:00:00.000Z","formattedDate":"March 27, 2020","tags":[{"label":"facebook","permalink":"/blog/tags/facebook"},{"label":"hello","permalink":"/blog/tags/hello"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"},{"label":"google cloud","permalink":"/blog/tags/google-cloud"},{"label":"docker","permalink":"/blog/tags/docker"}],"readingTime":0.59,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI engine @ Facebook","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"dockerhub_2","title":"\u4eceDockerhub\u62c9\u53d6\u955c\u50cf\u5e76\u4e14\u4f7f\u7528\u547d\u4ee4\u8fd0\u884c","author":"\u62db\u6653\u8d24","author_title":"AI engine @ Facebook","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["facebook","hello","docusaurus","google cloud","docker"]},"prevItem":{"title":"python\u811a\u672c\u57fa\u7840(1)-python\u4e2dos\u7684\u5e38\u7528\u65b9\u6cd5","permalink":"/blog/2020/3/28/python"},"nextItem":{"title":"push\u955c\u50cf\u5230\u81ea\u5df1\u7684dockerhub","permalink":"/blog/2020/3/26/dockerhub"}},"content":"\x3c!--truncate--\x3e\\n## step1: \u767b\u5f55\u81ea\u5df1\u7684dockerhub,\u9009\u62e9\u9700\u8981\u62c9\u4e0b\u7684\u955c\u50cf\\n\\n![png](../img/dockerhub/6.png)\\n\\n## step2: \u70b9\u51fb\u955c\u50cf,\u70b9\u51fbpublic view\u83b7\u53d6\u62c9\u53d6\u547d\u4ee4\\n\\n![png](../img/dockerhub/7.png)\\n\\n## step3: \u590d\u5236\u83b7\u53d6\u62c9\u53d6\u547d\u4ee4\\n\\n![png](../img/dockerhub/8.png)\\n\\n## step4: \u5728\u7ec8\u7aef\u8f93\u5165\u62c9\u53d6\u547d\u4ee4\\n1) \u62c9\u53d6\u955c\u50cf\\n```python\\ndocker pull \u955c\u50cf\u540d\u5b57\\n```\\n2)\u67e5\u770b\u955c\u50cf\\n```python\\ndocker images\\n```\\n![png](../img/dockerhub/9.png)\\n\\n## step4: \u8fd0\u884c\u955c\u50cf\\n```python\\ndocker run -p 127.0.0.1:80:5000/tcp flybirdgroup/classifier\\n```\\n![png](../img/dockerhub/10.png)\\n\\n## step5:\u6d4f\u89c8\u5668\u8fd0\u884c\\n```python\\n\u5728\u6d4f\u89c8\u5668\u8f93\u5165: 127.0.0.1\\n```\\n![png](../img/dockerhub/11.png)\\n\\n## step6:\u5b8c\u7f8e\u8fd0\u884c\\n\\n![png](../img/dockerhub/12.png)"},{"id":"/2020/3/26/dockerhub","metadata":{"permalink":"/blog/2020/3/26/dockerhub","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-3-26-dockerhub.md","source":"@site/blog/2020-3-26-dockerhub.md","title":"push\u955c\u50cf\u5230\u81ea\u5df1\u7684dockerhub","description":"step1: \u767b\u5f55\u81ea\u5df1\u7684dockerhub,\u70b9\u51fbcreate Repository","date":"2020-03-26T00:00:00.000Z","formattedDate":"March 26, 2020","tags":[{"label":"facebook","permalink":"/blog/tags/facebook"},{"label":"hello","permalink":"/blog/tags/hello"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"},{"label":"google cloud","permalink":"/blog/tags/google-cloud"},{"label":"docker","permalink":"/blog/tags/docker"}],"readingTime":0.515,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI engine @ Facebook","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"dockerhub","title":"push\u955c\u50cf\u5230\u81ea\u5df1\u7684dockerhub","author":"\u62db\u6653\u8d24","author_title":"AI engine @ Facebook","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["facebook","hello","docusaurus","google cloud","docker"]},"prevItem":{"title":"\u4eceDockerhub\u62c9\u53d6\u955c\u50cf\u5e76\u4e14\u4f7f\u7528\u547d\u4ee4\u8fd0\u884c","permalink":"/blog/2020/3/27/dockerhub_2"},"nextItem":{"title":"Create Virtual Linux by Google \u521b\u5efalinux\u865a\u62df\u673a","permalink":"/blog/2020/3/21/createlinux"}},"content":"\x3c!--truncate--\x3e\\n## step1: \u767b\u5f55\u81ea\u5df1\u7684dockerhub,\u70b9\u51fbcreate Repository\\n\\n![png](../img/dockerhub/1.png)\\n\\n## step2: \u521b\u5efa\u4ed3\u5e93repository\\n\u590d\u5236\u8981\u4fdd\u5b58\u7684\u4ed3\u5e93\u540d\u5b57\u548c\u63a8\u9001\u547d\u4ee4\\n![png](../img/dockerhub/2.png)\\n\\n## step3: \u67e5\u770b\u672c\u5730\u4ed3\u5e93\u7684\u955c\u50cf\\n```python\\ndocker images\\n```\\n![png](../img/dockerhub/3.png)\\n\\n## step4: \u67e5\u770b\u672c\u5730\u4ed3\u5e93\u7684\u955c\u50cf\\n```python\\ndocker tag \u672c\u5730\u955c\u50cf\u540d\u5b57 dockerhub\u4ed3\u5e93\u955c\u50cf\u540d\u5b57\\ndocker tag quickstart-image flybirdgroup/helloworld:lastest\\n```\\n![png](../img/dockerhub/4.png)\\n\\n\\n\\n## step5: \u63a8\u9001\u955c\u50cf\u5230\u8fdc\u7a0b\u4ed3\u5e93\\n```python\\ndocker push flybirdgroup/helloworld:lastest\\n```\\n![png](../img/dockerhub/5.png)"},{"id":"/2020/3/21/createlinux","metadata":{"permalink":"/blog/2020/3/21/createlinux","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-3-21-createlinux.md","source":"@site/blog/2020-3-21-createlinux.md","title":"Create Virtual Linux by Google \u521b\u5efalinux\u865a\u62df\u673a","description":"Learn how to build linux system in Google Cloud Platform Docusaurus 2 alpha.","date":"2020-03-21T00:00:00.000Z","formattedDate":"March 21, 2020","tags":[{"label":"facebook","permalink":"/blog/tags/facebook"},{"label":"hello","permalink":"/blog/tags/hello"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"},{"label":"google cloud","permalink":"/blog/tags/google-cloud"},{"label":"linux","permalink":"/blog/tags/linux"}],"readingTime":0.97,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI engine @ Facebook","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"createlinux","title":"Create Virtual Linux by Google \u521b\u5efalinux\u865a\u62df\u673a","author":"\u62db\u6653\u8d24","author_title":"AI engine @ Facebook","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["facebook","hello","docusaurus","google cloud","linux"]},"prevItem":{"title":"push\u955c\u50cf\u5230\u81ea\u5df1\u7684dockerhub","permalink":"/blog/2020/3/26/dockerhub"},"nextItem":{"title":"\u53cc\u5411\u6ce8\u610f\u529bLSTM\u795e\u7ecf\u7f51\u7edc","permalink":"/blog/2020/3/19/attention"}},"content":"Learn how to build linux system in Google Cloud Platform [**Docusaurus 2 alpha**](https://v2.docusaurus.io/).\\n\\n\x3c!--truncate--\x3e\\n## step1: \u53bbcompute Engine\u521b\u5efa\u865a\u62df\u673a\u5b9e\u4f8b\\n\\n![png](../img/google/linuxs_object.png)\\n\\n## step2: \u521b\u5efa\u5b9e\u4f8b\\n\\n![png](../img/google/create_object.png)\\n\\n## step3: \u7ed9\u865a\u62df\u673a\u914d\u7f6e\\n<img src=\\"../img/google/create_object_1.png\\" align=\\"left\\"/>\\n\\n## step4: \\n\u540d\u79f0,\u533a\u57df,\u673a\u5668\u914d\u7f6e,\u7c7b\u578b\u90fd\u662f\u6309\u9700\u8bbe\u7f6e, \u78c1\u76d8\u9009\u62e9Linux 9,\u9632\u706b\u5899\u9009\u62e9http\u6d41\u91cf\\n\\n![png](../img/google/create_object_2.png)\\n\\n\\n\\n## step 5: \\n\\n### 1) \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6709\u5916\u90e8ip,\u6211\u4eec\u8981\u8bb0\u4f4f\\n   \\n### 2) \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u9009\u62e9\u5728\u6d4f\u89c8\u5668\u7a97\u53e3\u4e2d\u6253\u5f00,\u6765\u8fdb\u5165\u865a\u62df\u673a\\n   \\n<img src=\\"../img/google/create_object_3.png\\" align=\\"left\\"/>\\n\\n![png](../img/google/virtual_linux.png)\\n\\n\\n# \u4f7f\u7528\u7ec8\u7aef\u8fde\u63a5\u5230\u865a\u62dflinux\\n## step 6: \u6dfb\u52a0\u672c\u5730\u5bc6\u94a5\u5230\u5143\u6570\u636e\u4e2d\\n\\n\u9996\u5148\u53bb\u5143\u6570\u636e, \u7136\u540e\u9009\u62e9SSH\u5bc6\u94a5,\u70b9\u51fb\u4fee\u6539\u6309\u94ae,\u6dfb\u52a0\u672c\u5730\u7684SSH\u5bc6\u94a5\u5230\u6846\u4e2d\\n![png](../img/google/ssh.png)\\n\\n## step 7: \u4f7f\u7528\u672c\u5730\u7ec8\u7aef\u8fde\u63a5\\n![png](../img/google/linxus1.png)"},{"id":"/2020/3/19/attention","metadata":{"permalink":"/blog/2020/3/19/attention","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-3-19-attention.md","source":"@site/blog/2020-3-19-attention.md","title":"\u53cc\u5411\u6ce8\u610f\u529bLSTM\u795e\u7ecf\u7f51\u7edc","description":"\u539f\u7406\u8bb2\u89e3","date":"2020-03-19T00:00:00.000Z","formattedDate":"March 19, 2020","tags":[{"label":"CNN","permalink":"/blog/tags/cnn"},{"label":"classifier","permalink":"/blog/tags/classifier"},{"label":"textCNN","permalink":"/blog/tags/text-cnn"}],"readingTime":9.09,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"Attention","title":"\u53cc\u5411\u6ce8\u610f\u529bLSTM\u795e\u7ecf\u7f51\u7edc","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["CNN","classifier","textCNN"]},"prevItem":{"title":"Create Virtual Linux by Google \u521b\u5efalinux\u865a\u62df\u673a","permalink":"/blog/2020/3/21/createlinux"},"nextItem":{"title":"word2vec\u8be6\u89e3","permalink":"/blog/2020/03/18/word2vec"}},"content":"## \u539f\u7406\u8bb2\u89e3\\n\\nTextAttBiRNN\u662f\u5728\u53cc\u5411LSTM\u6587\u672c\u5206\u7c7b\u6a21\u578b\u7684\u57fa\u7840\u4e0a\u6539\u8fdb\u7684\uff0c\u4e3b\u8981\u662f\u5f15\u5165\u4e86\u6ce8\u610f\u529b\u673a\u5236\uff08Attention\uff09\u3002\u5bf9\u4e8e\u53cc\u5411LSTM\u7f16\u7801\u5f97\u5230\u7684\u8868\u5f81\u5411\u91cf\uff0c\u6a21\u578b\u80fd\u591f\u901a\u8fc7\u6ce8\u610f\u529b\u673a\u5236\uff0c\u5173\u6ce8\u4e0e\u51b3\u7b56\u6700\u76f8\u5173\u7684\u4fe1\u606f\u3002\u5176\u4e2d\u6ce8\u610f\u529b\u673a\u5236\u6700\u5148\u5728\u8bba\u6587 [Neural Machine Translation by Jointly Learning to Align and Translate](https://arxiv.org/pdf/1409.0473.pdf) \u4e2d\u88ab\u63d0\u51fa\uff0c\u800c\u6b64\u5904\u5bf9\u4e8e\u6ce8\u610f\u529b\u673a\u5236\u7684\u5b9e\u73b0\u53c2\u7167\u4e86\u8bba\u6587 [Feed-Forward Networks with Attention Can Solve Some Long-Term Memory Problems](https://arxiv.org/pdf/1512.08756.pdf)\u3002\\n\x3c!--truncate--\x3e\\n\u6ce8\u610f\u529b\u673a\u5236\u53c2\u8003\\n- [\u6df1\u5ea6\u5b66\u4e60\u4e2d\u7684\u6ce8\u610f\u529b\u6a21\u578b](https://zhuanlan.zhihu.com/p/37601161)\\n- [\u6df1\u5ea6\u5b66\u4e60\u6ce8\u610f\u529b\u673a\u5236](https://zhuanlan.zhihu.com/p/53036028)\\n\\n\u8bf7\u6ce8\u610f,\u8fd9\u91cc\u7684\u6ce8\u610f\u529b\u673a\u5236\u4e0ebert\u4e2dtransformer\u7684\u6ce8\u610f\u529b\u673a\u5236\u4e0d\u540c,transformer\u4f1a\u66f4\u52a0\u590d\u6742,\u5927\u5bb6\u53ef\u4ee5\u53c2\u8003\u6211\u5173\u4e8e[transformer](https://github.com/weijiang2009/URun.ResearchPrototype/tree/dev/People/Xiaoxian/NLP%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86/Transformer%E7%AC%94%E8%AE%B0)\\n\\nIn the paper [Feed-Forward Networks with Attention Can Solve Some Long-Term Memory Problems](https://arxiv.org/pdf/1512.08756.pdf), the **feed forward attention** is simplified as follows,\\n![png](../img/attention/FeedForwardAttention.png)\\n\\nFunction a, a learnable function, is recognized as a feed forward network. In this formulation, attention can be seen as producing a fixed-length embedding c of the input sequence by computing an adaptive weighted average of the state sequence h.\\n\\nc\u5c31\u662f\u6ce8\u610f\u529b,alpha\u5c31\u662f\u6743\u91cd,h\u5c31\u662f\u9690\u542b\u72b6\u6001,alpha\u901a\u8fc7softmax\u8ba1\u7b97,score\u5c31\u662f\u901a\u8fc7h\u8ba1\u7b97\u7684,h\u5c31\u662f\u5f53\u524d\u72b6\u6001\u8f93\u5165\u7684\u8bcd\u8bed\u548c\u4e0a\u4e00\u9690\u542b\u72b6\u6001ht-1\u8ba1\u7b97\u800c\u6765\u7684\\n\\n\\n![png](../img/attention/FeedForwardAttetion_fomular.png)\\n\\n## \u7ec6\u770b\u7ed3\u6784\\nTextAttBiRNN \u7684\u7f51\u7edc\u7ed3\u6784\\n![png](../img/attention/text-attn-birnn.png)\\n\\n### \u8f93\u5165\u5c42\\n\u8f93\u5165\u5c42\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u53e5\u5b50\u8f93\u5165\u957f\u5ea6\uff0c\u6bcf\u4e2a\u8bcd\u7ecf\u8fc7\u4e00\u4e2aembedding_dim=50\u7684embedding\u77e9\u9635\uff0c\u6700\u7ec8\u8f93\u51fa400\xd750\u7684\u8868\u793a\u77e9\u9635.\u5047\u8bbe\u4e00\u4e2a\u53e5\u5b50\u6709400\u4e2a\u8bcd\u8bed\\n\\n### Bi-LSTM\\nBi-LSTM\u5c42\u4f5c\u4e3a\u4e00\u79cd\u7279\u5f81\u7f16\u7801\u5c42\uff0c\u8fd9\u5c42\u53ef\u4ee5\u63d0\u53d6\u6bcf\u4e2a\u8bcd\u8bed\u7684\u4e0a\u4e0b\u6587\u7279\u5f81\uff0c\u7136\u540e\u5c06\u53cc\u5411\u7684\u7279\u5f81\u8fdb\u884c\u62fc\u63a5\uff0c\u7136\u540e\u4f9d\u65e7\u5c06\u6bcf\u4e2a\u8bcd\u8bed\u7684\u7279\u5f81\u8fdb\u884c\u8f93\u51fa\uff0c\u56e0\u6b64\u8f93\u51fa\u4e3a400\xd7256\u7684\u7279\u5f81\u77e9\u9635\\n\\nAttention\u5c42\\nAttention\u5c42\u5bf9\u8fd9\u4e2a\u7f51\u7edc\u4e2d\u5bf9\u6bcf\u4e2a\u8bcd\u8bed\u8fdb\u884c\u4e86\u52a0\u6743\u6c42\u548c\uff0c\u8fd9\u4e2a\u6743\u91cd\u662f\u901a\u8fc7\u8bad\u7ec3\u4e0d\u65ad\u8bad\u7ec3\u51fa\u6765\u7684\uff0c\u8fd9\u5c42\u6211\u4eec\u7684\u8f93\u5165x\u4e3a400\xd7256\uff0c\u6211\u4eec\u521d\u59cb\u5316\u6743\u91cd\u77e9\u9635W\u4e3a256\xd71\u7ef4\uff0c\u7136\u540e\u5bf9x\u4e0eW\u8fdb\u884c\u70b9\u4e58\u3001\u5f52\u4e00\u5316\uff08\u516c\u5f0f\u7684\u524d\u4e24\u4e2a\uff09\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u5230400\xd71\u7684\u77e9\u9635a\uff0c\u8fd9\u4e2a\u77e9\u9635\u4ee3\u8868\u7684\u662f\u6bcf\u4e2a\u8bcd\u5bf9\u5e94\u7684\u6743\u91cd\uff0c\u6743\u91cd\u5927\u7684\u8bcd\u4ee3\u8868\u6ce8\u610f\u529b\u5927\u7684\uff0c\u8fd9\u4e2a\u8bcd\u7684\u8d21\u732e\u7a0b\u5ea6\u66f4\u5927\uff0c\u6700\u540e\u5bf9\u6bcf\u4e2a\u8bcd\u8bed\u8fdb\u884c\u52a0\u6743\u5e73\u5747\uff0caT\u4e0ex\u8fdb\u884c\u70b9\u4e58\uff0c\u5f97\u52301\xd7256\uff0c\u8fd9\u662f\u6700\u7ec8\u52a0\u6743\u5e73\u5747\u540e\u8f93\u51fa\u7684\u603b\u7279\u5f81\u5411\u91cf\u3002\\n\\n\u8f93\u51fa\u5c42\\n\u4e0e\u6211\u4e4b\u524dtextCNN\u505a\u4e2d\u6587\u65b0\u95fb\u5206\u7c7b\u5b9e\u9a8c\u5dee\u4e0d\u591a\uff0c\u4f7f\u7528\u5168\u8fde\u63a5\u5c42\uff0csoftmax\u4f5c\u4e3a\u6fc0\u6d3b\u51fd\u6570\u8fdb\u884c\u8f93\u51fa\u3002\\n\\ndemo\u9879\u76ee: [\u60c5\u611f\u5206\u6790](https://github.com/flybirdgroup/sentiment_analysis)\\n# \u5bfc\u5165\u5de5\u5177\u5305\\n```python\\nimport pandas as pd\\nimport jieba_fast as jieba\\nfrom tensorflow.keras.layers import Layer\\nfrom tensorflow.keras import backend as K\\nfrom tensorflow.keras import initializers,regularizers,constraints\\nfrom tensorflow.keras import Input,Model,models\\nfrom tensorflow.keras.layers import Embedding, Dense, Conv1D, GlobalMaxPooling1D, Concatenate, Dropout\\nfrom tensorflow.keras import Input,Model\\nfrom tensorflow.keras.layers import Embedding,Dropout,Dense,Bidirectional,LSTM\\nfrom tensorflow.keras.models import load_model\\nfrom elmoformanylangs import Embedder\\nimport numpy as np\\nfrom tensorflow.keras.utils import plot_model\\nfrom sklearn.model_selection import train_test_split\\nfrom tensorflow.keras.utils import to_categorical\\nfrom tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\\nfrom pandarallel import pandarallel\\npandarallel.initialize()\\nfrom tensorflow.keras.preprocessing.text import Tokenizer\\n```\\n\\n# \u8bfb\u53d6\u6570\u636e\\n\\n```python\\ndf = pd.read_csv(\'./data/sentiment_analysis_data.csv\',sep=\'\\t\')\\ndf\\n```\\n![png](../img/attention/1.png)\\n\\n## \u6253\u4e71\u6837\u672c\\n```python\\ndf = df.sample(frac=1).reset_index(drop=True)\\n```\\n\\n# \u5efa\u6a21\u601d\u8def\\n\\n## \u6280\u672f\u8def\u7ebf\\n\u5206\u4e24\u79cd\u79cd\u60c5\u51b5,\u597d\u8bc4,\u8d1f\u8bc4,\u4e2d\u8bc4\\n\u8ba1\u7b97\u8def\u7ebf:\\n1 \u4f7f\u7528TextCNN\u5bf9\u6bcf\u4e2a\u53e5\u5b50\u7c7b\u4f3cn-gram\u5904\u7406\\n\\n2 \u4f7f\u7528RNN\\n\\n3 \u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528attention\u673a\u5236\u505a\u60c5\u611f\u5224\u65ad,\u5bf9\u8bcd\u8fdb\u884cword2vec,\u6216\u8005elmo embedding,\u53ef\u6dfb\u52a0bi-lstm\u83b7\u53d6\u4e0a\u4e0b\u6587\u4fe1\u606f\\n\\n[Attention\u539f\u7406\u8bf7\u53c2\u8003](https://www.xn--gmqr38alogxt2a.net/blog/Attention)\\n\\n\\n## \u67e5\u770b\u662f\u5426\u6709\u7f3a\u5931\u503c\\n\\n```python\\ndf.info()\\n```\\n\\n## \u5206\u6790\u6807\u7b7e\u6570\u636e\u60c5\u51b5\\n\\n```python\\nlabel_dict = {\'-1\':\'\u8d1f\u8bc4\',\'0\':\'\u4e2d\u8bc4\',\'1\':\'\u6b63\u8bc4\'}\\n\\ndf[\'label\']=df[\'label\'].apply(lambda x: label_dict[str(x)] )\\n```\\n\\n```python\\ndf.tail()\\n```\\n![png](../img/attention/2.png)\\n\\n### \u67e5\u770b\u6bcf\u4e2a\u6587\u672c\u7684\u957f\u5ea6\\n\\n```python\\ndf[\'txt_num\'] = df[\'txt\'].agg(lambda x: len(x))\\n```\\n\\n```python\\ndf.agg({\'txt_num\':\'mean\'})\\n```\\n## \u5f97\u5230\u53e5\u5b50\u957f\u5ea6\\n\\n\u6240\u4ee5\u6839\u636e\u6570\u636e,\u5f97\u51fa\u6211\u4eec\u4f1a\u8bbe\u7f6emaxlen= 40\u5de6\u53f3\\n\\n## jieba\u5206\u8bcd\\n\\n\\n```python\\nfrom pandarallel import pandarallel\\npandarallel.initialize()\\n```\\n\\n## \u83b7\u53d6\u505c\u7528\u8bcd\u548c\u8bbe\u7acb\u5206\u8bcd\u51fd\u6570\\n\\n\\n```python\\nstopwords = pd.read_csv(\'./data/stopwords.txt\',sep=\'\\\\t\',index_col=False,quoting=3,encoding=\'utf-8\')\\n```\\n\\n\\n```python\\ndef split_words(X):\\n    result = [i for i in jieba.lcut(X) if i not in stopwords]\\n    result = \' \'.join(result)\\n    return result\\n```\\n\\n\\n```python\\ndf[\'txt\']=df[\'txt\'].parallel_apply(split_words)\\n```\\n\\n## \u5efa\u7acb\u6a21\u578b\\n\\n### Attention\u7f51\u7edc\\n```python\\nclass Attention(Layer):\\n    def __init__(self, step_dim,\\n                 W_regularizer=None, b_regularizer=None,\\n                 W_constraint=None, b_constraint=None,\\n                 bias=True, **kwargs):\\n        self.supports_masking = True\\n        self.init = initializers.get(\'glorot_uniform\')\\n\\n        self.W_regularizer = regularizers.get(W_regularizer)\\n        self.b_regularizer = regularizers.get(b_regularizer)\\n\\n        self.W_constraint = constraints.get(W_constraint)\\n        self.b_constraint = constraints.get(b_constraint)\\n\\n        self.bias = bias\\n        self.step_dim = step_dim\\n        self.features_dim = 0\\n\\n        super(Attention, self).__init__(**kwargs)\\n\\n    def build(self, input_shape):\\n        assert len(input_shape) == 3\\n\\n        self.W = self.add_weight(shape=(input_shape[-1],),\\n                                 initializer=self.init,\\n                                 name=\'{}_W\'.format(self.name),\\n                                 regularizer=self.W_regularizer,\\n                                 constraint=self.W_constraint)\\n        self.features_dim = input_shape[-1]\\n\\n        if self.bias:\\n            self.b = self.add_weight(shape=(input_shape[1],),\\n                                     initializer=\'zero\',\\n                                     name=\'{}_b\'.format(self.name),\\n                                     regularizer=self.b_regularizer,\\n                                     constraint=self.b_constraint)\\n        else:\\n            self.b = None\\n\\n        self.built = True\\n    \\n    def compute_mask(self,input,input_mask=None):\\n        #do not pass the mask to the next layers\\n        return None\\n    \\n    def call(self,x,mask=None):\\n        features_dim = self.features_dim\\n        step_dim = self.step_dim\\n        \\n        #K.reshape(x,(-1,features_dim))\u91cc\u9762-1\u53ef\u4ee5\u60f3\u8c61\u6210\u4e00\u884c,features_dim\u53d8\u6210\u4e00\u884c\u6709features_dim\u7ef4\u77e9\u9635(1*dim\u7ef4),K.reshape(self.W, (features_dim, 1)),\u53d8\u6210\u77e9\u9635(dim\u7ef4*self.W)features_dim\u884c\u548c1\u7ef4\\n        e = K.reshape(K.dot(K.reshape(x, (-1, features_dim)), K.reshape(self.W, (features_dim, 1))), (-1, step_dim))  \\n        # \u8fd9\u91cc\u4e5f\u53ef\u4ee5\u7528\u53e6\u5916\u4e00\u79cd\u8868\u793a\u65b9\u5f0f\\n#         e = K.reshape(K.dot(K.reshape(x,(1,-1)),K.reshape(self.W,(-1,1))),(-1,1))\\n        # \u5176\u5b9e\u5c31\u662f\u5168\u8fde\u63a5\u7684\u77e9\u9635\u76f8\u4e58 e = K.dot(x, self.W)\\n        if self.bias:\\n            e += self.b\\n        e = K.tanh(e) # \u6fc0\u6d3b\u51fd\u6570\\n        a = K.exp(e) # \u53bb\u6307\u6570\\n        # apply mask after the exp. will be re-normalized next\\n        if mask is not None:\\n            # cast the mask to floatX to avoid float64 upcasting in theano\\n            a *= K.cast(mask, K.floatx()) # \u8f6c\u6362\u6210floatx\u7c7b\u578b\\n        # in some cases especially in the early stages of training the sum may be almost zero\\n        # and this results in NaN\'s. A workaround is to add a very small positive number \u03b5 to the sum.\\n        a /= K.cast(K.sum(a, axis=1, keepdims=True) + K.epsilon(), K.floatx()) # softmax\u51fd\u6570,\u5f97\u5230\u6743\u91cd\u77e9\u9635\\n        a = K.expand_dims(a) # \u53d8\u6210(dim,1),\u8fd9\u6837\u53ef\u4ee5\u4e0ex\u8fdb\u884c\u52a0\u6743\u5c31\u548c\u5f97\u5230context\\n        \\n        c = K.sum(a*x,axis=1) #\u6743\u91cd\u4e0ehidden\u4fe1\u606f\u52a0\u6743\u5c31\u548c\u5f97\u5230context,\u4e5f\u5c31\u662f\u6211\u4eec\u7684\u6ce8\u610f\u529b\\n        return c\\n    def compute_output_shape(self, input_shape):\\n        return input_shape[0], self.features_dim  \\n    \\n    def get_config(self):\\n        config = {\\n                \\"step_dim\\":self.step_dim,\\n                 \\"W_regularizer\\":self.W_regularizer, \\"b_regularizer\\":self.b_regularizer,\\n                 \\"W_constraint\\":self.W_constraint, \\"b_constraint\\":self.b_constraint,\\n                 \\"bias\\":self.bias}\\n        base_config = super(Attention, self).get_config()\\n        return dict(list(base_config.items()) + list(config.items()))\\n```\\n\\n### \u7f51\u7edc\u7ed3\u6784\\n\\n### elmo\u5c42\\n\u54c8\u5de5\u5927\u5f00\u53d1\u7684\u52a8\u6001\u8bcd\u5411\u91cf[elmo](https://github.com/HIT-SCIR/ELMoForManyLangs)\\n\\nelmo\u539f\u7406\u53ef\u53c2\u8003[\u94fe\u63a5](https://www.jianshu.com/p/2fff53696fac)\\n\\n```python\\ne = Embedder(\'./zhs.model/\')\\n```\\n\\n### \u521b\u5efapadding\u51fd\u6570\\n\u8d85\u8fc7\u53e5\u5b50\u957f\u5ea6\u5c31\u622a\u53d6,\u4e0d\u591f\u5c31\u8865\u7a7a\\n\\n```python\\ndef pad_sent(x, max_len):\\n    if len(x)>max_len:\\n        return x[:max_len]\\n    else:\\n        return x+[\'\']*(max_len-len(x))\\n```\\n### \u521b\u5efa\u6279\u91cf\u751f\u6210\u5668\\n\\n```python\\ndef batch_generator(x, y, batch_size=64):\\n    n_batches_per_epoch = len(x)//batch_size\\n    for i in range(n_batches_per_epoch):\\n        x_batch = np.array(e.sents2elmo([pad_sent(sent,40) for sent in x[batch_size*i:batch_size*(i+1)]]))\\n        y_batch = y[batch_size*i:batch_size*(i+1),:]\\n        yield x_batch, np.array(y_batch)\\n```\\n\\n```python\\ndef predict_generator(x, batch_size=1): #\u9884\u6d4b\\n    n_batches_per_epoch = len(x)//batch_size\\n    for i in range(n_batches_per_epoch):\\n        x_batch = np.array(e.sents2elmo([pad_sent(sent,40) for sent in x[batch_size*i:batch_size*(i+1)]]))\\n        yield x_batch\\n```\\n\\n### \u6784\u5efaELMOTextBiRNN\u7f51\u7edc\u7ed3\u6784\\n\\n\\n```python\\nclass ELMOTextBiRNN(object):\\n    def __init__(self,maxlen,max_features,embedding_dims,class_num=3,last_activation=\'softmax\'):\\n        self.maxlen = maxlen\\n        self.max_features = max_features\\n        self.embedding_dims = embedding_dims\\n        self.class_num = class_num\\n        self.last_activation = last_activation\\n#     def get_model(self):\\n#         embedding = Input((self.maxlen, self.embedding_dims,)) # \u8f93\u5165\u9884\u8bad\u7ec3\u7684\u8bcd\u5411\u91cf\\n#         convs = [] \\n#         for kernel_size in [3,4,5]: #\u8bbe\u5b9afilter\u5927\u5c0f\\n#             c = Conv1D(128,kernel_size,activation=\'relu\')(embedding)\\n#             c = GlobalMaxPooling1D()(c)\\n#             convs.append(c)\\n#         x = Concatenate()(convs)\\n#         output = Dense(self.class_num,activation=self.last_activation)(x)\\n#         model = Model(inputs=embedding,outputs=output)\\n#         return model\\n    \\n    def get_model(self):\\n        embedding = Input((self.maxlen,self.embedding_dims,))\\n        x = Bidirectional(LSTM(128,return_sequences=True))(embedding)\\n        x = Attention((self.maxlen))(x)\\n        output = Dense(self.class_num,activation=self.last_activation)(x)\\n        model = Model(embedding,output)\\n        return model        \\n```\\n\\n```python\\ntokenizer = Tokenizer()\\ntokenizer.fit_on_texts(df[\'txt\'].values)\\nvocab = tokenizer.word_index\\nlen(vocab)+1\\n```\\n\\n### \u8bbe\u7f6e\u6a21\u578b\u53c2\u6570\\n\\n\\n```python\\nmaxlen = 40\\nbatch_size = 32\\nmax_features = len(vocab)+1\\nembedding_dims = 1024\\nepochs = 9\\n```\\n### \u83b7\u53d6\u6a21\u578b\\n```python\\nmodel = ELMOTextBiRNN(maxlen,max_features,embedding_dims).get_model()\\n```\\n\\n```python\\nplot_model(model,show_shapes=True)\\n```\\n![png](../img/attention/output_47_0.png)\\n\\n## \u5212\u5206\u8bad\u7ec3\u96c6,\u6d4b\u8bd5\u96c6\\n\\n\\n```python\\nx_train,x_test,y_train,y_test = train_test_split(df[\'txt\'].values,df[\'label\'])\\n```\\n\\n## \u5efa\u7acb\u8bcd\u5178,\u8bcd\u8bedid\u5316,\u6807\u7b7e\u72ec\u70ed\u7f16\u7801\\n\\n```python\\ndef encode_category_one_hot(y_train,y_test): \\n    from tensorflow.keras.utils import to_categorical\\n    set(y_train)\\n    categories = set(y_train)\\n    categories\\n    cat_to_id = dict(zip(categories, range(len(categories))))\\n    y_train_id = [cat_to_id[i] for i in y_train]\\n    y_test_id = [cat_to_id[i] for i in y_test]\\n    cat_to_id\\n    y_train_one_hot = to_categorical(y_train_id)\\n    y_test_one_hot = to_categorical(y_test_id)\\n    return y_train_one_hot,y_test_one_hot,cat_to_id\\n```\\n\\n\\n```python\\ny_train_one_hot,y_test_one_hot,cat_to_id = encode_category_one_hot(y_train,y_test)\\n```\\n\\n\\n```python\\nx_train = sentences_list(x_train)\\nx_test = sentences_list(x_test)\\n```\\n\\n## \u8bbe\u7acb\u65e9\u505c\\n\\n\\n```python\\nmy_callbacks = [ModelCheckpoint(\'.ELMO_birnn_model.h5\'),\\n                EarlyStopping(monitor=\'accuracy\',patience=2,mode=\'max\')]\\n```\\n\\n\\n```python\\nmodel = ELMOTextBiRNN(40,max_features,1024).get_model()\\nmodel.compile(\'adam\',\'categorical_crossentropy\',metrics=[\'accuracy\'])\\n```\\n\\n## \u6d4b\u8bd5\u6a21\u578b\\n\\n\\n```python\\ntext = \'\u4eca\u5929 \u5929\u6c14 \u5f88 \u6674\u6717 \u5904\u5904 \u6709 \u9633\u5149 \u6709 \u9633\u5149\'\\nsentence = [[\'%s\'%text]]\\n```\\n\\n\\n```python\\ncat_to_id\\n```\\n  {\'\u8d1f\u8bc4\': 0, \'\u6b63\u8bc4\': 1, \'\u4e2d\u8bc4\': 2}\\n\\n```python\\nsentence\\n```\\n[[\'\u4eca\u5929 \u5929\u6c14 \u5f88 \u6674\u6717 \u5904\u5904 \u6709 \u9633\u5149 \u6709 \u9633\u5149\']]\\n\\n\\n```python\\nmodel.predict_generator(predict_generator(sentence, batch_size=1),steps=1)\\n```\\narray([[0.21561107, 0.600974  , 0.18341494]], dtype=float32)"},{"id":"/2020/03/18/word2vec","metadata":{"permalink":"/blog/2020/03/18/word2vec","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-03-18-word2vec.md","source":"@site/blog/2020-03-18-word2vec.md","title":"word2vec\u8be6\u89e3","description":"\u4ec0\u4e48\u662fWord2Vec\u548cEmbeddings\uff1f","date":"2020-03-18T00:00:00.000Z","formattedDate":"March 18, 2020","tags":[{"label":"facebook","permalink":"/blog/tags/facebook"},{"label":"hello","permalink":"/blog/tags/hello"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"}],"readingTime":31.345,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"elmo","title":"word2vec\u8be6\u89e3","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["facebook","hello","docusaurus"]},"prevItem":{"title":"\u53cc\u5411\u6ce8\u610f\u529bLSTM\u795e\u7ecf\u7f51\u7edc","permalink":"/blog/2020/3/19/attention"},"nextItem":{"title":"\u4f7f\u7528Google Cloud SDK\u6765\u914d\u7f6eGoogle App Engine","permalink":"/blog/2020/3/18/google_cloud"}},"content":"## \u4ec0\u4e48\u662fWord2Vec\u548cEmbeddings\uff1f\\n\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u8ba4\u4e3aWord2Vec\u5c31\u662f\u628a\u8bcd\u8bed\u5411\u91cf\u5316\uff0c\u4e5f\u5c31\u662f\u6bcf\u4e2a\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u8bed\u6599\u5e93\u8fdb\u884c\u5b66\u4e60\u540e\uff0c\u6bcf\u4e2a\u5355\u8bcd\u90fd\u6709\u5bf9\u5e94\u7684\u5750\u6807\u4f4d\u7f6e\uff0c\u8fd9\u65f6\u5019\uff0c\u901a\u8fc7\u6bcf\u4e2a\u5355\u8bcd\u7684\u5750\u6807\u4f4d\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f59\u5f26\u5b9a\u7406\u63a8\u5bfc\u51fa\u4e24\u4e2a\u8bcd\u8bed\uff0c\u77ed\u8bed\u6216\u8005\u53e5\u5b50\u7684\u76f8\u4f3c\u7a0b\u5ea6\u3002\u8fd9\u91cc\u53ef\u4ee5\u53c2\u8003\u6211\u53c2\u4e0e\u7684\u4e91\u6da6\u5927\u6570\u636e\u8206\u60c5\u7cfb\u7edf\u7684\u8bcd\u4e91\u9879\u76ee\uff0c[\u5173\u952e\u8bcd\u5339\u914d](https://github.com/weijiang2009/URun.ResearchPrototype/tree/dev/Projects/WordCloud/src/words_similarity_xiaoxian)\\n![jpeg](../img/word2vec.jpeg)\\n\x3c!--truncate--\x3e\\n\u90a3\u4e48\u5b83\u662f\u5982\u4f55\u5e2e\u52a9\u6211\u4eec\u505a\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5462\uff1fWord2Vec\u5176\u5b9e\u5c31\u662f\u901a\u8fc7\u5b66\u4e60\u6587\u672c\u6765\u7528\u8bcd\u5411\u91cf\u7684\u65b9\u5f0f\u8868\u5f81\u8bcd\u7684\u8bed\u4e49\u4fe1\u606f\uff0c\u5373\u901a\u8fc7\u4e00\u4e2a\u5d4c\u5165\u7a7a\u95f4\u4f7f\u5f97\u8bed\u4e49\u4e0a\u76f8\u4f3c\u7684\u5355\u8bcd\u5728\u8be5\u7a7a\u95f4\u5185\u8ddd\u79bb\u5f88\u8fd1\u3002\\nEmbedding\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u6620\u5c04\uff0c\u5c06\u5355\u8bcd\u4ece\u539f\u5148\u6240\u5c5e\u7684\u7a7a\u95f4\u6620\u5c04\u5230\u65b0\u7684\u591a\u7ef4\u7a7a\u95f4\u4e2d\uff0c\u4e5f\u5c31\u662f\u628a\u539f\u5148\u8bcd\u6240\u5728\u7a7a\u95f4\u5d4c\u5165\u5230\u4e00\u4e2a\u65b0\u7684\u7a7a\u95f4\u4e2d\u53bb\u3002\\n\\n\u6211\u4eec\u4ece\u76f4\u89c2\u89d2\u5ea6\u4e0a\u6765\u7406\u89e3\u4e00\u4e0b\uff0ccat\u8fd9\u4e2a\u5355\u8bcd\u548ckitten\u5c5e\u4e8e\u8bed\u4e49\u4e0a\u5f88\u76f8\u8fd1\u7684\u8bcd\uff0c\u800cdog\u548ckitten\u5219\u4e0d\u662f\u90a3\u4e48\u76f8\u8fd1\uff0ciphone\u8fd9\u4e2a\u5355\u8bcd\u548ckitten\u7684\u8bed\u4e49\u5c31\u5dee\u7684\u66f4\u8fdc\u4e86\u3002\u901a\u8fc7\u5bf9\u8bcd\u6c47\u8868\u4e2d\u5355\u8bcd\u8fdb\u884c\u8fd9\u79cd\u6570\u503c\u8868\u793a\u65b9\u5f0f\u7684\u5b66\u4e60\uff08\u4e5f\u5c31\u662f\u5c06\u5355\u8bcd\u8f6c\u6362\u4e3a\u8bcd\u5411\u91cf\uff09\uff0c\u80fd\u591f\u8ba9\u6211\u4eec\u57fa\u4e8e\u8fd9\u6837\u7684\u6570\u503c\u8fdb\u884c\u5411\u91cf\u5316\u7684\u64cd\u4f5c\u4ece\u800c\u5f97\u5230\u4e00\u4e9b\u6709\u8da3\u7684\u7ed3\u8bba\u3002\u6bd4\u5982\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u5bf9\u8bcd\u5411\u91cfkitten\u3001cat\u4ee5\u53cadog\u6267\u884c\u8fd9\u6837\u7684\u64cd\u4f5c\uff1akitten - cat + dog\uff0c\u90a3\u4e48\u6700\u7ec8\u5f97\u5230\u7684\u5d4c\u5165\u5411\u91cf\uff08embedded vector\uff09\u5c06\u4e0epuppy\u8fd9\u4e2a\u8bcd\u5411\u91cf\u5341\u5206\u76f8\u8fd1\u3002\\n\\n## \u6a21\u578b\\n\\nWord2Vec\u6a21\u578b\u4e2d\uff0c\u4e3b\u8981\u6709Skip-Gram\u548cCBOW\u4e24\u79cd\u6a21\u578b\uff0c\u4ece\u76f4\u89c2\u4e0a\u7406\u89e3\uff0cSkip-Gram\u662f\u7ed9\u5b9ainput word\u6765\u9884\u6d4b\u4e0a\u4e0b\u6587\u3002\u800cCBOW\u662f\u7ed9\u5b9a\u4e0a\u4e0b\u6587\uff0c\u6765\u9884\u6d4binput word\u3002\u672c\u7bc7\u6587\u7ae0\u4ec5\u8bb2\u89e3Skip-Gram\u6a21\u578b\u3002\\n\\n\u8fd9\u91cc\u53ef\u4ee5\u6709\u51e0\u7bc7\u5927\u795e\u7684\u6587\u7ae0\u53ef\u4ee5\u53c2\u770b:\\n![\u4e00\u6587\u8be6\u89e3 Word2vec \u4e4b Skip-Gram \u6a21\u578b\uff08\u7ed3\u6784\u7bc7\uff09](https://static.leiphone.com/uploads/new/article/740_740/201706/594b306c8b3b1.png?imageMogr2/format/jpg/quality/90)\\n\\nSkip-Gram\u6a21\u578b\u7684\u57fa\u7840\u5f62\u5f0f\u975e\u5e38\u7b80\u5355\uff0c\u4e3a\u4e86\u66f4\u6e05\u695a\u5730\u89e3\u91ca\u6a21\u578b\uff0c\u6211\u4eec\u5148\u4ece\u6700\u4e00\u822c\u7684\u57fa\u7840\u6a21\u578b\u6765\u770bWord2Vec\uff08\u4e0b\u6587\u4e2d\u6240\u6709\u7684Word2Vec\u90fd\u662f\u6307Skip-Gram\u6a21\u578b\uff09\u3002\\n\\nWord2Vec\u6a21\u578b\u5b9e\u9645\u4e0a\u5206\u4e3a\u4e86\u4e24\u4e2a\u90e8\u5206\uff0c**\u7b2c\u4e00\u90e8\u5206\u4e3a\u5efa\u7acb\u6a21\u578b\uff0c\u7b2c\u4e8c\u90e8\u5206\u662f\u901a\u8fc7\u6a21\u578b\u83b7\u53d6\u5d4c\u5165\u8bcd\u5411\u91cf**\u3002Word2Vec\u7684\u6574\u4e2a\u5efa\u6a21\u8fc7\u7a0b\u5b9e\u9645\u4e0a\u4e0e\u81ea\u7f16\u7801\u5668\uff08auto-encoder\uff09\u7684\u601d\u60f3\u5f88\u76f8\u4f3c\uff0c\u5373\u5148\u57fa\u4e8e\u8bad\u7ec3\u6570\u636e\u6784\u5efa\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\uff0c\u5f53\u8fd9\u4e2a\u6a21\u578b\u8bad\u7ec3\u597d\u4ee5\u540e\uff0c\u6211\u4eec\u5e76\u4e0d\u4f1a\u7528\u8fd9\u4e2a\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u5904\u7406\u65b0\u7684\u4efb\u52a1\uff0c\u6211\u4eec\u771f\u6b63\u9700\u8981\u7684\u662f\u8fd9\u4e2a\u6a21\u578b\u901a\u8fc7\u8bad\u7ec3\u6570\u636e\u6240\u5b66\u5f97\u7684\u53c2\u6570\uff0c\u4f8b\u5982\u9690\u5c42\u7684\u6743\u91cd\u77e9\u9635\u2014\u2014\u540e\u9762\u6211\u4eec\u5c06\u4f1a\u770b\u5230\u8fd9\u4e9b\u6743\u91cd\u5728Word2Vec\u4e2d\u5b9e\u9645\u4e0a\u5c31\u662f\u6211\u4eec\u8bd5\u56fe\u53bb\u5b66\u4e60\u7684\u201cword vectors\u201d\u3002\u57fa\u4e8e\u8bad\u7ec3\u6570\u636e\u5efa\u6a21\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u7ed9\u5b83\u4e00\u4e2a\u540d\u5b57\u53eb\u201cFake Task\u201d\uff0c\u610f\u5473\u7740\u5efa\u6a21\u5e76\u4e0d\u662f\u6211\u4eec\u6700\u7ec8\u7684\u76ee\u7684\u3002\\n\\n> \u4e0a\u9762\u63d0\u5230\u7684\u8fd9\u79cd\u65b9\u6cd5\u5b9e\u9645\u4e0a\u4f1a\u5728\u65e0\u76d1\u7763\u7279\u5f81\u5b66\u4e60\uff08unsupervised feature learning\uff09\u4e2d\u89c1\u5230\uff0c\u6700\u5e38\u89c1\u7684\u5c31\u662f\u81ea\u7f16\u7801\u5668\uff08auto-encoder\uff09\uff1a\u901a\u8fc7\u5728\u9690\u5c42\u5c06\u8f93\u5165\u8fdb\u884c\u7f16\u7801\u538b\u7f29\uff0c\u7ee7\u800c\u5728\u8f93\u51fa\u5c42\u5c06\u6570\u636e\u89e3\u7801\u6062\u590d\u521d\u59cb\u72b6\u6001\uff0c\u8bad\u7ec3\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u4f1a\u5c06\u8f93\u51fa\u5c42\u201c\u780d\u6389\u201d\uff0c\u4ec5\u4fdd\u7559\u9690\u5c42\u3002\\n\\n## The Fake Task\\n\\n\u6211\u4eec\u5728\u4e0a\u9762\u63d0\u5230\uff0c\u8bad\u7ec3\u6a21\u578b\u7684\u771f\u6b63\u76ee\u7684\u662f\u83b7\u5f97\u6a21\u578b\u57fa\u4e8e\u8bad\u7ec3\u6570\u636e\u5b66\u5f97\u7684\u9690\u5c42\u6743\u91cd\u3002\u4e3a\u4e86\u5f97\u5230\u8fd9\u4e9b\u6743\u91cd\uff0c\u6211\u4eec\u9996\u5148\u8981\u6784\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u795e\u7ecf\u7f51\u7edc\u4f5c\u4e3a\u6211\u4eec\u7684\u201cFake Task\u201d\uff0c\u540e\u9762\u518d\u8fd4\u56de\u6765\u770b\u901a\u8fc7\u201cFake Task\u201d\u6211\u4eec\u5982\u4f55\u95f4\u63a5\u5730\u5f97\u5230\u8fd9\u4e9b\u8bcd\u5411\u91cf\u3002\\n\\n\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u770b\u770b\u5982\u4f55\u8bad\u7ec3\u6211\u4eec\u7684\u795e\u7ecf\u7f51\u7edc\u3002\u5047\u5982\u6211\u4eec\u6709\u4e00\u4e2a\u53e5\u5b50**\u201cThe dog barked at the mailman\u201d**\u3002\\n\\n- \u9996\u5148\u6211\u4eec\u9009\u53e5\u5b50\u4e2d\u95f4\u7684\u4e00\u4e2a\u8bcd\u4f5c\u4e3a\u6211\u4eec\u7684\u8f93\u5165\u8bcd\uff0c\u4f8b\u5982\u6211\u4eec\u9009\u53d6\u201cdog\u201d\u4f5c\u4e3ainput word\uff1b\\n- \u6709\u4e86input word\u4ee5\u540e\uff0c\u6211\u4eec\u518d\u5b9a\u4e49\u4e00\u4e2a\u53eb\u505askip_window\u7684\u53c2\u6570\uff0c\u5b83\u4ee3\u8868\u7740\u6211\u4eec\u4ece\u5f53\u524dinput word\u7684\u4e00\u4fa7\uff08\u5de6\u8fb9\u6216\u53f3\u8fb9\uff09\u9009\u53d6\u8bcd\u7684\u6570\u91cf\u3002\u5982\u679c\u6211\u4eec\u8bbe\u7f6eskip_window=2\uff0c\u90a3\u4e48\u6211\u4eec\u6700\u7ec8\u83b7\u5f97\u7a97\u53e3\u4e2d\u7684\u8bcd\uff08\u5305\u62ecinput word\u5728\u5185\uff09\u5c31\u662f**[\'The\', \'dog\'\uff0c\'barked\', \'at\']**\u3002skip_window=2\u4ee3\u8868\u7740\u9009\u53d6\u5de6input word\u5de6\u4fa72\u4e2a\u8bcd\u548c\u53f3\u4fa72\u4e2a\u8bcd\u8fdb\u5165\u6211\u4eec\u7684\u7a97\u53e3\uff0c\u6240\u4ee5\u6574\u4e2a\u7a97\u53e3\u5927\u5c0fspan=2x2=4\u3002\u53e6\u4e00\u4e2a\u53c2\u6570\u53ebnum_skips\uff0c\u5b83\u4ee3\u8868\u7740\u6211\u4eec\u4ece\u6574\u4e2a\u7a97\u53e3\u4e2d\u9009\u53d6\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u8bcd\u4f5c\u4e3a\u6211\u4eec\u7684output word\uff0c\u5f53skip_window=2\uff0cnum_skips=2\u65f6\uff0c\u6211\u4eec\u5c06\u4f1a\u5f97\u5230\u4e24\u7ec4 **(input word, output word)** \u5f62\u5f0f\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u5373 **(\'dog\', \'barked\')**\uff0c**(\'dog\', \'the\')**\u3002\\n- \u795e\u7ecf\u7f51\u7edc\u57fa\u4e8e\u8fd9\u4e9b\u8bad\u7ec3\u6570\u636e\u5c06\u4f1a\u8f93\u51fa\u4e00\u4e2a\u6982\u7387\u5206\u5e03\uff0c\u8fd9\u4e2a\u6982\u7387\u4ee3\u8868\u7740\u6211\u4eec\u7684\u8bcd\u5178\u4e2d\u7684\u6bcf\u4e2a\u8bcd\u662foutput word\u7684\u53ef\u80fd\u6027\u3002\u8fd9\u53e5\u8bdd\u6709\u70b9\u7ed5\uff0c\u6211\u4eec\u6765\u770b\u4e2a\u6817\u5b50\u3002\u7b2c\u4e8c\u6b65\u4e2d\u6211\u4eec\u5728\u8bbe\u7f6eskip_window\u548cnum_skips=2\u7684\u60c5\u51b5\u4e0b\u83b7\u5f97\u4e86\u4e24\u7ec4\u8bad\u7ec3\u6570\u636e\u3002\u5047\u5982\u6211\u4eec\u5148\u62ff\u4e00\u7ec4\u6570\u636e **(\'dog\', \'barked\')** \u6765\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\uff0c\u90a3\u4e48\u6a21\u578b\u901a\u8fc7\u5b66\u4e60\u8fd9\u4e2a\u8bad\u7ec3\u6837\u672c\uff0c\u4f1a\u544a\u8bc9\u6211\u4eec\u8bcd\u6c47\u8868\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u662f\u201cbarked\u201d\u7684\u6982\u7387\u5927\u5c0f\u3002\\n\\n\u6a21\u578b\u7684\u8f93\u51fa\u6982\u7387\u4ee3\u8868\u7740\u5230\u6211\u4eec\u8bcd\u5178\u4e2d\u6bcf\u4e2a\u8bcd\u6709\u591a\u5927\u53ef\u80fd\u6027\u8ddfinput word\u540c\u65f6\u51fa\u73b0\u3002\u4e3e\u4e2a\u6817\u5b50\uff0c\u5982\u679c\u6211\u4eec\u5411\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u4e2d\u8f93\u5165\u4e00\u4e2a\u5355\u8bcd\u201cSoviet\u201c\uff0c\u90a3\u4e48\u6700\u7ec8\u6a21\u578b\u7684\u8f93\u51fa\u6982\u7387\u4e2d\uff0c\u50cf\u201cUnion\u201d\uff0c \u201dRussia\u201c\u8fd9\u79cd\u76f8\u5173\u8bcd\u7684\u6982\u7387\u5c06\u8fdc\u9ad8\u4e8e\u50cf\u201dwatermelon\u201c\uff0c\u201dkangaroo\u201c\u975e\u76f8\u5173\u8bcd\u7684\u6982\u7387\u3002\u56e0\u4e3a\u201dUnion\u201c\uff0c\u201dRussia\u201c\u5728\u6587\u672c\u4e2d\u66f4\u5927\u53ef\u80fd\u5728\u201dSoviet\u201c\u7684\u7a97\u53e3\u4e2d\u51fa\u73b0\u3002\u6211\u4eec\u5c06\u901a\u8fc7\u7ed9\u795e\u7ecf\u7f51\u7edc\u8f93\u5165\u6587\u672c\u4e2d\u6210\u5bf9\u7684\u5355\u8bcd\u6765\u8bad\u7ec3\u5b83\u5b8c\u6210\u4e0a\u9762\u6240\u8bf4\u7684\u6982\u7387\u8ba1\u7b97\u3002\u4e0b\u9762\u7684\u56fe\u4e2d\u7ed9\u51fa\u4e86\u4e00\u4e9b\u6211\u4eec\u7684\u8bad\u7ec3\u6837\u672c\u7684\u4f8b\u5b50\u3002\u6211\u4eec\u9009\u5b9a\u53e5\u5b50**\u201cThe quick brown fox jumps over lazy dog\u201d**\uff0c\u8bbe\u5b9a\u6211\u4eec\u7684\u7a97\u53e3\u5927\u5c0f\u4e3a2\uff08window_size=2\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u4ec5\u9009\u8f93\u5165\u8bcd\u524d\u540e\u5404\u4e24\u4e2a\u8bcd\u548c\u8f93\u5165\u8bcd\u8fdb\u884c\u7ec4\u5408\u3002\u4e0b\u56fe\u4e2d\uff0c\u84dd\u8272\u4ee3\u8868input word\uff0c\u65b9\u6846\u5185\u4ee3\u8868\u4f4d\u4e8e\u7a97\u53e3\u5185\u7684\u5355\u8bcd\u3002\\n\\n![\u4e00\u6587\u8be6\u89e3 Word2vec \u4e4b Skip-Gram \u6a21\u578b\uff08\u7ed3\u6784\u7bc7\uff09](https://static.leiphone.com/uploads/new/article/740_740/201706/594b319eb5f1f.png?imageMogr2/format/jpg/quality/90)\\n\\n\u6211\u4eec\u7684\u6a21\u578b\u5c06\u4f1a\u4ece\u6bcf\u5bf9\u5355\u8bcd\u51fa\u73b0\u7684\u6b21\u6570\u4e2d\u4e60\u5f97\u7edf\u8ba1\u7ed3\u679c\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u7684\u795e\u7ecf\u7f51\u7edc\u53ef\u80fd\u4f1a\u5f97\u5230\u66f4\u591a\u7c7b\u4f3c\uff08\u201cSoviet\u201c\uff0c\u201dUnion\u201c\uff09\u8fd9\u6837\u7684\u8bad\u7ec3\u6837\u672c\u5bf9\uff0c\u800c\u5bf9\u4e8e\uff08\u201dSoviet\u201c\uff0c\u201dSasquatch\u201c\uff09\u8fd9\u6837\u7684\u7ec4\u5408\u5374\u770b\u5230\u7684\u5f88\u5c11\u3002\u56e0\u6b64\uff0c\u5f53\u6211\u4eec\u7684\u6a21\u578b\u5b8c\u6210\u8bad\u7ec3\u540e\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u5355\u8bcd\u201dSoviet\u201c\u4f5c\u4e3a\u8f93\u5165\uff0c\u8f93\u51fa\u7684\u7ed3\u679c\u4e2d\u201dUnion\u201c\u6216\u8005\u201dRussia\u201c\u8981\u6bd4\u201dSasquatch\u201c\u88ab\u8d4b\u4e88\u66f4\u9ad8\u7684\u6982\u7387\u3002\\n\\n## \u6a21\u578b\u7ec6\u8282\\n\\n\u6211\u4eec\u5982\u4f55\u6765\u8868\u793a\u8fd9\u4e9b\u5355\u8bcd\u5462\uff1f\u9996\u5148\uff0c\u6211\u4eec\u90fd\u77e5\u9053\u795e\u7ecf\u7f51\u7edc\u53ea\u80fd\u63a5\u53d7\u6570\u503c\u8f93\u5165\uff0c\u6211\u4eec\u4e0d\u53ef\u80fd\u628a\u4e00\u4e2a\u5355\u8bcd\u5b57\u7b26\u4e32\u4f5c\u4e3a\u8f93\u5165\uff0c\u56e0\u6b64\u6211\u4eec\u5f97\u60f3\u4e2a\u529e\u6cd5\u6765\u8868\u793a\u8fd9\u4e9b\u5355\u8bcd\u3002\u6700\u5e38\u7528\u7684\u529e\u6cd5\u5c31\u662f\u57fa\u4e8e\u8bad\u7ec3\u6587\u6863\u6765\u6784\u5efa\u6211\u4eec\u81ea\u5df1\u7684\u8bcd\u6c47\u8868\uff08vocabulary\uff09\u518d\u5bf9\u5355\u8bcd\u8fdb\u884cone-hot\u7f16\u7801\u3002\\n\\n\u5047\u8bbe\u4ece\u6211\u4eec\u7684\u8bad\u7ec3\u6587\u6863\u4e2d\u62bd\u53d6\u51fa10000\u4e2a\u552f\u4e00\u4e0d\u91cd\u590d\u7684\u5355\u8bcd\u7ec4\u6210\u8bcd\u6c47\u8868\u3002\u6211\u4eec\u5bf9\u8fd910000\u4e2a\u5355\u8bcd\u8fdb\u884cone-hot\u7f16\u7801\uff0c\u5f97\u5230\u7684\u6bcf\u4e2a\u5355\u8bcd\u90fd\u662f\u4e00\u4e2a10000\u7ef4\u7684\u5411\u91cf\uff0c\u5411\u91cf\u6bcf\u4e2a\u7ef4\u5ea6\u7684\u503c\u53ea\u67090\u6216\u80051\uff0c\u5047\u5982\u5355\u8bcdants\u5728\u8bcd\u6c47\u8868\u4e2d\u7684\u51fa\u73b0\u4f4d\u7f6e\u4e3a\u7b2c3\u4e2a\uff0c\u90a3\u4e48ants\u7684\u5411\u91cf\u5c31\u662f\u4e00\u4e2a\u7b2c\u4e09\u7ef4\u5ea6\u53d6\u503c\u4e3a1\uff0c\u5176\u4ed6\u7ef4\u90fd\u4e3a0\u768410000\u7ef4\u7684\u5411\u91cf\uff08ants=[0, 0, 1, 0, ..., 0]\uff09\u3002\\n\\n\u8fd8\u662f\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u201cThe dog barked at the mailman\u201d\uff0c\u90a3\u4e48\u6211\u4eec\u57fa\u4e8e\u8fd9\u4e2a\u53e5\u5b50\uff0c\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a\u5927\u5c0f\u4e3a5\u7684\u8bcd\u6c47\u8868\uff08\u5ffd\u7565\u5927\u5c0f\u5199\u548c\u6807\u70b9\u7b26\u53f7\uff09\uff1a(\\"the\\", \\"dog\\", \\"barked\\", \\"at\\", \\"mailman\\")\uff0c\u6211\u4eec\u5bf9\u8fd9\u4e2a\u8bcd\u6c47\u8868\u7684\u5355\u8bcd\u8fdb\u884c\u7f16\u53f70-4\u3002\u90a3\u4e48\u201ddog\u201c\u5c31\u53ef\u4ee5\u88ab\u8868\u793a\u4e3a\u4e00\u4e2a5\u7ef4\u5411\u91cf[0, 1, 0, 0, 0]\u3002\\n\\n\u6a21\u578b\u7684\u8f93\u5165\u5982\u679c\u4e3a\u4e00\u4e2a10000\u7ef4\u7684\u5411\u91cf\uff0c\u90a3\u4e48\u8f93\u51fa\u4e5f\u662f\u4e00\u4e2a10000\u7ef4\u5ea6\uff08\u8bcd\u6c47\u8868\u7684\u5927\u5c0f\uff09\u7684\u5411\u91cf\uff0c\u5b83\u5305\u542b\u4e8610000\u4e2a\u6982\u7387\uff0c\u6bcf\u4e00\u4e2a\u6982\u7387\u4ee3\u8868\u7740\u5f53\u524d\u8bcd\u662f\u8f93\u5165\u6837\u672c\u4e2doutput word\u7684\u6982\u7387\u5927\u5c0f\u3002\\n\\n\u4e0b\u56fe\u662f\u6211\u4eec\u795e\u7ecf\u7f51\u7edc\u7684\u7ed3\u6784\uff1a\\n\\n![\u4e00\u6587\u8be6\u89e3 Word2vec \u4e4b Skip-Gram \u6a21\u578b\uff08\u7ed3\u6784\u7bc7\uff09](https://static.leiphone.com/uploads/new/article/740_740/201706/594b31d0920ef.png?imageMogr2/format/jpg/quality/90)\\n\\n\u9690\u5c42\u6ca1\u6709\u4f7f\u7528\u4efb\u4f55\u6fc0\u6d3b\u51fd\u6570\uff0c\u4f46\u662f\u8f93\u51fa\u5c42\u4f7f\u7528\u4e86sotfmax\u3002\\n\\n\u6211\u4eec\u57fa\u4e8e\u6210\u5bf9\u7684\u5355\u8bcd\u6765\u5bf9\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u8bad\u7ec3\uff0c\u8bad\u7ec3\u6837\u672c\u662f ( input word, output word ) \u8fd9\u6837\u7684\u5355\u8bcd\u5bf9\uff0cinput word\u548coutput word\u90fd\u662fone-hot\u7f16\u7801\u7684\u5411\u91cf\u3002\u6700\u7ec8\u6a21\u578b\u7684\u8f93\u51fa\u662f\u4e00\u4e2a\u6982\u7387\u5206\u5e03\u3002\\n\\n## \u9690\u5c42\\n\\n\u8bf4\u5b8c\u5355\u8bcd\u7684\u7f16\u7801\u548c\u8bad\u7ec3\u6837\u672c\u7684\u9009\u53d6\uff0c\u6211\u4eec\u6765\u770b\u4e0b\u6211\u4eec\u7684\u9690\u5c42\u3002\u5982\u679c\u6211\u4eec\u73b0\u5728\u60f3\u7528300\u4e2a\u7279\u5f81\u6765\u8868\u793a\u4e00\u4e2a\u5355\u8bcd\uff08\u5373\u6bcf\u4e2a\u8bcd\u53ef\u4ee5\u88ab\u8868\u793a\u4e3a300\u7ef4\u7684\u5411\u91cf\uff09\u3002\u90a3\u4e48\u9690\u5c42\u7684\u6743\u91cd\u77e9\u9635\u5e94\u8be5\u4e3a10000\u884c\uff0c300\u5217\uff08\u9690\u5c42\u6709300\u4e2a\u7ed3\u70b9\uff09\u3002\\n\\nGoogle\u5728\u6700\u65b0\u53d1\u5e03\u7684\u57fa\u4e8eGoogle news\u6570\u636e\u96c6\u8bad\u7ec3\u7684\u6a21\u578b\u4e2d\u4f7f\u7528\u7684\u5c31\u662f300\u4e2a\u7279\u5f81\u7684\u8bcd\u5411\u91cf\u3002\u8bcd\u5411\u91cf\u7684\u7ef4\u5ea6\u662f\u4e00\u4e2a\u53ef\u4ee5\u8c03\u8282\u7684\u8d85\u53c2\u6570\uff08\u5728Python\u7684gensim\u5305\u4e2d\u5c01\u88c5\u7684Word2Vec\u63a5\u53e3\u9ed8\u8ba4\u7684\u8bcd\u5411\u91cf\u5927\u5c0f\u4e3a100\uff0c window_size\u4e3a5\uff09\u3002\\n\\n\u770b\u4e0b\u9762\u7684\u56fe\u7247\uff0c\u5de6\u53f3\u4e24\u5f20\u56fe\u5206\u522b\u4ece\u4e0d\u540c\u89d2\u5ea6\u4ee3\u8868\u4e86\u8f93\u5165\u5c42-\u9690\u5c42\u7684\u6743\u91cd\u77e9\u9635\u3002\u5de6\u56fe\u4e2d\u6bcf\u4e00\u5217\u4ee3\u8868\u4e00\u4e2a10000\u7ef4\u7684\u8bcd\u5411\u91cf\u548c\u9690\u5c42\u5355\u4e2a\u795e\u7ecf\u5143\u8fde\u63a5\u7684\u6743\u91cd\u5411\u91cf\u3002\u4ece\u53f3\u8fb9\u7684\u56fe\u6765\u770b\uff0c\u6bcf\u4e00\u884c\u5b9e\u9645\u4e0a\u4ee3\u8868\u4e86\u6bcf\u4e2a\u5355\u8bcd\u7684\u8bcd\u5411\u91cf\u3002\\n\\n![\u4e00\u6587\u8be6\u89e3 Word2vec \u4e4b Skip-Gram \u6a21\u578b\uff08\u7ed3\u6784\u7bc7\uff09](https://static.leiphone.com/uploads/new/article/740_740/201706/594b320f8ed60.png?imageMogr2/format/jpg/quality/90)\\n\\n\u6240\u4ee5\u6211\u4eec\u6700\u7ec8\u7684\u76ee\u6807\u5c31\u662f\u5b66\u4e60\u8fd9\u4e2a\u9690\u5c42\u7684\u6743\u91cd\u77e9\u9635\u3002\\n\\n\u6211\u4eec\u73b0\u5728\u56de\u6765\u63a5\u7740\u901a\u8fc7\u6a21\u578b\u7684\u5b9a\u4e49\u6765\u8bad\u7ec3\u6211\u4eec\u7684\u8fd9\u4e2a\u6a21\u578b\u3002\\n\\n\u4e0a\u9762\u6211\u4eec\u63d0\u5230\uff0cinput word\u548coutput word\u90fd\u4f1a\u88ab\u6211\u4eec\u8fdb\u884cone-hot\u7f16\u7801\u3002\u4ed4\u7ec6\u60f3\u4e00\u4e0b\uff0c\u6211\u4eec\u7684\u8f93\u5165\u88abone-hot\u7f16\u7801\u4ee5\u540e\u5927\u591a\u6570\u7ef4\u5ea6\u4e0a\u90fd\u662f0\uff08\u5b9e\u9645\u4e0a\u4ec5\u6709\u4e00\u4e2a\u4f4d\u7f6e\u4e3a1\uff09\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5411\u91cf\u76f8\u5f53\u7a00\u758f\uff0c\u90a3\u4e48\u4f1a\u9020\u6210\u4ec0\u4e48\u7ed3\u679c\u5462\u3002\u5982\u679c\u6211\u4eec\u5c06\u4e00\u4e2a1 x 10000\u7684\u5411\u91cf\u548c10000 x 300\u7684\u77e9\u9635\u76f8\u4e58\uff0c\u5b83\u4f1a\u6d88\u8017\u76f8\u5f53\u5927\u7684\u8ba1\u7b97\u8d44\u6e90\uff0c\u4e3a\u4e86\u9ad8\u6548\u8ba1\u7b97\uff0c\u5b83\u4ec5\u4ec5\u4f1a\u9009\u62e9\u77e9\u9635\u4e2d\u5bf9\u5e94\u7684\u5411\u91cf\u4e2d\u7ef4\u5ea6\u503c\u4e3a1\u7684\u7d22\u5f15\u884c\uff08\u8fd9\u53e5\u8bdd\u5f88\u7ed5\uff09\uff0c\u770b\u56fe\u5c31\u660e\u767d\u3002\\n\\n![\u4e00\u6587\u8be6\u89e3 Word2vec \u4e4b Skip-Gram \u6a21\u578b\uff08\u7ed3\u6784\u7bc7\uff09](https://static.leiphone.com/uploads/new/article/740_740/201706/594b322ae0c72.png?imageMogr2/format/jpg/quality/90)\\n\\n\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u4e0a\u56fe\u4e2d\u7684\u77e9\u9635\u8fd0\u7b97\uff0c\u5de6\u8fb9\u5206\u522b\u662f1 x 5\u548c5 x 3\u7684\u77e9\u9635\uff0c\u7ed3\u679c\u5e94\u8be5\u662f1 x 3\u7684\u77e9\u9635\uff0c\u6309\u7167\u77e9\u9635\u4e58\u6cd5\u7684\u89c4\u5219\uff0c\u7ed3\u679c\u7684\u7b2c\u4e00\u884c\u7b2c\u4e00\u5217\u5143\u7d20\u4e3a0 x 17 + 0 x 23 + 0 x 4 + 1 x 10 + 0 x 11 = 10\uff0c\u540c\u7406\u53ef\u5f97\u5176\u4f59\u4e24\u4e2a\u5143\u7d20\u4e3a12\uff0c19\u3002\u5982\u679c10000\u4e2a\u7ef4\u5ea6\u7684\u77e9\u9635\u91c7\u7528\u8fd9\u6837\u7684\u8ba1\u7b97\u65b9\u5f0f\u662f\u5341\u5206\u4f4e\u6548\u7684\u3002\\n\\n\u4e3a\u4e86\u6709\u6548\u5730\u8fdb\u884c\u8ba1\u7b97\uff0c\u8fd9\u79cd\u7a00\u758f\u72b6\u6001\u4e0b\u4e0d\u4f1a\u8fdb\u884c\u77e9\u9635\u4e58\u6cd5\u8ba1\u7b97\uff0c\u53ef\u4ee5\u770b\u5230\u77e9\u9635\u7684\u8ba1\u7b97\u7684\u7ed3\u679c\u5b9e\u9645\u4e0a\u662f\u77e9\u9635\u5bf9\u5e94\u7684\u5411\u91cf\u4e2d\u503c\u4e3a1\u7684\u7d22\u5f15\uff0c\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5de6\u8fb9\u5411\u91cf\u4e2d\u53d6\u503c\u4e3a1\u7684\u5bf9\u5e94\u7ef4\u5ea6\u4e3a3\uff08\u4e0b\u6807\u4ece0\u5f00\u59cb\uff09\uff0c\u90a3\u4e48\u8ba1\u7b97\u7ed3\u679c\u5c31\u662f\u77e9\u9635\u7684\u7b2c3\u884c\uff08\u4e0b\u6807\u4ece0\u5f00\u59cb\uff09\u2014\u2014 [10, 12, 19]\uff0c\u8fd9\u6837\u6a21\u578b\u4e2d\u7684\u9690\u5c42\u6743\u91cd\u77e9\u9635\u4fbf\u6210\u4e86\u4e00\u4e2a\u201d\u67e5\u627e\u8868\u201c\uff08lookup table\uff09\uff0c\u8fdb\u884c\u77e9\u9635\u8ba1\u7b97\u65f6\uff0c\u76f4\u63a5\u53bb\u67e5\u8f93\u5165\u5411\u91cf\u4e2d\u53d6\u503c\u4e3a1\u7684\u7ef4\u5ea6\u4e0b\u5bf9\u5e94\u7684\u90a3\u4e9b\u6743\u91cd\u503c\u3002\u9690\u5c42\u7684\u8f93\u51fa\u5c31\u662f\u6bcf\u4e2a\u8f93\u5165\u5355\u8bcd\u7684\u201c\u5d4c\u5165\u8bcd\u5411\u91cf\u201d\u3002\\n\\n## \u8f93\u51fa\u5c42\\n\\n\u7ecf\u8fc7\u795e\u7ecf\u7f51\u7edc\u9690\u5c42\u7684\u8ba1\u7b97\uff0cants\u8fd9\u4e2a\u8bcd\u4f1a\u4ece\u4e00\u4e2a1 x 10000\u7684\u5411\u91cf\u53d8\u62101 x 300\u7684\u5411\u91cf\uff0c\u518d\u88ab\u8f93\u5165\u5230\u8f93\u51fa\u5c42\u3002\u8f93\u51fa\u5c42\u662f\u4e00\u4e2asoftmax\u56de\u5f52\u5206\u7c7b\u5668\uff0c\u5b83\u7684\u6bcf\u4e2a\u7ed3\u70b9\u5c06\u4f1a\u8f93\u51fa\u4e00\u4e2a0-1\u4e4b\u95f4\u7684\u503c\uff08\u6982\u7387\uff09\uff0c\u8fd9\u4e9b\u6240\u6709\u8f93\u51fa\u5c42\u795e\u7ecf\u5143\u7ed3\u70b9\u7684\u6982\u7387\u4e4b\u548c\u4e3a1\u3002\\n\\n\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50\uff0c\u8bad\u7ec3\u6837\u672c\u4e3a (input word: \u201cants\u201d\uff0c output word: \u201ccar\u201d) \u7684\u8ba1\u7b97\u793a\u610f\u56fe\u3002\\n\\n![\u4e00\u6587\u8be6\u89e3 Word2vec \u4e4b Skip-Gram \u6a21\u578b\uff08\u7ed3\u6784\u7bc7\uff09](https://static.leiphone.com/uploads/new/article/740_740/201706/594b3267c64f4.png?imageMogr2/format/jpg/quality/90)\\n\\n## \u76f4\u89c9\u4e0a\u7684\u7406\u89e3\\n\\n\u4e0b\u9762\u6211\u4eec\u5c06\u901a\u8fc7\u76f4\u89c9\u6765\u8fdb\u884c\u4e00\u4e9b\u601d\u8003\u3002\\n\\n\u5982\u679c\u4e24\u4e2a\u4e0d\u540c\u7684\u5355\u8bcd\u6709\u7740\u975e\u5e38\u76f8\u4f3c\u7684\u201c\u4e0a\u4e0b\u6587\u201d\uff08\u4e5f\u5c31\u662f\u7a97\u53e3\u5355\u8bcd\u5f88\u76f8\u4f3c\uff0c\u6bd4\u5982\u201cKitty climbed the tree\u201d\u548c\u201cCat climbed the tree\u201d\uff09\uff0c\u90a3\u4e48\u901a\u8fc7\u6211\u4eec\u7684\u6a21\u578b\u8bad\u7ec3\uff0c\u8fd9\u4e24\u4e2a\u5355\u8bcd\u7684\u5d4c\u5165\u5411\u91cf\u5c06\u975e\u5e38\u76f8\u4f3c\u3002\\n\\n\u90a3\u4e48\u4e24\u4e2a\u5355\u8bcd\u62e5\u6709\u76f8\u4f3c\u7684\u201c\u4e0a\u4e0b\u6587\u201d\u5230\u5e95\u662f\u4ec0\u4e48\u542b\u4e49\u5462\uff1f\u6bd4\u5982\u5bf9\u4e8e\u540c\u4e49\u8bcd\u201cintelligent\u201d\u548c\u201csmart\u201d\uff0c\u6211\u4eec\u89c9\u5f97\u8fd9\u4e24\u4e2a\u5355\u8bcd\u5e94\u8be5\u62e5\u6709\u76f8\u540c\u7684\u201c\u4e0a\u4e0b\u6587\u201d\u3002\u800c\u4f8b\u5982\u201dengine\u201c\u548c\u201dtransmission\u201c\u8fd9\u6837\u76f8\u5173\u7684\u8bcd\u8bed\uff0c\u53ef\u80fd\u4e5f\u62e5\u6709\u7740\u76f8\u4f3c\u7684\u4e0a\u4e0b\u6587\u3002\\n\\n\u5b9e\u9645\u4e0a\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5b9e\u9645\u4e0a\u4e5f\u53ef\u4ee5\u5e2e\u52a9\u4f60\u8fdb\u884c\u8bcd\u5e72\u5316\uff08stemming\uff09\uff0c\u4f8b\u5982\uff0c\u795e\u7ecf\u7f51\u7edc\u5bf9\u201dant\u201c\u548c\u201dants\u201d\u4e24\u4e2a\u5355\u8bcd\u4f1a\u4e60\u5f97\u76f8\u4f3c\u7684\u8bcd\u5411\u91cf\u3002\\n\\n> \u8bcd\u5e72\u5316\uff08stemming\uff09\u5c31\u662f\u53bb\u9664\u8bcd\u7f00\u5f97\u5230\u8bcd\u6839\u7684\u8fc7\u7a0b\u3002\\n\\n\\n\\n\u5728\u7b2c\u4e00\u90e8\u5206\u8bb2\u89e3\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0Word2Vec\u6a21\u578b\u662f\u4e00\u4e2a\u8d85\u7ea7\u5927\u7684\u795e\u7ecf\u7f51\u7edc\uff08\u6743\u91cd\u77e9\u9635\u89c4\u6a21\u975e\u5e38\u5927\uff09\u3002\\n\\n\u4e3e\u4e2a\u6817\u5b50\uff0c\u6211\u4eec\u62e5\u670910000\u4e2a\u5355\u8bcd\u7684\u8bcd\u6c47\u8868\uff0c\u6211\u4eec\u5982\u679c\u60f3\u5d4c\u5165300\u7ef4\u7684\u8bcd\u5411\u91cf\uff0c\u90a3\u4e48\u6211\u4eec\u7684**\u8f93\u5165-\u9690\u5c42\u6743\u91cd\u77e9\u9635**\u548c**\u9690\u5c42-\u8f93\u51fa\u5c42\u7684\u6743\u91cd\u77e9\u9635**\u90fd\u4f1a\u6709 10000 x 300 = 300\u4e07\u4e2a\u6743\u91cd\uff0c\u5728\u5982\u6b64\u5e9e\u5927\u7684\u795e\u7ecf\u7f51\u7edc\u4e2d\u8fdb\u884c\u68af\u5ea6\u4e0b\u964d\u662f\u76f8\u5f53\u6162\u7684\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u4f60\u9700\u8981\u5927\u91cf\u7684\u8bad\u7ec3\u6570\u636e\u6765\u8c03\u6574\u8fd9\u4e9b\u6743\u91cd\u5e76\u4e14\u907f\u514d\u8fc7\u62df\u5408\u3002\u767e\u4e07\u6570\u91cf\u7ea7\u7684\u6743\u91cd\u77e9\u9635\u548c\u4ebf\u4e07\u6570\u91cf\u7ea7\u7684\u8bad\u7ec3\u6837\u672c\u610f\u5473\u7740\u8bad\u7ec3\u8fd9\u4e2a\u6a21\u578b\u5c06\u4f1a\u662f\u4e2a\u707e\u96be\uff08\u592a\u51f6\u6b8b\u4e86\uff09\u3002\\n\\nWord2Vec \u7684\u4f5c\u8005\u5728\u5b83\u7684\u7b2c\u4e8c\u7bc7\u8bba\u6587\u4e2d\u5f3a\u8c03\u4e86\u8fd9\u4e9b\u95ee\u9898\uff0c\u4e0b\u9762\u662f\u4f5c\u8005\u5728\u7b2c\u4e8c\u7bc7\u8bba\u6587\u4e2d\u7684\u4e09\u4e2a\u521b\u65b0\uff1a\\n\\n> 1.\u5c06\u5e38\u89c1\u7684\u5355\u8bcd\u7ec4\u5408\uff08word pairs\uff09\u6216\u8005\u8bcd\u7ec4\u4f5c\u4e3a\u5355\u4e2a\u201cwords\u201d\u6765\u5904\u7406\u3002\\n>\\n> 2.\u5bf9\u9ad8\u9891\u6b21\u5355\u8bcd\u8fdb\u884c\u62bd\u6837\u6765\u51cf\u5c11\u8bad\u7ec3\u6837\u672c\u7684\u4e2a\u6570\u3002\\n>\\n> 3.\u5bf9\u4f18\u5316\u76ee\u6807\u91c7\u7528\u201cnegative sampling\u201d\u65b9\u6cd5\uff0c\u8fd9\u6837\u6bcf\u4e2a\u8bad\u7ec3\u6837\u672c\u7684\u8bad\u7ec3\u53ea\u4f1a\u66f4\u65b0\u4e00\u5c0f\u90e8\u5206\u7684\u6a21\u578b\u6743\u91cd\uff0c\u4ece\u800c\u964d\u4f4e\u8ba1\u7b97\u8d1f\u62c5\u3002\\n\\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5bf9\u5e38\u7528\u8bcd\u62bd\u6837\u5e76\u4e14\u5bf9\u4f18\u5316\u76ee\u6807\u91c7\u7528\u201cnegative sampling\u201d\u4e0d\u4ec5\u964d\u4f4e\u4e86\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7684\u8ba1\u7b97\u8d1f\u62c5\uff0c\u8fd8\u63d0\u9ad8\u4e86\u8bad\u7ec3\u7684\u8bcd\u5411\u91cf\u7684\u8d28\u91cf\u3002\\n\\n## Word pairs and \\"phases\\"\\n\\n\u8bba\u6587\u7684\u4f5c\u8005\u6307\u51fa\uff0c\u4e00\u4e9b\u5355\u8bcd\u7ec4\u5408\uff08\u6216\u8005\u8bcd\u7ec4\uff09\u7684\u542b\u4e49\u548c\u62c6\u5f00\u4ee5\u540e\u5177\u6709\u5b8c\u5168\u4e0d\u540c\u7684\u610f\u4e49\u3002\u6bd4\u5982\u201cBoston Globe\u201d\u662f\u4e00\u79cd\u62a5\u520a\u7684\u540d\u5b57\uff0c\u800c\u5355\u72ec\u7684\u201cBoston\u201d\u548c\u201cGlobe\u201d\u8fd9\u6837\u5355\u4e2a\u7684\u5355\u8bcd\u5374\u8868\u8fbe\u4e0d\u51fa\u8fd9\u6837\u7684\u542b\u4e49\u3002\u56e0\u6b64\uff0c\u5728\u6587\u7ae0\u4e2d\u53ea\u8981\u51fa\u73b0\u201cBoston Globe\u201d\uff0c\u6211\u4eec\u5c31\u5e94\u8be5\u628a\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u8bcd\u6765\u751f\u6210\u5176\u8bcd\u5411\u91cf\uff0c\u800c\u4e0d\u662f\u5c06\u5176\u62c6\u5f00\u3002\u540c\u6837\u7684\u4f8b\u5b50\u8fd8\u6709\u201cNew York\u201d\uff0c\u201cUnited Stated\u201d\u7b49\u3002\\n\\n\u5728Google\u53d1\u5e03\u7684\u6a21\u578b\u4e2d\uff0c\u5b83\u672c\u8eab\u7684\u8bad\u7ec3\u6837\u672c\u4e2d\u6709\u6765\u81eaGoogle News\u6570\u636e\u96c6\u4e2d\u76841000\u4ebf\u7684\u5355\u8bcd\uff0c\u4f46\u662f\u9664\u4e86\u5355\u4e2a\u5355\u8bcd\u4ee5\u5916\uff0c\u5355\u8bcd\u7ec4\u5408\uff08\u6216\u8bcd\u7ec4\uff09\u53c8\u67093\u767e\u4e07\u4e4b\u591a\u3002\\n\\n\u5982\u679c\u4f60\u5bf9\u6a21\u578b\u7684\u8bcd\u6c47\u8868\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u70b9\u51fb\uff1a\\n\\n<http://t.cn/RoVde3h>\\n\\n\u4f60\u8fd8\u53ef\u4ee5\u76f4\u63a5\u6d4f\u89c8\u8fd9\u4e2a\u8bcd\u6c47\u8868\uff1a\\n\\n<http://t.cn/RoVdsZr>\\n\\n\u5982\u679c\u60f3\u4e86\u89e3\u8fd9\u4e2a\u6a21\u578b\u5982\u4f55\u8fdb\u884c\u6587\u6863\u4e2d\u7684\u8bcd\u7ec4\u62bd\u53d6\uff0c\u53ef\u4ee5\u770b\u8bba\u6587\u4e2d\u201cLearning Phrases\u201d\u8fd9\u4e00\u7ae0\uff0c\u5bf9\u5e94\u7684\u4ee3\u7801\u5728 word2phrase.c \uff0c\u76f8\u5173\u94fe\u63a5\u5982\u4e0b\u3002\\n\\n> \u8bba\u6587\u94fe\u63a5\uff1a\\n>\\n> <http://t.cn/RMct1c7>\\n\\n> \u4ee3\u7801\u94fe\u63a5\uff1a\\n>\\n> [http://t.cn/R5auFLz](http://t.cn/RMct1c7)\\n\\n## \u5bf9\u9ad8\u9891\u8bcd\u62bd\u6837\\n\\n\u5728\u7b2c\u4e00\u90e8\u5206\u7684\u8bb2\u89e3\u4e2d\uff0c\u6211\u4eec\u5c55\u793a\u4e86\u8bad\u7ec3\u6837\u672c\u662f\u5982\u4f55\u4ece\u539f\u59cb\u6587\u6863\u4e2d\u751f\u6210\u51fa\u6765\u7684\uff0c\u8fd9\u91cc\u6211\u518d\u91cd\u590d\u4e00\u6b21\u3002\u6211\u4eec\u7684\u539f\u59cb\u6587\u672c\u4e3a\u201cThe quick brown fox jumps over the laze dog\u201d\uff0c\u5982\u679c\u6211\u4f7f\u7528\u5927\u5c0f\u4e3a2\u7684\u7a97\u53e3\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u56fe\u4e2d\u5c55\u793a\u7684\u90a3\u4e9b\u8bad\u7ec3\u6837\u672c\u3002\\n\\n![\u4e00\u6587\u8be6\u89e3 Word2vec \u4e4b Skip-Gram \u6a21\u578b\uff08\u8bad\u7ec3\u7bc7\uff09](https://static.leiphone.com/uploads/new/article/740_740/201706/594b387f8455d.png?imageMogr2/format/jpg/quality/90)\\n\\n\u4f46\u662f\u5bf9\u4e8e\u201cthe\u201d\u8fd9\u79cd\u5e38\u7528\u9ad8\u9891\u5355\u8bcd\uff0c\u8fd9\u6837\u7684\u5904\u7406\u65b9\u5f0f\u4f1a\u5b58\u5728\u4e0b\u9762\u4e24\u4e2a\u95ee\u9898\uff1a\\n\\n> 1. \u5f53\u6211\u4eec\u5f97\u5230\u6210\u5bf9\u7684\u5355\u8bcd\u8bad\u7ec3\u6837\u672c\u65f6\uff0c(\\"fox\\", \\"the\\") \u8fd9\u6837\u7684\u8bad\u7ec3\u6837\u672c\u5e76\u4e0d\u4f1a\u7ed9\u6211\u4eec\u63d0\u4f9b\u5173\u4e8e\u201cfox\u201d\u66f4\u591a\u7684\u8bed\u4e49\u4fe1\u606f\uff0c\u56e0\u4e3a\u201cthe\u201d\u5728\u6bcf\u4e2a\u5355\u8bcd\u7684\u4e0a\u4e0b\u6587\u4e2d\u51e0\u4e4e\u90fd\u4f1a\u51fa\u73b0\u3002\\n> 2. \u7531\u4e8e\u5728\u6587\u672c\u4e2d\u201cthe\u201d\u8fd9\u6837\u7684\u5e38\u7528\u8bcd\u51fa\u73b0\u6982\u7387\u5f88\u5927\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u4f1a\u6709\u5927\u91cf\u7684\uff08\u201dthe\u201c\uff0c...\uff09\u8fd9\u6837\u7684\u8bad\u7ec3\u6837\u672c\uff0c\u800c\u8fd9\u4e9b\u6837\u672c\u6570\u91cf\u8fdc\u8fdc\u8d85\u8fc7\u4e86\u6211\u4eec\u5b66\u4e60\u201cthe\u201d\u8fd9\u4e2a\u8bcd\u5411\u91cf\u6240\u9700\u7684\u8bad\u7ec3\u6837\u672c\u6570\u3002\\n\\nWord2Vec\u901a\u8fc7\u201c\u62bd\u6837\u201d\u6a21\u5f0f\u6765\u89e3\u51b3\u8fd9\u79cd\u9ad8\u9891\u8bcd\u95ee\u9898\u3002\u5b83\u7684\u57fa\u672c\u601d\u60f3\u5982\u4e0b\uff1a\u5bf9\u4e8e\u6211\u4eec\u5728\u8bad\u7ec3\u539f\u59cb\u6587\u672c\u4e2d\u9047\u5230\u7684\u6bcf\u4e00\u4e2a\u5355\u8bcd\uff0c\u5b83\u4eec\u90fd\u6709\u4e00\u5b9a\u6982\u7387\u88ab\u6211\u4eec\u4ece\u6587\u672c\u4e2d\u5220\u6389\uff0c\u800c\u8fd9\u4e2a\u88ab\u5220\u9664\u7684\u6982\u7387\u4e0e\u5355\u8bcd\u7684\u9891\u7387\u6709\u5173\u3002\\n\u5982\u679c\u6211\u4eec\u8bbe\u7f6e\u7a97\u53e3\u5927\u5c0f\uff08\u5373\uff09\uff0c\u5e76\u4e14\u4ece\u6211\u4eec\u7684\u6587\u672c\u4e2d\u5220\u9664\u6240\u6709\u7684\u201cthe\u201d\uff0c\u90a3\u4e48\u4f1a\u6709\u4e0b\u9762\u7684\u7ed3\u679c\uff1a\\n\\n- \u7531\u4e8e\u6211\u4eec\u5220\u9664\u4e86\u6587\u672c\u4e2d\u6240\u6709\u7684\u201cthe\u201d\uff0c\u90a3\u4e48\u5728\u6211\u4eec\u7684\u8bad\u7ec3\u6837\u672c\u4e2d\uff0c\u201cthe\u201d\u8fd9\u4e2a\u8bcd\u6c38\u8fdc\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u5728\u6211\u4eec\u7684\u4e0a\u4e0b\u6587\u7a97\u53e3\u4e2d\u3002\\n\\n- \u5f53\u201cthe\u201d\u4f5c\u4e3ainput word\u65f6\uff0c\u6211\u4eec\u7684\u8bad\u7ec3\u6837\u672c\u6570\u81f3\u5c11\u4f1a\u51cf\u5c1110\u4e2a\u3002\\n\\n> \u8fd9\u53e5\u8bdd\u5e94\u8be5\u8fd9\u4e48\u7406\u89e3\uff0c\u5047\u5982\u6211\u4eec\u7684\u6587\u672c\u4e2d\u4ec5\u51fa\u73b0\u4e86\u4e00\u4e2a\u201cthe\u201d\uff0c\u90a3\u4e48\u5f53\u8fd9\u4e2a\u201cthe\u201d\u4f5c\u4e3ainput word\u65f6\uff0c\u6211\u4eec\u8bbe\u7f6espan=10\uff0c\u6b64\u65f6\u4f1a\u5f97\u523010\u4e2a\u8bad\u7ec3\u6837\u672c (\\"the\\", ...) \uff0c\u5982\u679c\u5220\u6389\u8fd9\u4e2a\u201cthe\u201d\uff0c\u6211\u4eec\u5c31\u4f1a\u51cf\u5c1110\u4e2a\u8bad\u7ec3\u6837\u672c\u3002\u5b9e\u9645\u4e2d\u6211\u4eec\u7684\u6587\u672c\u4e2d\u4e0d\u6b62\u4e00\u4e2a\u201cthe\u201d\uff0c\u56e0\u6b64\u5f53\u201cthe\u201d\u4f5c\u4e3ainput word\u7684\u65f6\u5019\uff0c\u81f3\u5c11\u4f1a\u51cf\u5c1110\u4e2a\u8bad\u7ec3\u6837\u672c\u3002\\n\\n\u4e0a\u9762\u63d0\u5230\u7684\u8fd9\u4e24\u4e2a\u5f71\u54cd\u7ed3\u679c\u5b9e\u9645\u4e0a\u5c31\u5e2e\u52a9\u6211\u4eec\u89e3\u51b3\u4e86\u9ad8\u9891\u8bcd\u5e26\u6765\u7684\u95ee\u9898\u3002\\n\\n## \u62bd\u6837\u7387\\n\\nword2vec\u7684C\u8bed\u8a00\u4ee3\u7801\u5b9e\u73b0\u4e86\u4e00\u4e2a\u8ba1\u7b97\u5728\u8bcd\u6c47\u8868\u4e2d\u4fdd\u7559\u67d0\u4e2a\u8bcd\u6982\u7387\u7684\u516c\u5f0f\u3002\\n\\n\u03c9i \u662f\u4e00\u4e2a\u5355\u8bcd\uff0cZ(\u03c9i) \u662f \u03c9i \u8fd9\u4e2a\u5355\u8bcd\u5728\u6240\u6709\u8bed\u6599\u4e2d\u51fa\u73b0\u7684\u9891\u6b21\u3002\u4e3e\u4e2a\u6817\u5b50\uff0c\u5982\u679c\u5355\u8bcd\u201cpeanut\u201d\u572810\u4ebf\u89c4\u6a21\u5927\u5c0f\u7684\u8bed\u6599\u4e2d\u51fa\u73b0\u4e861000\u6b21\uff0c\u90a3\u4e48 Z(peanut) = 1000/1000000000 = 1e - 6\u3002\\n\\n\u5728\u4ee3\u7801\u4e2d\u8fd8\u6709\u4e00\u4e2a\u53c2\u6570\u53eb\u201csample\u201d\uff0c\u8fd9\u4e2a\u53c2\u6570\u4ee3\u8868\u4e00\u4e2a\u9608\u503c\uff0c\u9ed8\u8ba4\u503c\u4e3a0.001**\uff08\u5728gensim\u5305\u4e2d\u7684Word2Vec\u7c7b\u8bf4\u660e\u4e2d\uff0c\u8fd9\u4e2a\u53c2\u6570\u9ed8\u8ba4\u4e3a0.001\uff0c\u6587\u6863\u4e2d\u5bf9\u8fd9\u4e2a\u53c2\u6570\u7684\u89e3\u91ca\u4e3a\u201c threshold for configuring which higher-frequency words are randomly downsampled\u201d\uff09**\u3002\u8fd9\u4e2a\u503c\u8d8a\u5c0f\u610f\u5473\u7740\u8fd9\u4e2a\u5355\u8bcd\u88ab\u4fdd\u7559\u4e0b\u6765\u7684\u6982\u7387\u8d8a\u5c0f\uff08\u5373\u6709\u8d8a\u5927\u7684\u6982\u7387\u88ab\u6211\u4eec\u5220\u9664\uff09\u3002\\n\\nP(\u03c9i) \u4ee3\u8868\u7740\u4fdd\u7559\u67d0\u4e2a\u5355\u8bcd\u7684\u6982\u7387\uff1a\\n\\n![\u4e00\u6587\u8be6\u89e3 Word2vec \u4e4b Skip-Gram \u6a21\u578b\uff08\u8bad\u7ec3\u7bc7\uff09](https://static.leiphone.com/uploads/new/article/740_740/201706/594b3a020bdea.png?imageMogr2/format/jpg/quality/90)\\n\\n![\u4e00\u6587\u8be6\u89e3 Word2vec \u4e4b Skip-Gram \u6a21\u578b\uff08\u8bad\u7ec3\u7bc7\uff09](https://static.leiphone.com/uploads/new/article/740_740/201706/594b3a191fdcd.png?imageMogr2/format/jpg/quality/90)\\n\\n\u56fe\u4e2dx\u8f74\u4ee3\u8868\u7740 Z(\u03c9i) \uff0c\u5373\u5355\u8bcd \u03c9i \u5728\u8bed\u6599\u4e2d\u51fa\u73b0\u9891\u7387\uff0cy\u8f74\u4ee3\u8868\u67d0\u4e2a\u5355\u8bcd\u88ab\u4fdd\u7559\u7684\u6982\u7387\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5e9e\u5927\u7684\u8bed\u6599\u6765\u8bf4\uff0c\u5355\u4e2a\u5355\u8bcd\u7684\u51fa\u73b0\u9891\u7387\u4e0d\u4f1a\u5f88\u5927\uff0c\u5373\u4f7f\u662f\u5e38\u7528\u8bcd\uff0c\u4e5f\u4e0d\u53ef\u80fd\u7279\u522b\u5927\u3002\\n\\n\u4ece\u8fd9\u4e2a\u56fe\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u968f\u7740\u5355\u8bcd\u51fa\u73b0\u9891\u7387\u7684\u589e\u9ad8\uff0c\u5b83\u88ab\u91c7\u6837\u4fdd\u7559\u7684\u6982\u7387\u8d8a\u6765\u8d8a\u5c0f\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u770b\u5230\u4e00\u4e9b\u6709\u8da3\u7684\u7ed3\u8bba\uff1a\\n\\n- \u5f53 Z(\u03c9i) <= 0.0026 \u65f6\uff0cP(\u03c9i) = 1.0 \u3002\u5f53\u5355\u8bcd\u5728\u8bed\u6599\u4e2d\u51fa\u73b0\u7684\u9891\u7387\u5c0f\u4e8e 0.0026 \u65f6\uff0c\u5b83\u662f 100% \u88ab\u4fdd\u7559\u7684\uff0c\u8fd9\u610f\u5473\u7740\u53ea\u6709\u90a3\u4e9b\u5728\u8bed\u6599\u4e2d\u51fa\u73b0\u9891\u7387\u8d85\u8fc7 0.26% \u7684\u5355\u8bcd\u624d\u4f1a\u88ab\u91c7\u6837\u3002\\n\\n- \u5f53\u65f6 Z(\u03c9i) = 0.00746 \u65f6\uff0cP(\u03c9i) = 0.5\uff0c\u610f\u5473\u7740\u8fd9\u4e00\u90e8\u5206\u7684\u5355\u8bcd\u6709 50% \u7684\u6982\u7387\u88ab\u4fdd\u7559\u3002\\n\\n- \u5f53 Z(\u03c9i) = 1.0 \u65f6\uff0cP(\u03c9i) = 0.033\uff0c\u610f\u5473\u7740\u8fd9\u90e8\u5206\u5355\u8bcd\u4ee5 3.3% \u7684\u6982\u7387\u88ab\u4fdd\u7559\u3002\\n\\n> \u5982\u679c\u4f60\u53bb\u770b\u90a3\u7bc7\u8bba\u6587\u7684\u8bdd\uff0c\u4f60\u4f1a\u53d1\u73b0\u4f5c\u8005\u5728\u8bba\u6587\u4e2d\u5bf9\u51fd\u6570\u516c\u5f0f\u7684\u5b9a\u4e49\u548c\u5728C\u8bed\u8a00\u4ee3\u7801\u7684\u5b9e\u73b0\u4e0a\u6709\u4e00\u4e9b\u5dee\u522b\uff0c\u4f46\u6211\u8ba4\u4e3aC\u8bed\u8a00\u4ee3\u7801\u7684\u516c\u5f0f\u5b9e\u73b0\u662f\u66f4\u6743\u5a01\u7684\u4e00\u4e2a\u7248\u672c\u3002\\n\\n## \u8d1f\u91c7\u6837\uff08negative sampling\uff09\\n\\n\u8bad\u7ec3\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u610f\u5473\u7740\u8981\u8f93\u5165\u8bad\u7ec3\u6837\u672c\u5e76\u4e14\u4e0d\u65ad\u8c03\u6574\u795e\u7ecf\u5143\u7684\u6743\u91cd\uff0c\u4ece\u800c\u4e0d\u65ad\u63d0\u9ad8\u5bf9\u76ee\u6807\u7684\u51c6\u786e\u9884\u6d4b\u3002\u6bcf\u5f53\u795e\u7ecf\u7f51\u7edc\u7ecf\u8fc7\u4e00\u4e2a\u8bad\u7ec3\u6837\u672c\u7684\u8bad\u7ec3\uff0c\u5b83\u7684\u6743\u91cd\u5c31\u4f1a\u8fdb\u884c\u4e00\u6b21\u8c03\u6574\u3002\\n\u6b63\u5982\u6211\u4eec\u4e0a\u9762\u6240\u8ba8\u8bba\u7684\uff0cvocabulary\u7684\u5927\u5c0f\u51b3\u5b9a\u4e86\u6211\u4eec\u7684Skip-Gram\u795e\u7ecf\u7f51\u7edc\u5c06\u4f1a\u62e5\u6709\u5927\u89c4\u6a21\u7684\u6743\u91cd\u77e9\u9635\uff0c\u6240\u6709\u7684\u8fd9\u4e9b\u6743\u91cd\u9700\u8981\u901a\u8fc7\u6211\u4eec\u6570\u4ee5\u4ebf\u8ba1\u7684\u8bad\u7ec3\u6837\u672c\u6765\u8fdb\u884c\u8c03\u6574\uff0c\u8fd9\u662f\u975e\u5e38\u6d88\u8017\u8ba1\u7b97\u8d44\u6e90\u7684\uff0c\u5e76\u4e14\u5b9e\u9645\u4e2d\u8bad\u7ec3\u8d77\u6765\u4f1a\u975e\u5e38\u6162\u3002\\n**\u8d1f\u91c7\u6837\uff08negative sampling\uff09**\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u5b83\u662f\u7528\u6765\u63d0\u9ad8\u8bad\u7ec3\u901f\u5ea6\u5e76\u4e14\u6539\u5584\u6240\u5f97\u5230\u8bcd\u5411\u91cf\u7684\u8d28\u91cf\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\u4e0d\u540c\u4e8e\u539f\u672c\u6bcf\u4e2a\u8bad\u7ec3\u6837\u672c\u66f4\u65b0\u6240\u6709\u7684\u6743\u91cd\uff0c\u8d1f\u91c7\u6837\u6bcf\u6b21\u8ba9\u4e00\u4e2a\u8bad\u7ec3\u6837\u672c\u4ec5\u4ec5\u66f4\u65b0\u4e00\u5c0f\u90e8\u5206\u7684\u6743\u91cd\uff0c\u8fd9\u6837\u5c31\u4f1a\u964d\u4f4e\u68af\u5ea6\u4e0b\u964d\u8fc7\u7a0b\u4e2d\u7684\u8ba1\u7b97\u91cf\u3002\\n\u5f53\u6211\u4eec\u7528\u8bad\u7ec3\u6837\u672c ( input word: \\"fox\\"\uff0coutput word: \\"quick\\") \u6765\u8bad\u7ec3\u6211\u4eec\u7684\u795e\u7ecf\u7f51\u7edc\u65f6\uff0c\u201c fox\u201d\u548c\u201cquick\u201d\u90fd\u662f\u7ecf\u8fc7one-hot\u7f16\u7801\u7684\u3002\u5982\u679c\u6211\u4eec\u7684vocabulary\u5927\u5c0f\u4e3a10000\u65f6\uff0c\u5728\u8f93\u51fa\u5c42\uff0c\u6211\u4eec\u671f\u671b\u5bf9\u5e94\u201cquick\u201d\u5355\u8bcd\u7684\u90a3\u4e2a\u795e\u7ecf\u5143\u7ed3\u70b9\u8f93\u51fa1\uff0c\u5176\u4f599999\u4e2a\u90fd\u5e94\u8be5\u8f93\u51fa0\u3002\u5728\u8fd9\u91cc\uff0c\u8fd99999\u4e2a\u6211\u4eec\u671f\u671b\u8f93\u51fa\u4e3a0\u7684\u795e\u7ecf\u5143\u7ed3\u70b9\u6240\u5bf9\u5e94\u7684\u5355\u8bcd\u6211\u4eec\u79f0\u4e3a\u201cnegative\u201d word\u3002\\n\u5f53\u4f7f\u7528\u8d1f\u91c7\u6837\u65f6\uff0c\u6211\u4eec\u5c06\u968f\u673a\u9009\u62e9\u4e00\u5c0f\u90e8\u5206\u7684negative words\uff08\u6bd4\u5982\u90095\u4e2anegative words\uff09\u6765\u66f4\u65b0\u5bf9\u5e94\u7684\u6743\u91cd\u3002\u6211\u4eec\u4e5f\u4f1a\u5bf9\u6211\u4eec\u7684\u201cpositive\u201d word\u8fdb\u884c\u6743\u91cd\u66f4\u65b0\uff08\u5728\u6211\u4eec\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u8fd9\u4e2a\u5355\u8bcd\u6307\u7684\u662f\u201dquick\u201c\uff09\u3002\\n\\n> \u5728\u8bba\u6587\u4e2d\uff0c\u4f5c\u8005\u6307\u51fa\u6307\u51fa\u5bf9\u4e8e\u5c0f\u89c4\u6a21\u6570\u636e\u96c6\uff0c\u9009\u62e95-20\u4e2anegative words\u4f1a\u6bd4\u8f83\u597d\uff0c\u5bf9\u4e8e\u5927\u89c4\u6a21\u6570\u636e\u96c6\u53ef\u4ee5\u4ec5\u9009\u62e92-5\u4e2anegative words\u3002\\n\\n\u56de\u5fc6\u4e00\u4e0b\u6211\u4eec\u7684\u9690\u5c42-\u8f93\u51fa\u5c42\u62e5\u6709300 x 10000\u7684\u6743\u91cd\u77e9\u9635\u3002\u5982\u679c\u4f7f\u7528\u4e86\u8d1f\u91c7\u6837\u7684\u65b9\u6cd5\u6211\u4eec\u4ec5\u4ec5\u53bb\u66f4\u65b0\u6211\u4eec\u7684positive word-\u201cquick\u201d\u7684\u548c\u6211\u4eec\u9009\u62e9\u7684\u5176\u4ed65\u4e2anegative words\u7684\u7ed3\u70b9\u5bf9\u5e94\u7684\u6743\u91cd\uff0c\u5171\u8ba16\u4e2a\u8f93\u51fa\u795e\u7ecf\u5143\uff0c\u76f8\u5f53\u4e8e\u6bcf\u6b21\u53ea\u66f4\u65b0 300 x 6 = 1800 \u4e2a\u6743\u91cd\u3002\u5bf9\u4e8e3\u767e\u4e07\u7684\u6743\u91cd\u6765\u8bf4\uff0c\u76f8\u5f53\u4e8e\u53ea\u8ba1\u7b97\u4e860.06%\u7684\u6743\u91cd\uff0c\u8fd9\u6837\u8ba1\u7b97\u6548\u7387\u5c31\u5927\u5e45\u5ea6\u63d0\u9ad8\u3002\\n\\n## \u5982\u4f55\u9009\u62e9negative words\\n\\n\u6211\u4eec\u4f7f\u7528\u201c\u4e00\u5143\u6a21\u578b\u5206\u5e03\uff08unigram distribution\uff09\u201d\u6765\u9009\u62e9\u201cnegative words\u201d\u3002\\n\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u4e00\u4e2a\u5355\u8bcd\u88ab\u9009\u4f5cnegative sample\u7684\u6982\u7387\u8ddf\u5b83\u51fa\u73b0\u7684\u9891\u6b21\u6709\u5173\uff0c\u51fa\u73b0\u9891\u6b21\u8d8a\u9ad8\u7684\u5355\u8bcd\u8d8a\u5bb9\u6613\u88ab\u9009\u4f5cnegative words\u3002\\n\u5728word2vec\u7684C\u8bed\u8a00\u5b9e\u73b0\u4e2d\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\u5bf9\u4e8e\u8fd9\u4e2a\u6982\u7387\u7684\u5b9e\u73b0\u516c\u5f0f\u3002\u6bcf\u4e2a\u5355\u8bcd\u88ab\u9009\u4e3a\u201cnegative words\u201d\u7684\u6982\u7387\u8ba1\u7b97\u516c\u5f0f\u4e0e\u5176\u51fa\u73b0\u7684\u9891\u6b21\u6709\u5173\u3002\\n\u4ee3\u7801\u4e2d\u7684\u516c\u5f0f\u5b9e\u73b0\u5982\u4e0b\uff1a\\n\\n![\u4e00\u6587\u8be6\u89e3 Word2vec \u4e4b Skip-Gram \u6a21\u578b\uff08\u8bad\u7ec3\u7bc7\uff09](https://static.leiphone.com/uploads/new/article/740_740/201706/594b3b5516125.png?imageMogr2/format/jpg/quality/90)\\n\\n\u6bcf\u4e2a\u5355\u8bcd\u88ab\u8d4b\u4e88\u4e00\u4e2a\u6743\u91cd\uff0c\u5373 f(\u03c9i)\uff0c \u5b83\u4ee3\u8868\u7740\u5355\u8bcd\u51fa\u73b0\u7684\u9891\u6b21\u3002\\n\\n\u516c\u5f0f\u4e2d\u5f003/4\u7684\u6839\u53f7\u5b8c\u5168\u662f\u57fa\u4e8e\u7ecf\u9a8c\u7684\uff0c\u8bba\u6587\u4e2d\u63d0\u5230\u8fd9\u4e2a\u516c\u5f0f\u7684\u6548\u679c\u8981\u6bd4\u5176\u5b83\u516c\u5f0f\u66f4\u52a0\u51fa\u8272\u3002\u4f60\u53ef\u4ee5\u5728google\u7684\u641c\u7d22\u680f\u4e2d\u8f93\u5165\u201cplot y = x^(3/4) and y = x\u201d\uff0c\u7136\u540e\u770b\u5230\u8fd9\u4e24\u5e45\u56fe\uff08\u5982\u4e0b\u56fe\uff09\uff0c\u4ed4\u7ec6\u89c2\u5bdfx\u5728[0,1]\u533a\u95f4\u5185\u65f6y\u7684\u53d6\u503c\uff0cx^(3/4) \u6709\u4e00\u5c0f\u6bb5\u5f27\u5f62\uff0c\u53d6\u503c\u5728 y = x \u51fd\u6570\u4e4b\u4e0a\u3002\\n\\n![\u4e00\u6587\u8be6\u89e3 Word2vec \u4e4b Skip-Gram \u6a21\u578b\uff08\u8bad\u7ec3\u7bc7\uff09](https://static.leiphone.com/uploads/new/article/740_740/201706/594b3bb3458fc.png?imageMogr2/format/jpg/quality/90)\\n\\n\u8d1f\u91c7\u6837\u7684C\u8bed\u8a00\u5b9e\u73b0\u975e\u5e38\u7684\u6709\u8da3\u3002unigram table\u6709\u4e00\u4e2a\u5305\u542b\u4e86\u4e00\u4ebf\u4e2a\u5143\u7d20\u7684\u6570\u7ec4\uff0c\u8fd9\u4e2a\u6570\u7ec4\u662f\u7531\u8bcd\u6c47\u8868\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u7684\u7d22\u5f15\u53f7\u586b\u5145\u7684\uff0c\u5e76\u4e14\u8fd9\u4e2a\u6570\u7ec4\u4e2d\u6709\u91cd\u590d\uff0c\u4e5f\u5c31\u662f\u8bf4\u6709\u4e9b\u5355\u8bcd\u4f1a\u51fa\u73b0\u591a\u6b21\u3002\u90a3\u4e48\u6bcf\u4e2a\u5355\u8bcd\u7684\u7d22\u5f15\u5728\u8fd9\u4e2a\u6570\u7ec4\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u8be5\u5982\u4f55\u51b3\u5b9a\u5462\uff0c\u6709\u516c\u5f0f\uff0c\u4e5f\u5c31\u662f\u8bf4\u8ba1\u7b97\u51fa\u7684**\u8d1f\u91c7\u6837\u6982\u7387\\\\*1\u4ebf=\u5355\u8bcd\u5728\u8868\u4e2d\u51fa\u73b0\u7684\u6b21\u6570**\u3002\\n\\n\u6709\u4e86\u8fd9\u5f20\u8868\u4ee5\u540e\uff0c\u6bcf\u6b21\u53bb\u6211\u4eec\u8fdb\u884c\u8d1f\u91c7\u6837\u65f6\uff0c\u53ea\u9700\u8981\u57280-1\u4ebf\u8303\u56f4\u5185\u751f\u6210\u4e00\u4e2a\u968f\u673a\u6570\uff0c\u7136\u540e\u9009\u62e9\u8868\u4e2d\u7d22\u5f15\u53f7\u4e3a\u8fd9\u4e2a\u968f\u673a\u6570\u7684\u90a3\u4e2a\u5355\u8bcd\u4f5c\u4e3a\u6211\u4eec\u7684negative word\u5373\u53ef\u3002\u4e00\u4e2a\u5355\u8bcd\u7684\u8d1f\u91c7\u6837\u6982\u7387\u8d8a\u5927\uff0c\u90a3\u4e48\u5b83\u5728\u8fd9\u4e2a\u8868\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u5c31\u8d8a\u591a\uff0c\u5b83\u88ab\u9009\u4e2d\u7684\u6982\u7387\u5c31\u8d8a\u5927\u3002\\n\\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0cWord2Vec\u4e2d\u7684Skip-Gram\u6a21\u578b\u5c31\u8bb2\u5b8c\u4e86\uff0c\u5bf9\u4e8e\u91cc\u9762\u5177\u4f53\u7684\u6570\u5b66\u516c\u5f0f\u63a8\u5bfc\u7ec6\u8282\u8fd9\u91cc\u5e76\u6ca1\u6709\u6df1\u5165\u3002\u8fd9\u7bc7\u6587\u7ae0\u53ea\u662f\u5bf9\u4e8e\u5b9e\u73b0\u7ec6\u8282\u4e0a\u7684\u4e00\u4e9b\u601d\u60f3\u8fdb\u884c\u4e86\u9610\u8ff0\u3002\\n\\n\\n\\n\\n\\n```"},{"id":"/2020/3/18/google_cloud","metadata":{"permalink":"/blog/2020/3/18/google_cloud","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-3-18-google_cloud.md","source":"@site/blog/2020-3-18-google_cloud.md","title":"\u4f7f\u7528Google Cloud SDK\u6765\u914d\u7f6eGoogle App Engine","description":"Learn how to build deep learning in Google Cloud Platform Docusaurus 2 alpha.","date":"2020-03-18T00:00:00.000Z","formattedDate":"March 18, 2020","tags":[{"label":"google cloud","permalink":"/blog/tags/google-cloud"},{"label":"SDK","permalink":"/blog/tags/sdk"},{"label":"socket","permalink":"/blog/tags/socket"},{"label":"google cloud init","permalink":"/blog/tags/google-cloud-init"}],"readingTime":1.145,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI engine @ Facebook","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"google cloud","title":"\u4f7f\u7528Google Cloud SDK\u6765\u914d\u7f6eGoogle App Engine","author":"\u62db\u6653\u8d24","author_title":"AI engine @ Facebook","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["google cloud","SDK","socket","google cloud init"]},"prevItem":{"title":"word2vec\u8be6\u89e3","permalink":"/blog/2020/03/18/word2vec"},"nextItem":{"title":"textCNN\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5206\u7c7b","permalink":"/blog/2020/3/18/textCNN"}},"content":"Learn how to build deep learning in Google Cloud Platform [**Docusaurus 2 alpha**](https://v2.docusaurus.io/).\\n\\n\x3c!--truncate--\x3e\\n\\n\u4f7f\u7528Google Cloud SDK\u6765\u914d\u7f6eGoogle App Engine\\n\\nGoogle App Engine \u662f\u4e00\u4e2a\u8131\u79bb\u4e86\u57fa\u7840\u67b6\u6784\u675f\u7f1a\u7684\u5168\u9762\u6258\u7ba1\u578b\u5e73\u53f0\uff0c\u529f\u80fd\u5341\u5206\u5f3a\u5927\uff0c\u5f53\u4eca\u6700\u6210\u529f\u7684\u4e00\u4e9b\u516c\u53f8\u90fd\u7eb7\u7eb7\u5728 App Engine \u4e0a\u8fd0\u884c\u4ed6\u4eec\u7684\u5e94\u7528\u3002\\n\\n\u3000\u3000\u4e4b\u524d\u6211\u66fe\u7ecf\u4ecb\u7ecd\u8fc7\u4f7f\u7528Google App Engine SDK\u6765\u66f4\u65b0Google App Engine\u7684\u5de5\u7a0b\uff0c\u76ee\u524dGoogle App Engine\u6709\u4e86\u4e00\u4e2a\u65b0\u7684SDK\uff1aGoogle Cloud SDK\uff0c\u4f7f\u7528\u8fd9\u4e2aSDK\u80fd\u66f4\u5feb\u66f4\u9ad8\u6548\u5730\u8fdb\u884c\u7ef4\u62a4\u548c\u66f4\u65b0\u3002\u4e0b\u9762\u6211\u5c31\u4ecb\u7ecd\u4e00\u4e0bGoogle Cloud SDK\u7684\u7b80\u5355\u4f7f\u7528\u65b9\u6cd5\u3002\\n\\n\u3000\u3000\u5148\u4ece\u8fd9\u4e2a\u5730\u5740\u6765\u4e0b\u8f7d\u5b89\u88c5SDK\u73af\u5883\uff0c\u5305\u62ec\u4e0b\u8f7d\u5e76\u5b89\u88c5 Python 2.7\uff0c \u4e0b\u8f7d\u5e76\u5b89\u88c5 Google Cloud SDK\u3002\\n\\n\u3000\u3000\u4f7f\u7528 gcloud init --skip-diagnostics \u6765\u521d\u59cb\u5316\u5e76\u767b\u9646Google\u8d26\u6237\uff0c\u9009\u62e9\u4e00\u4e2a\u5de5\u7a0b\u3002\u652f\u6301socks5\u4ee3\u7406\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\u628a\u4ee3\u7406\u8bbe\u7f6e\u4e0a\u3002\\n\\n![png](../img/SDK/1.png)\\n\\n![png](../img/SDK/2.png)"},{"id":"/2020/3/18/textCNN","metadata":{"permalink":"/blog/2020/3/18/textCNN","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2020-3-18-textCNN.md","source":"@site/blog/2020-3-18-textCNN.md","title":"textCNN\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5206\u7c7b","description":"\u4e91\u6da6\u4eba\u5de5\u667a\u80fd\u90e8\u95e8\u300aNLP\u96f6\u57fa\u7840\u5feb\u901f\u4e0a\u624b\u6559\u7a0b\u300b\u8bfe\u7a0b\u8d44\u6599 by \u7b97\u6cd5\u5de5\u7a0b\u5e08:\u62db\u6653\u8d24","date":"2020-03-18T00:00:00.000Z","formattedDate":"March 18, 2020","tags":[{"label":"facebook","permalink":"/blog/tags/facebook"},{"label":"hello","permalink":"/blog/tags/hello"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"}],"readingTime":4.69,"hasTruncateMarker":true,"authors":[{"name":"\u62db\u6653\u8d24","title":"AI Engineer","url":"https://github.com/flybirdgroup","imageURL":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg"}],"frontMatter":{"id":"welcome","title":"textCNN\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5206\u7c7b","author":"\u62db\u6653\u8d24","author_title":"AI Engineer","author_url":"https://github.com/flybirdgroup","author_image_url":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=1615738601,1434436036&fm=26&gp=0.jpg","tags":["facebook","hello","docusaurus"]},"prevItem":{"title":"\u4f7f\u7528Google Cloud SDK\u6765\u914d\u7f6eGoogle App Engine","permalink":"/blog/2020/3/18/google_cloud"},"nextItem":{"title":"Long Blog Post","permalink":"/blog/long-blog-post"}},"content":"**[\u4e91\u6da6\u4eba\u5de5\u667a\u80fd\u90e8\u95e8](https://my-website-six.now.sh/)\u300aNLP\u96f6\u57fa\u7840\u5feb\u901f\u4e0a\u624b\u6559\u7a0b\u300b\u8bfe\u7a0b\u8d44\u6599 by [\u7b97\u6cd5\u5de5\u7a0b\u5e08:\u62db\u6653\u8d24](https://github.com/flybirdgroup)**\\n\x3c!--truncate--\x3e\\n# \u83dc\u9e1f\u4e5f\u80fd\u73a9\u8f6cNLP-\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u6587\u672c\u5206\u7c7b\\n**[\u4e91\u6da6\u4eba\u5de5\u667a\u80fd\u90e8\u95e8](https://my-website-six.now.sh/)\u300aNLP\u96f6\u57fa\u7840\u5feb\u901f\u4e0a\u624b\u6559\u7a0b\u300b\u8bfe\u7a0b\u8d44\u6599 by [\u7b97\u6cd5\u5de5\u7a0b\u5e08:\u62db\u6653\u8d24](https://github.com/flybirdgroup)**\\n\\n## \u539f\u7406\u8bb2\u89e3\\nTextCNN\u51fa\u5904\uff1a\u8bba\u6587[Convolutional Neural Networks for Sentence Classification](http://www.aclweb.org/anthology/D14-1181)\\n\\n### \u8bba\u6587\u6838\u5fc3\u70b9\\n\\n![png](../img/CNN/TextCNN.png)\\n\\n1. Represent sentence with **static and non-static channels**.\\n2. **Convolve** with multiple filter widths and feature maps.\\n3. Use **max-over-time pooling**.\\n4. Use **fully connected layer** with **dropout** and **softmax** ouput.\\n\\n### TextCNN\u57fa\u7840\u77e5\u8bc6\\n#### \u8bcd\u5411\u91cf\\n1. \u968f\u673a\u521d\u59cb\u5316\\n2. \u9884\u8bad\u7ec3\u8bcd\u5411\u91cf\u8fdb\u884c\u521d\u59cb\u5316,\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u56fa\u5b9a(CNN-static),\u6ce8\u610f\u4e0e\u56fe\u50cfCNN\u7684\u4e0d\u540c\\n3. \u9884\u8bad\u7ec3\u8bcd\u5411\u91cf\u8fdb\u884c\u521d\u59cb\u5316,\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u5fae\u8c03(CNN-non-static)\\n4. \u591a\u901a\u9053(CNN-multichannel):\u5c06\u56fa\u5b9a\u7684\u9884\u8bad\u7ec3\u8bcd\u5411\u91cf\u548c\u5fae\u8c03\u7684\u8bcd\u5411\u91cf\u5206\u522b\u4f5c\u4e3a\u4e00\u4e2a\u901a\u9053(channel),\u5377\u79ef\u64cd\u4f5c\u540c\u65f6\u5728\u4e24\u4e2a\u901a\u9053\u4e0a\u8fdb\u884c,\u53ef\u4ee5\u7c7b\u6bd4\u56fe\u50cfRGB\u4e09\u901a\u9053\\n\\n#### \u8be6\u7ec6\u8bf4\u660e\\n1. \u4e0a\u56fe\u7684\u56fe\u7247\u4e3a\u4f8b,\u53e5\u5b50\u957f\u5ea6\u4e3an=9,\u8bcd\u5411\u91cf\u7ef4\u5ea6k\u4e3a6,filter\u6709\u4e24\u79cd\u7a97\u53e3\u5927\u5c0f,\u6bcf\u79cd\u67092\u4e2a,\u6240\u4ee5filter\u67094\u4e2a.\\n2. \u7ea2\u8272\u6846\u7684\u4e3ah=2,\u5377\u79ef\u540e\u7684\u5411\u91cf\u7ef4\u5ea6\u4e3an-h+1=9-2+1=8\\n3. \u9ec4\u8272\u6846h=3,\u5377\u79ef\u540e\u7684\u5411\u91cf\u7ef4\u5ea6\u662fn-h+1=9-3+1=7 (\u8bba\u6587\u539f\u56fe\u5c11\u753b\u4e86\u4e00\u4e2a\u7ef4\u5ea6)\\n\\n### \u9879\u76ee\u5b9e\u73b0\\n\\nTextCNN \u7684\u7f51\u7edc\u7ed3\u6784\uff1a\\n\\n\\n![png](../img/CNN/TextCNN_network_structure.png)\\n\\n\\n\\n## \u6a21\u578b\u6784\u5efa\u4e0e\u8bad\u7ec3\\n\\n### 1.\u5b9a\u4e49\u7f51\u7edc\u7ed3\u6784\\n\\n\\n```python\\nfrom tensorflow.keras import Input, Model\\nfrom tensorflow.keras.layers import Embedding, Dense, Conv1D, GlobalMaxPooling1D, Concatenate, Dropout\\n\\n#\u91cd\u8981\u53c2\u6570\u89e3\u91ca\\n#maxlen:\u53e5\u5b50\u6700\u5927\u957f\u5ea6\\n#max_features:\u8bcd\u5178\u6700\u5927\u6570\u91cf\\n# embeding_dims:\u8bcd\u5411\u91cf\u7ef4\u5ea6\u6570\\n#class_num: \u5206\u7c7b\u6570\\n#last_activation:\u6fc0\u6d3b\u51fd\u6570\\n\\nclass TextCNN(object):\\n    def __init__(self, maxlen, max_features, embedding_dims,\\n                 class_num=5,\\n                 last_activation=\'softmax\'):\\n        self.maxlen = maxlen\\n        self.max_features = max_features\\n        self.embedding_dims = embedding_dims\\n        self.class_num = class_num\\n        self.last_activation = last_activation\\n\\n    def get_model(self):\\n        input = Input((self.maxlen,))\\n        embedding = Embedding(self.max_features, self.embedding_dims, input_length=self.maxlen)(input)\\n        convs = []\\n        for kernel_size in [3, 4, 5]:\\n            c = Conv1D(128, kernel_size, activation=\'relu\')(embedding)\\n            c = GlobalMaxPooling1D()(c)\\n            convs.append(c)\\n        x = Concatenate()(convs)\\n\\n        output = Dense(self.class_num, activation=self.last_activation)(x)\\n        model = Model(inputs=input, outputs=output)\\n        return model\\n```\\n\\n### 2.\u6570\u636e\u5904\u7406\u4e0e\u8bad\u7ec3\\n\\n\\n```python\\nfrom tensorflow.keras.preprocessing import sequence\\nimport random\\nfrom sklearn.model_selection import train_test_split\\nfrom tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\\nfrom tensorflow.keras.utils import to_categorical\\nfrom utils import *\\n\\n# \u8def\u5f84\u7b49\u914d\u7f6e\\ndata_dir = \\"./processed_data\\"\\nvocab_file = \\"./vocab/vocab.txt\\"\\nvocab_size = 40000\\n\\n# \u795e\u7ecf\u7f51\u7edc\u914d\u7f6e\\nmax_features = 40001\\nmaxlen = 100\\nbatch_size = 64\\nembedding_dims = 50\\nepochs = 8\\n\\nprint(\'\u6570\u636e\u9884\u5904\u7406\u4e0e\u52a0\u8f7d\u6570\u636e...\')\\n# \u5982\u679c\u4e0d\u5b58\u5728\u8bcd\u6c47\u8868\uff0c\u91cd\u5efa\\nif not os.path.exists(vocab_file):  \\n    build_vocab(data_dir, vocab_file, vocab_size)\\n# \u83b7\u5f97 \u8bcd\u6c47/\u7c7b\u522b \u4e0eid\u6620\u5c04\u5b57\u5178\\ncategories, cat_to_id = read_category()\\nwords, word_to_id = read_vocab(vocab_file)\\n\\n# \u5168\u90e8\u6570\u636e\\nx, y = read_files(data_dir)\\ndata = list(zip(x,y))\\ndel x,y\\n# \u4e71\u5e8f\\nrandom.shuffle(data)\\n# \u5207\u5206\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\\ntrain_data, test_data = train_test_split(data)\\n# \u5bf9\u6587\u672c\u7684\u8bcdid\u548c\u7c7b\u522bid\u8fdb\u884c\u7f16\u7801\\nx_train = encode_sentences([content[0] for content in train_data], word_to_id)\\ny_train = to_categorical(encode_cate([content[1] for content in train_data], cat_to_id))\\nx_test = encode_sentences([content[0] for content in test_data], word_to_id)\\ny_test = to_categorical(encode_cate([content[1] for content in test_data], cat_to_id))\\n\\nprint(\'\u5bf9\u5e8f\u5217\u505apadding\uff0c\u4fdd\u8bc1\u662f samples*timestep \u7684\u7ef4\u5ea6\')\\nx_train = sequence.pad_sequences(x_train, maxlen=maxlen)\\nx_test = sequence.pad_sequences(x_test, maxlen=maxlen)\\nprint(\'x_train shape:\', x_train.shape)\\nprint(\'x_test shape:\', x_test.shape)\\n\\nprint(\'\u6784\u5efa\u6a21\u578b...\')\\nmodel = TextCNN(maxlen, max_features, embedding_dims).get_model()\\nmodel.compile(\'adam\', \'categorical_crossentropy\', metrics=[\'accuracy\'])\\n\\nprint(\'\u8bad\u7ec3...\')\\n# \u8bbe\u5b9acallbacks\u56de\u8c03\u51fd\u6570\\nmy_callbacks = [\\n    ModelCheckpoint(\'./cnn_model.h5\', verbose=1),\\n    EarlyStopping(monitor=\'val_accuracy\', patience=2, mode=\'max\')\\n]\\n\\n# fit\u62df\u5408\u6570\u636e\\nhistory = model.fit(x_train, y_train,\\n          batch_size=batch_size,\\n          epochs=epochs,\\n          callbacks=my_callbacks,\\n          validation_data=(x_test, y_test))\\n\\n#print(\'\u5bf9\u6d4b\u8bd5\u96c6\u9884\u6d4b...\')\\n#result = model.predict(x_test)\\n```\\n\\n\\n### 3.\u8bad\u7ec3\u4e2d\u95f4\u4fe1\u606f\u8f93\u51fa\\n\\n\\n```python\\nimport matplotlib.pyplot as plt\\nplt.switch_backend(\'agg\')\\n%matplotlib inline\\n\\nfig1 = plt.figure()\\nplt.plot(history.history[\'loss\'],\'r\',linewidth=3.0)\\nplt.plot(history.history[\'val_loss\'],\'b\',linewidth=3.0)\\nplt.legend([\'Training loss\', \'Validation Loss\'],fontsize=18)\\nplt.xlabel(\'Epochs \',fontsize=16)\\nplt.ylabel(\'Loss\',fontsize=16)\\nplt.title(\'Loss Curves :CNN\',fontsize=16)\\nfig1.savefig(\'loss_cnn.png\')\\nplt.show()\\n```\\n![png](../img/CNN/output_8_0.png)\\n\\n```python\\nfig2=plt.figure()\\nplt.plot(history.history[\'acc\'],\'r\',linewidth=3.0)\\nplt.plot(history.history[\'val_acc\'],\'b\',linewidth=3.0)\\nplt.legend([\'Training Accuracy\', \'Validation Accuracy\'],fontsize=18)\\nplt.xlabel(\'Epochs \',fontsize=16)\\nplt.ylabel(\'Accuracy\',fontsize=16)\\nplt.title(\'Accuracy Curves : CNN\',fontsize=16)\\nfig2.savefig(\'accuracy_cnn.png\')\\nplt.show()\\n```\\n\\n![png](../img/CNN/output_9_0.png)\\n\\n\\n### 4.\u6a21\u578b\u7ed3\u6784\u6253\u5370\\n\\n\\n```python\\nfrom tensorflow.keras.utils import plot_model\\nplot_model(model, show_shapes=True, show_layer_names=True)\\n```\\n![png](../img/CNN/CNN_structure.png)\\n\\n\\n\\n### 5.\u6a21\u578b\u5bfc\u51fa\\n```python\\nimport tensorflow as tf\\nimport shutil \\nmodel = tf.keras.models.load_model(\'./cnn_model.h5\')\\n```\\n\\n### 6.\u9884\u6d4b\u6a21\u578b\\n```python\\nimport jieba\\ntext = \\"\u6768\u5e42\u597d\u6f02\u4eae,\u53d1\u751f\u539f\u5b50\u5f39\\"\\nprint(jieba.lcut(text))\\ntext_seg = encode_sentences([jieba.lcut(text)], word_to_id)\\ntext_input = sequence.pad_sequences(text_seg, maxlen=maxlen)\\nprint(model.predict(text_input))\\n```\\n\\n###   7.\u524d\u540e\u7aef\u7ed3\u5408+docker\u90e8\u7f72\\n\u9879\u76eedemo\uff1adocker\u90e8\u7f72\u94fe\u63a5:[\u4e2d\u6587\u65b0\u95fb\u591a\u5206\u7c7bdemo](https://hub.docker.com/repository/docker/flybirdgroup/classifier)\\n\\n`docker\u542f\u52a8\u547d\u4ee4`\\n```python\\ndocker run -p 127.0.0.1:80:5000/tcp flybirdgroup/classifier\\n```\\n![png](../img/CNN/docker1.png)\\n\\n![png](../img/CNN/docker2.png)"},{"id":"long-blog-post","metadata":{"permalink":"/blog/long-blog-post","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2019-05-29-long-blog-post.md","source":"@site/blog/2019-05-29-long-blog-post.md","title":"Long Blog Post","description":"This is the summary of a very long blog post,","date":"2019-05-29T00:00:00.000Z","formattedDate":"May 29, 2019","tags":[{"label":"hello","permalink":"/blog/tags/hello"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"}],"readingTime":2.05,"hasTruncateMarker":true,"authors":[{"name":"Endilie Yacop Sucipto","title":"Maintainer of Docusaurus","url":"https://github.com/endiliey","imageURL":"https://github.com/endiliey.png","key":"endi"}],"frontMatter":{"slug":"long-blog-post","title":"Long Blog Post","authors":"endi","tags":["hello","docusaurus"]},"prevItem":{"title":"textCNN\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5206\u7c7b","permalink":"/blog/2020/3/18/textCNN"},"nextItem":{"title":"Long Blog Post","permalink":"/blog/long-blog-post"}},"content":"This is the summary of a very long blog post,\\n\\nUse a `\x3c!--` `truncate` `--\x3e` comment to limit blog post size in the list view.\\n\\n\x3c!--truncate--\x3e\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"},{"id":"long-blog-post","metadata":{"permalink":"/blog/long-blog-post","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2019-05-29-long-blog-post\u7684\u526f\u672c.md","source":"@site/blog/2019-05-29-long-blog-post\u7684\u526f\u672c.md","title":"Long Blog Post","description":"This is the summary of a very long blog post,","date":"2019-05-29T00:00:00.000Z","formattedDate":"May 29, 2019","tags":[{"label":"hello","permalink":"/blog/tags/hello"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"}],"readingTime":2.05,"hasTruncateMarker":true,"authors":[{"name":"Endilie Yacop Sucipto","title":"Maintainer of Docusaurus","url":"https://github.com/endiliey","imageURL":"https://github.com/endiliey.png","key":"endi"}],"frontMatter":{"slug":"long-blog-post","title":"Long Blog Post","authors":"endi","tags":["hello","docusaurus"]},"prevItem":{"title":"Long Blog Post","permalink":"/blog/long-blog-post"},"nextItem":{"title":"First Blog Post","permalink":"/blog/first-blog-post"}},"content":"This is the summary of a very long blog post,\\n\\nUse a `\x3c!--` `truncate` `--\x3e` comment to limit blog post size in the list view.\\n\\n\x3c!--truncate--\x3e\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"},{"id":"first-blog-post","metadata":{"permalink":"/blog/first-blog-post","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2019-05-28-first-blog-post.md","source":"@site/blog/2019-05-28-first-blog-post.md","title":"First Blog Post","description":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","date":"2019-05-28T00:00:00.000Z","formattedDate":"May 28, 2019","tags":[{"label":"hola","permalink":"/blog/tags/hola"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"}],"readingTime":0.12,"hasTruncateMarker":false,"authors":[{"name":"Gao Wei","title":"Docusaurus Core Team","url":"https://github.com/wgao19","image_url":"https://github.com/wgao19.png","imageURL":"https://github.com/wgao19.png"}],"frontMatter":{"slug":"first-blog-post","title":"First Blog Post","authors":{"name":"Gao Wei","title":"Docusaurus Core Team","url":"https://github.com/wgao19","image_url":"https://github.com/wgao19.png","imageURL":"https://github.com/wgao19.png"},"tags":["hola","docusaurus"]},"prevItem":{"title":"Long Blog Post","permalink":"/blog/long-blog-post"},"nextItem":{"title":"First Blog Post","permalink":"/blog/first-blog-post"}},"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"},{"id":"first-blog-post","metadata":{"permalink":"/blog/first-blog-post","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2019-05-28-first-blog-post\u7684\u526f\u672c.md","source":"@site/blog/2019-05-28-first-blog-post\u7684\u526f\u672c.md","title":"First Blog Post","description":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","date":"2019-05-28T00:00:00.000Z","formattedDate":"May 28, 2019","tags":[{"label":"hola","permalink":"/blog/tags/hola"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"}],"readingTime":0.12,"hasTruncateMarker":false,"authors":[{"name":"Gao Wei","title":"Docusaurus Core Team","url":"https://github.com/wgao19","image_url":"https://github.com/wgao19.png","imageURL":"https://github.com/wgao19.png"}],"frontMatter":{"slug":"first-blog-post","title":"First Blog Post","authors":{"name":"Gao Wei","title":"Docusaurus Core Team","url":"https://github.com/wgao19","image_url":"https://github.com/wgao19.png","imageURL":"https://github.com/wgao19.png"},"tags":["hola","docusaurus"]},"prevItem":{"title":"First Blog Post","permalink":"/blog/first-blog-post"}},"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"}]}')}}]);